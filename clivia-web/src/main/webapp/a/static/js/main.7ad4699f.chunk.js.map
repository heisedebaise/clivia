{"version":3,"sources":["http.js","request.jsx","sign.jsx","grid.jsx","upload.jsx","setting.jsx","main.jsx","serviceWorker.js","index.js"],"names":["service","uri","body","post","then","json","code","message","success","data","warn","fetch","method","headers","header","JSON","stringify","response","loader","setState","loading","ok","status","statusText","psid","localStorage","getItem","length","Math","random","toString","substring","setItem","Request","request","render","direction","style","width","React","Component","Sign","props","componentDidMount","change","current","Step","title","description","icon","className","id","onChange","defaultValue","state","time","secret","plain","sign","array","i","push","document","querySelector","value","Date","getTime","sort","join","md5","Grid","columns","dataIndex","key","require","CheckOutlined","CloseOutlined","dataSource","rowKey","pagination","locale","emptyText","image","PRESENTED_IMAGE_SIMPLE","Upload","responseFile","responseBase64","dashed","type","url","meta","name","upload","Setting","prefix","keys","map","kd","Main","logo","user","module","services","parameters","model","replace","list","page","d","show","zhCN","minHeight","Sider","src","alt","onClick","mode","theme","defaultOpenKeys","defaultSelectedKeys","item","menu","getFullYear","Header","Content","items","parent","menus","SubMenu","Item","e","window","location","href","pathname","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7ad4699f.chunk.js","sourcesContent":["import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Space } from 'antd';\n\nclass Request extends React.Component {\n    request = `const post = (url, body) => fetch(url, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst psid = (header) => {\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}`;\n\n    response = `{\n    \"code\": \"编码，0表示成功，大于0表示失败。\",\n    \"data\": \"数据，code===0时返回。\",\n    \"message\": \"失败信息说明，code>0时返回。\"\n}`;\n\n    render = () => {\n        return (\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <div>参考示例</div>\n                <pre>{this.request}</pre>\n                <div>返回结果</div>\n                <pre>{this.response}</pre>\n            </Space>\n        );\n    }\n}\n\nexport default Request;","import React from 'react';\nimport { Space, Steps, Input } from 'antd';\nimport md5 from 'md5';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let secret = '';\n        while (secret.length < 32) secret += Math.random().toString(36).substring(2);\n        secret = secret.substring(0, 32);\n        this.state = {\n            time: '',\n            secret: secret,\n            plain: '',\n            sign: ''\n        };\n    }\n\n    componentDidMount = () => {\n        this.change();\n    }\n\n    render = () => (\n        <Space direction=\"vertical\">\n            <Steps direction=\"vertical\" current={6}>\n                <Steps.Step title=\"添加签名时间戳参数\" description=\"获取当前时间戳，精确到毫秒，参数名为：sign-time。\" icon={1} />\n                <Steps.Step title=\"参数名排序\" description=\"将所有参数根据参数名ASCII码升序排列。\" icon={2} />\n                <Steps.Step title=\"拼接参数\" description=\"用等号'='拼接参数名与值，并用'&'符号连接，如：a=1&b=2&c=3&sign-time=1234567890123\" icon={3} />\n                <Steps.Step title=\"添加密钥\" description=\"添加'&secret={secret value}'\" icon={4} />\n                <Steps.Step title=\"计算MD5值\" description=\"计算字符串的MD5值，转化为小写字母，即为签名值，签名参数名为sign。\" icon={5} />\n            </Steps>\n            <div>示例</div>\n            <div className=\"sign-form\">\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\">参数名</div>\n                    <div className=\"sign-form-value\">参数值</div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\"><Input id=\"name-1\" onChange={this.change} defaultValue=\"a\" /></div>\n                    <div className=\"sign-form-value\"><Input id=\"value-1\" onChange={this.change} defaultValue=\"1\" /></div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\"><Input id=\"name-2\" onChange={this.change} defaultValue=\"b\" /></div>\n                    <div className=\"sign-form-value\"><Input id=\"value-2\" onChange={this.change} defaultValue=\"2\" /></div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\"><Input id=\"name-3\" onChange={this.change} defaultValue=\"c\" /></div>\n                    <div className=\"sign-form-value\"><Input id=\"value-3\" onChange={this.change} defaultValue=\"3\" /></div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\">sign-time</div>\n                    <div className=\"sign-form-value\">{this.state.time}</div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\">secret</div>\n                    <div className=\"sign-form-value\">{this.state.secret}</div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\">签名明文</div>\n                    <div className=\"sign-form-value sign-form-plain\">{this.state.plain}</div>\n                </div>\n                <div className=\"sign-form-line\">\n                    <div className=\"sign-form-label\">sign</div>\n                    <div className=\"sign-form-value\">{this.state.sign}</div>\n                </div>\n            </div>\n        </Space>\n    );\n\n    change = () => {\n        let array = [];\n        for (let i = 1; i <= 3; i++)\n            array.push(document.querySelector('#name-' + i).value + '=' + document.querySelector('#value-' + i).value);\n        let time = new Date().getTime();\n        array.push('sign-time=' + time);\n        array.sort();\n        array.push('secret=' + this.state.secret);\n        let plain = array.join('&');\n        this.setState({\n            time: time,\n            plain: plain,\n            sign: md5(plain)\n        });\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Table, Empty } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\nclass Grid extends React.Component {\n    render = () => (\n        <Table title={() => <div className=\"api-title\">{this.props.header ? '头信息' : '参数'}</div>} columns={[{\n            title: this.props.header ? '头名称' : '参数名',\n            dataIndex: 'name',\n            key: 'name',\n        }, {\n            title: '类型',\n            dataIndex: 'type',\n            key: 'type',\n        }, {\n            title: '必须',\n            dataIndex: 'require',\n            key: 'require',\n            render: require => require ? <CheckOutlined /> : <CloseOutlined />\n        }, {\n            title: '说明',\n            dataIndex: 'description',\n            key: 'description',\n        }]} dataSource={this.props.data} rowKey=\"name\" pagination={false}\n            locale={{ emptyText: <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={this.props.header ? '无需头信息' : '无需参数'} /> }} />\n    );\n}\n\nexport default Grid;","import React from 'react';\nimport { Space, Alert, Divider } from 'antd';\nimport Grid from './grid';\n\nclass Upload extends React.Component {\n    responseFile = `{\n    \"path\": \"文件URI地址\",\n    \"fileName\": \"原文件名\",\n    \"fileSize\": \"文件大小\",\n    \"success\": \"true-成功；false-失败\"\n}`;\n\n    responseBase64 = `{\n    \"code\": 0,\n    \"data\": {\n        \"path\": \"文件URI地址\",\n        \"fileName\": \"原文件名\",\n        \"fileSize\": \"文件大小\",\n        \"success\": \"true-成功；false-失败\"\n    }\n}`;\n\n    render = () => (\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Divider dashed={true}>文件方式上传</Divider>\n            <Alert type=\"info\" message={'接口地址：' + this.props.url + '/photon/ctrl-http/upload'} />\n            <Grid header={true} data={this.props.meta.headers} />\n            <Grid header={false} data={[{ name: this.props.meta.upload, type: 'file', require: true, description: '上传文件。' }]} />\n            <div>返回结果</div>\n            <pre>{this.responseFile}</pre>\n            <Divider dashed={true}>Base64方式上传</Divider>\n            <Alert type=\"info\" message={'接口地址：' + this.props.url + '/photon/ctrl/upload'} />\n            <Grid header={true} data={this.props.meta.headers} />\n            <Grid header={false} data={[{ name: 'name', type: 'string', require: true, description: '固定为：' + this.props.meta.upload + '。' },\n            { name: 'contentType', type: 'string', require: true, description: '文件格式，如：image/jpeg。' },\n            { name: 'fileName', type: 'string', require: true, description: '原文件名。' },\n            { name: 'base64', type: 'string', require: true, description: 'BASE64编码后的文件内容，不包含Content-Type。' }]} />\n            <div>返回结果</div>\n            <pre>{this.responseBase64}</pre>\n            <Divider dashed={true}>cURL方式上传</Divider>\n            <Alert type=\"info\" message={'接口地址：' + this.props.url + '/photon/ctrl-http/upload'} />\n            <div>发送</div>\n            <pre>curl -H 'photon-session-id: {localStorage.getItem('photon-session-id')}' -F '{this.props.meta.upload}=@/path/to/file' {this.props.url}/photon/ctrl-http/upload</pre>\n            <div>返回结果</div>\n            <pre>{this.responseFile}</pre>\n        </Space>\n    );\n}\n\nexport default Upload;","import React from 'react';\nimport { Space, Alert } from 'antd';\nimport Grid from './grid';\n\nclass Setting extends React.Component {\n    render = () => (\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Alert type=\"info\" message={'接口地址：' + this.props.url + '/keyvalue/object'} />\n            <Grid header={true} data={[{\n                name: 'photon-session-id',\n                type: 'string',\n                require: true,\n                description: '用户SESSION ID值，如：' + localStorage.getItem('photon-session-id') + '。'\n            }]} />\n            <Grid header={false} data={[{ name: 'key', type: 'string', require: true, description: '固定为：【' + this.props.meta.prefix + '】。' }]} />\n            <div>返回结果</div>\n            <pre>{'{\\n' + this.props.meta.keys.map(kd => '    \"' + kd.key + '\":\"' + kd.description + '\",\\n').join('') + '}'}</pre>\n        </Space>\n    );\n}\n\nexport default Setting;","import React from 'react';\nimport { ConfigProvider, Layout, Menu, Space, Alert } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, url } from './http';\nimport Request from './request';\nimport Sign from './sign';\nimport Grid from './grid';\nimport Upload from './upload';\nimport Setting from './setting';\nimport './main.css';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            logo: '',\n            user: {},\n            data: [],\n            item: {}\n        };\n        this.map = {};\n        this.url = window.location.href;\n        this.url = this.url.substring(0, this.url.length - window.location.pathname.length);\n    }\n\n    componentDidMount = () => {\n        service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n            if (data === null) return;\n\n            document.title = data['setting.global.console.title'] || 'Clivia API';\n            this.setState({ logo: data['setting.global.console.logo'] });\n        });\n        service('/user/sign').then(data => this.setState({ user: data }));\n        service('/api/get').then(data => {\n            if (data === null) return;\n\n            for (let module of data) {\n                for (let service of module.services) {\n                    if (service.psid) {\n                        if (!service.headers) service.headers = [];\n                        service.headers.push({\n                            name: 'photon-session-id',\n                            type: 'string',\n                            require: true,\n                            description: '用户SESSION ID值，如：' + localStorage.getItem('photon-session-id') + '。'\n                        });\n                    }\n                    if (service.sign) {\n                        if (!service.parameters) service.parameters = [];\n                        service.parameters.push({ name: 'sign-time', type: 'long', require: true, description: '签名时间戳，精确到毫秒。' });\n                        service.parameters.push({ name: 'sign', type: 'string', require: true, description: '参数签名，规则参考【通用->参数签名】页。' });\n                    }\n                    if (module.model) {\n                        if (service.response === 'model')\n                            service.response = module.model;\n                        else if (service.response.length === 1 && service.response[0] === 'model')\n                            service.response = '[' + module.model + ']';\n                        else if (service.response === 'pagination') {\n                            if (!service.parameters) service.parameters = [];\n                            service.parameters.push({ name: 'pageSize', type: 'int', description: '每页显示记录数，默认：20。' });\n                            service.parameters.push({ name: 'pageNum', type: 'int', description: '当前显示页数。' });\n                            service.response = `{\n    \"count\":\"记录总数。\",\n    \"size\":\"每页最大显示记录数。\",\n    \"number\":\"当前显示页数。\",\n    \"page\":\"总页数。\",\n    \"list\":[\n        `+ module.model.replace(/\\n {4}/g, '\\n            ').replace('\\n}', '\\n        }') + `\n    ]\n}`;\n                        }\n                    }\n                }\n            }\n            let list = [{\n                name: '通用',\n                services: [{\n                    name: 'HTTP请求',\n                    page: 'request'\n                }, {\n                    name: '参数签名',\n                    page: 'sign'\n                }]\n            }];\n            for (let d of data)\n                list.push(d);\n            this.setState({ data: list }, () => this.show({ key: '0-0-0' }));\n        });\n    }\n\n    render = () => (\n        <ConfigProvider locale={zhCN}>\n            <Layout style={{ minHeight: '100vh' }}>\n                <Layout.Sider>\n                    <div className=\"api-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n                    <div className=\"api-menu\"><Menu onClick={this.show} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item.uri ? '0-0' : '0-0-0']}>{this.menu(this.state.data, '0')}</Menu></div>\n                    <div className=\"api-copyright\">clivia-api &copy; {new Date().getFullYear()}</div>\n                </Layout.Sider>\n                <Layout>\n                    <Layout.Header className=\"api-header\">\n                    </Layout.Header>\n                    <Layout.Content>\n                        <div className=\"api-body\">{this.body()}</div>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </ConfigProvider>\n    );\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.services)\n                menus.push(<Menu.SubMenu key={key} title={<span>{item.name}</span>} >{this.menu(item.services, key)}</Menu.SubMenu>);\n            else {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.name}</Menu.Item>);\n            }\n        }\n\n        return menus;\n    };\n\n    show = e => {\n        this.setState({ item: this.map[e.key] });\n    }\n\n    body = () => {\n        if (this.state.item.page) {\n            switch (this.state.item.page) {\n                case 'request':\n                    return <Request />;\n                case 'sign':\n                    return <Sign />;\n                case 'upload':\n                    return <Upload url={this.url} meta={this.state.item} />;\n                case 'setting':\n                    return <Setting url={this.url} meta={this.state.item} />;\n                default:\n                    return <div />;\n            }\n        }\n\n        return (\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Alert type=\"info\" message={'接口地址：' + this.url + this.state.item.uri} />\n                <Grid header={true} data={this.state.item.headers} />\n                <Grid header={false} data={this.state.item.parameters} />\n                <div className=\"api-response-title\">返回</div>\n                <pre>{this.state.item.response}</pre>\n            </Space>\n        );\n    }\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}