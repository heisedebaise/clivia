{"version":3,"sources":["console/category.jsx","console/user.jsx","http.js","console/grid.jsx","console/dselect.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/meta.js","console/numeric.js","json.js"],"names":["Category","props","format","target","source","length","category","element","title","name","value","id","children","push","change","setState","form","render","treeData","state","list","treeDefaultExpandedKeys","onChange","service","key","pointTo","then","data","React","Component","User","uids","className","avatar","map","uid","line","src","url","auth","i","type","uri","body","post","json","code","message","success","warn","fetch","method","headers","header","JSON","stringify","response","loader","loading","localStorage","removeItem","ok","status","statusText","upload","file","psid","FormData","append","getItem","Math","random","toString","substring","setItem","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","dselect","prop","style","eval","condition","e","button","op","onClick","operate","bind","action","reload","search","searches","input","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","indexOf","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","parameter","window","location","href","ids","parent","preview","currentTarget","cancel","switch","check","param","pagination","Array","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","createRef","Search","grid","hidden","toMoney","empty","toPercent","imgs","img","toArray","rel","s","defaultChecked","disabled","options","vname","lname","d","option","dataIndex","ops","mops","when","items","Item","overlay","cols","initialValues","item","span","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","console","log","DSelect","componentDidMount","focus","filter","toLowerCase","showSearch","onFocus","onSearch","filterOption","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","f","progress","strokeColor","strokeWidth","percent","parseFloat","toFixed","UploadOutlined","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","setFieldsValue","toInt","k","moment","fromMoney","fromPercent","join","submit","is","child","c","parse","plus","itemIndex","startsWith","icon","SyncOutlined","refresh","valuePropName","obj","PaperClipOutlined","mode","allowClear","showTime","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","undefined","ks","arr","Setting","kvs","replace","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","Promise","resolve","reject","full","sub","ps","fn","parseInt","round","trim","text"],"mappings":"6KAIMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAoBVC,OAAS,SAACC,EAAQC,GACd,GAAsB,IAAlBA,EAAOC,OAAX,CADyB,oBAIJD,GAJI,IAIzB,2BAA6B,CAAC,IAArBE,EAAoB,QACrBC,EAAU,CACVC,MAAOF,EAASG,KAChBC,MAAOJ,EAASK,IAEhBL,EAASM,WACTL,EAAQK,SAAW,GACnB,EAAKV,OAAOK,EAAQK,SAAUN,EAASM,WAE3CT,EAAOU,KAAKN,IAbS,iCArBV,EAsCnBO,OAAS,SAAAJ,GACL,EAAKK,SAAS,CACVL,MAAOA,IAEX,EAAKT,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAMC,IA1CxB,EA6CnBO,OAAS,kBAAM,mBAAYC,SAAU,EAAKC,MAAMC,KAAMV,MAAO,EAAKS,MAAMT,MAAOW,wBAAyB,CAAC,EAAKF,MAAMT,OAAQY,SAAU,EAAKR,UA1CvI,EAAKK,MAAQ,CACTC,KAAM,GACNV,MAAO,IAEXT,EAAMe,KAAKN,MAAMT,EAAMQ,KAAMR,EAAMS,OACnCa,YAAQ,iBAAkB,CAAEC,IAAKvB,EAAMmB,KAAMK,QAASxB,EAAMwB,UAAWC,MAAK,SAAAC,GACxE,GAAa,OAATA,EAAJ,CAGA,IAAIR,EAAQ,CACRC,KAAM,GACNV,MAAOT,EAAMS,OAEjB,EAAKR,OAAOiB,EAAMC,KAAMO,GACxB,EAAKZ,SAASI,OAjBH,E,UADAS,IAAMC,WAiDd7B,O,sHChDT8B,G,mNACFb,OAAS,WACL,IAAK,EAAKhB,MAAM0B,KACZ,OAAO,KAEX,IAAII,EAAO,EAAKA,OAEhB,OACI,sBAAKC,UAAU,OAAf,UACK,EAAKC,SACN,sBAAKD,UAAU,YAAf,UACKD,EAAKG,KAAI,SAAAC,GAAG,OAAI,qBAAKH,UAAU,WAAf,SAA2BG,OAC3C,EAAKC,KAAKL,EAAM,QAChB,EAAKK,KAAKL,EAAM,QAChB,EAAKK,KAAKL,EAAM,UAChB,EAAKK,KAAKL,EAAM,gB,EAMjCE,OAAS,WACL,OAAK,EAAKhC,MAAM0B,KAAKM,OAGd,qBAAKD,UAAU,cAAf,SAA6B,mBAAQK,IAAKC,YAAI,EAAKrC,MAAM0B,KAAKM,YAF1D,M,EAKfF,KAAO,WACH,IAAK,EAAK9B,MAAM0B,KAAKY,MAAQ,EAAKtC,MAAM0B,KAAKY,KAAKlC,QAAU,EACxD,MAAO,GAGX,IADA,IAAI0B,EAAO,GACFS,EAAI,EAAGA,EAAI,EAAKvC,MAAM0B,KAAKY,KAAKlC,OAAQmC,IACxC,EAAKvC,MAAM0B,KAAKY,KAAKC,GAAGC,MACzBV,EAAKlB,KAAK,EAAKZ,MAAM0B,KAAKY,KAAKC,GAAGL,KAE1C,OAAOJ,G,EAGXK,KAAO,SAACL,EAAMtB,GACV,IAAIC,EAAQ,EAAKT,MAAM0B,KAAKlB,GAC5B,IAAKC,EACD,OAAO,KAHQ,oBAKHqB,GALG,IAKnB,4BACI,GADJ,UACgBrB,EACR,OAAO,MAPI,8BASnB,OAAO,qBAAKsB,UAAW,QAAUvB,EAA1B,SAAiCC,K,YAjD7BkB,IAAMC,YAqDVC,O,6NCpDTP,EAAU,SAACmB,EAAKC,GAAN,OAAeC,EAAKF,EAAKC,GAAMjB,MAAK,SAAAmB,GAChD,OAAa,OAATA,EAAsB,KAER,IAAdA,EAAKC,MACDD,EAAKE,SACL,IAAQC,QAAQH,EAAKE,SAElBF,EAAKlB,OAGhB,IAAQsB,KAAK,IAAMJ,EAAKC,KAAO,IAAMD,EAAKE,SAEnC,UAGLH,EAAO,SAAPA,EAAQF,EAAKC,GAAN,OAAeO,MAjBf,GAiB4BR,EAAK,CAC1CS,OAAQ,OACRC,QAASC,IACTV,KAAMW,KAAKC,UAAUZ,KACtBjB,MAAK,SAAA8B,GAUJ,OATIZ,EAAKa,QACLb,EAAKa,OAAO1C,SAAS,CACjB2C,SAAS,IAIL,mBAARhB,GACAiB,aAAaC,WAAW,qBAExBJ,EAASK,GAAWL,EAASX,QAEjC,IAAQI,KAAK,IAAMO,EAASM,OAAS,IAAMN,EAASO,YAE7C,UAGLC,EAAS,SAACvD,EAAMwD,GAClB,IAAIZ,EAAS,GACba,EAAKb,GAAQ,GACb,IAAIV,EAAO,IAAIwB,SAGf,OAFAxB,EAAKyB,OAAO3D,EAAMwD,GAEXf,MAAa,2BAA4B,CAC5CC,OAAQ,OACRC,QAASC,EACTV,KAAMA,IACPjB,MAAK,SAAA8B,GAOJ,OANIZ,EAAKa,QACLb,EAAKa,OAAO1C,SAAS,CACjB2C,SAAS,IAIbF,EAASK,GACFL,EAASX,OAAOnB,MAAK,SAAAmB,GACxB,OAAIA,EAAKG,QACEH,GAEX,IAAQI,KAAKJ,EAAKE,SAEX,UAIf,IAAQE,KAAK,IAAMO,EAASM,OAAS,IAAMN,EAASO,YAE7C,UAITV,EAAS,WACX,IAAIA,EAAS,CACT,eAAgB,oBAIpB,OAFAa,EAAKb,GAAQ,GAENA,GAGLf,EAAM,SAAAI,GAAG,MAjFF,GAiFaA,GAEpBwB,EAAO,SAACb,EAAQK,GACdA,GAAWd,EAAKa,QAChBb,EAAKa,OAAO1C,SAAS,CACjB2C,SAAS,IAIjB,IAAIQ,EAAOP,aAAaU,QAAQ,qBAChC,IAAKH,EAAM,CAEP,IADAA,EAAO,GACAA,EAAK7D,OAAS,IAAI6D,GAAQI,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACtEP,EAAOA,EAAKO,UAAU,EAAG,IACzBd,aAAae,QAAQ,oBAAqBR,GAE9Cb,EAAO,qBAAuBa,GAG5BT,EAAS,SAAAA,GAAM,OAAIb,EAAKa,OAASA,I,qtIC7F/BkB,Y,oDAAAA,YAEFC,K,8YACF,cAAY3E,OAAQ,IAAD,2LACf,uBAAMA,OADS,MAyInBS,MAAQ,SAACmE,EAAOpE,GACZ,IADqB,EACjBqE,EAAID,EADa,uLAEPpE,EAAKsE,MAAM,MAFJ,IAErB,2BAA+B,CAAC,IAAvBC,EAAsB,QAC3B,KAAIA,KAAKF,GAGL,MAAO,GAFPA,EAAIA,EAAEE,IAJO,8BASrB,OAAU,IAANF,EACO,EAEJA,GAAK,IArJG,MAwJnBG,SAAW,SAACC,EAAQxE,GAChB,IAAKA,EAAO,MAAO,GAEnB,IAH0B,EAGtByE,EAAS,GAHa,uLAIZzE,GAJY,IAI1B,2BAAqB,CAAC,IACd0E,EAAQF,EADK,SAEbE,IACAD,GAAU,IAAMC,IAPE,8BAU1B,OAAOD,EAAO9E,OAAS,EAAI8E,EAAOV,UAAU,GAAK,IAlKlC,MAqKnBY,QAAU,SAACC,EAAMT,GACb,IAAInE,EAAQ,MAAKA,MAAMmE,EAAOS,EAAK7E,MACnC,OAAK,MAAKU,MAAMkE,SAAY,MAAKlE,MAAMkE,QAAQC,EAAK7E,MAE7C,MAAKU,MAAMkE,QAAQC,EAAK7E,MAAMC,GAF6B,SAvKnD,MA4KnB6E,MAAQ,SAACD,KAAMT,MAAOtE,SAClB,GAAI+E,KAAKC,MAAO,CAAC,IAAD,gMACMD,KAAKC,OADX,WACZ,kDAA8B,CAAC,IAAtBA,MAAqB,aAC1B,IAEI,GAAIC,KAAKD,MAAME,WACX,OAAO,mEAAKF,MAAOA,MAAM7E,MAAlB,SAA0BH,UACvC,MAAOmF,MAND,qDAUhB,OAAOnF,SAvLQ,MA0LnBoF,OAAS,SAAAC,GAAE,OAAI,4GAAuBC,QAAS,MAAKC,QAAQC,KAAb,wLAAwBH,EAAI,MAA5D,SAAoEA,EAAGR,OAA1DQ,EAAGR,QA1LZ,MA4LnBY,OAAS,SAACJ,EAAIf,GAAL,OAAe,oEAAqB7C,UAAU,kBAAkB6D,QAAS,MAAKC,QAAQC,KAAb,wLAAwBH,EAAIf,GAAtF,SAA+Fe,EAAGR,OAAvFQ,EAAGR,QA5LnB,MA8LnBU,QAAU,SAACF,EAAIf,GACX,GAAgB,WAAZe,EAAGnD,MAAiC,YAAZmD,EAAGnD,KAM/B,GAAgB,WAAZmD,EAAGnD,MAAqBmD,EAAGK,OAC3B,MAAKA,OAAOL,EAAIf,EAAO,SAK3B,GAAIe,EAAGM,OACH,MAAKD,OAAOL,EAAIf,EAAO,MAAKsB,iBAKhC,GAAgB,QAAZP,EAAGnD,KAAP,CAUA,GAAgB,WAAZmD,EAAGnD,KAAmB,CACtB,IAAI2D,EAAQC,SAASC,cAAc,SA8BnC,OA7BAF,EAAM3D,KAAO,OACb2D,EAAMb,MAAMgB,QAAU,OACtBH,EAAMI,SAAW,SAAAd,GACb,GAAKA,EAAEvF,OAAOsG,OAAmC,IAA1Bf,EAAEvF,OAAOsG,MAAMpG,OAAtC,CAEA,IAAIqG,EAAS,IAAIC,WACb1C,EAAOyB,EAAEvF,OAAOsG,MAAM,GAC1BC,EAAOE,OAAS,WACPF,EAAOG,QAAmC,kBAAlBH,EAAOG,QAIpCtF,8CAAQ,sBAAuB,CAC3Bd,KAAMmF,EAAG5B,OACT8C,SAAU7C,EAAKxD,KACfsG,YAAa9C,EAAKxB,KAClBuE,OAAQN,EAAOG,OAAOpC,UAAUiC,EAAOG,OAAOI,QAAQ,KAAO,KAC9DvF,MAAK,SAAAC,GACJ0E,SAAS1D,KAAKuE,YAAYd,GACb,OAATzE,GAEJ,MAAKwF,KAAK,CAAEC,QAAS,MAAKC,SAAW,QAG7CX,EAAOY,cAAcrD,KAEzBoC,SAAS1D,KAAK4E,YAAYnB,QAC1BA,EAAMoB,QAKM,aAAZ5B,EAAGnD,MAMHoC,GAASA,EAAMjE,iBACRiE,EAAMjE,SAED,SAAZgF,EAAGnD,KACH,MAAKxC,MAAM0C,KAAK8E,KAAK7B,EAAG6B,KAAM,MAAKxH,MAAMyH,UAAW7C,GAEpD,MAAK5E,MAAM0C,KAAKwE,KAAK,MAAKlH,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAAO,MAAKxC,MAAMyH,UAAW7C,IAXvG8C,OAAOC,SAASC,KAAOjC,EAAGrE,YA7C9B,CACI,IADmB,EACfuG,EAAM,GADS,uLAEL,MAAK3G,MAAMC,MAFN,IAEnB,4BACI0G,GAAO,IADX,QACmBnH,IAHA,8BAIfmH,EAAIzH,OAAS,GACb,MAAK4F,OAAOL,EAAIf,EAAO,CAAEiD,IAAKA,EAAIrD,UAAU,UAtBhD,MAAKxE,MAAM0C,KAAKwE,KAAK,MAAKlH,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAAO,MAAKxC,MAAMyH,UAAW7C,GAASA,EAAMlE,GAAK,CAAEoH,OAAQlD,EAAMlE,IAAO,KAhMvI,MA4QnBqH,QAAU,SAAAtC,GAAC,OAAI,MAAK3E,SAAS,CAAEiH,QAAStC,EAAEuC,cAAc5F,OA5QrC,MA8QnB6F,OAAS,kBAAM,MAAKnH,SAAS,CAAEiH,QAAS,QA9QrB,MAgRnBG,OAAS,SAACvC,EAAIf,EAAOuD,GACjB,IAAIV,EAAY,GAChBA,EAAU9B,EAAGnF,MAAQ2H,EAAQ,EAAI,EACjC,MAAKnC,OAAOL,EAAIf,EAAO6C,IAnRR,MAsRnBzB,OAAS,SAACL,EAAIf,EAAO6C,GACjB,IAAIW,EAAK,qVAAQxD,GAAU6C,GACvB9B,EAAG8B,YACHW,EAAK,qVAAQA,GAAUzC,EAAG8B,YAC1B,MAAKzH,MAAMyH,YACXW,EAAK,qVAAQA,GAAU,MAAKpI,MAAMyH,YACtCnG,8CAAQ,MAAKtB,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAAO4F,GAAO3G,MAAK,SAAAC,GAC/D,OAATA,GAEJ,MAAKwF,KAAK,CAAEC,QAAS,MAAKC,SAAW,QA/R1B,MAmSnBF,KAAO,SAAAmB,GACH,IAAIZ,EAAY,MAAKvB,WACjBmC,IACAZ,EAAUL,QAAUiB,EAAWlB,SAC/B,MAAKnH,MAAMyH,YACXA,EAAS,qVAAQA,GAAc,MAAKzH,MAAMyH,YAC9CnG,8CAAQ,MAAKtB,MAAMyC,IAAKgF,GAAWhG,MAAK,SAAAC,GACvB,OAATA,GAEJ,MAAKZ,SAAS,CACVK,KAAM,KACP,WACC,GAAIO,aAAgB4G,MAChB,MAAKxH,SAAS,CACVK,KAAMO,QAEP,CACH,MAAK0F,QAAU1F,EAAK6G,OACpB,IAAIrH,EAAQ,CAAEC,KAAMO,EAAKP,MACrBO,EAAK8G,OAAS9G,EAAK+G,KACnBvH,EAAMmH,YAAa,EAEnBnH,EAAMmH,WAAa,CACfK,MAAOhH,EAAK8G,MACZG,SAAUjH,EAAK+G,KACftB,QAASzF,EAAK6G,QAGlB,MAAKvI,MAAM4I,KAAKC,OAChB3H,EAAM,MAAKlB,MAAM4I,KAAKC,MAAQnH,EAAK,MAAK1B,MAAM4I,KAAKC,OACvD,MAAK/H,SAASI,WAjUX,MAuUnBgF,SAAW,WACP,IAAK,MAAKnF,OAAS,MAAKA,KAAKoG,UAAY,MAAK2B,aAA2C,IAA5B,MAAKA,YAAY1I,OAAc,MAAO,GAEnG,IAHa,EAGT6E,EAAS,MAAKlE,KAAKoG,QAAQ4B,iBAHlB,uLAIM,MAAKD,aAJX,IAIb,2BAAqC,CAAC,IAA7BE,EAA4B,QACjC,GAAoB,UAAhBA,EAAOxG,KAAX,CAQA,IAAI/B,EAAQwE,EAAO+D,EAAOxI,MACrBC,IAEe,SAAhBuI,EAAOxG,KACPyC,EAAO+D,EAAOxI,MAAQC,EAAMR,OAAO,cACZ,eAAhB+I,EAAOxG,OACO,IAAjB/B,EAAML,OACN6E,EAAO+D,EAAOxI,MAAQ,GAEtByE,EAAO+D,EAAOxI,MAAQC,EAAM,GAAGR,OAAO,cAAgB,IAAMQ,EAAM,GAAGR,OAAO,qBAhBhFgF,EAAO+D,EAAOxI,OAASyE,EAAO+D,EAAOxI,KAAO,UAAY,IAAM,KAAOyE,EAAO+D,EAAOxI,KAAO,QAAU,WAC7FyE,EAAO+D,EAAOxI,KAAO,gBACrByE,EAAO+D,EAAOxI,KAAO,QARvB,8BA0Bb,OAAOyE,GAjWQ,MAoWnBjE,OAAS,WACL,IAAIiI,EAAW,GAaf,OAZI,MAAKjJ,MAAM4I,KAAKC,MAChBI,EAASrI,KAAK,mEAA0CmB,UAAU,eAAemH,wBAAyB,CAAEC,OAAQ,MAAKjI,MAAM,MAAKlB,MAAM4I,KAAKC,QAAvH,QAAU,MAAK7I,MAAM4I,KAAKC,OAClD,MAAK5C,OAAQgD,EAASrI,KAAK,MAAKqF,QAC3B,MAAKmD,SAASH,EAASrI,KAAK,mEAAmBmB,UAAU,uBAA7B,SAAqD,MAAKqH,SAAjD,YAC9CH,EAASrI,KAAK,2GAAmByI,QAAS,MAAKA,QAASC,WAAY,MAAKpI,MAAMC,KAAMoI,OAAO,KAAKlB,WAAY,MAAKnH,MAAMmH,WACpHhH,SAAU,MAAK6F,KAAMnF,UAAU,gBADV,UAEzBkH,EAASrI,KACL,2GAAqB4I,QAA+B,MAAtB,MAAKtI,MAAM6G,QAAiB0B,OAAQ,KAAMC,SAAU,MAAKzB,OAAvF,SACI,mEAAK3C,MAAO,CAAEqE,MAAO,QAAUvH,IAAK,MAAKlB,MAAM6G,QAAS6B,IAAI,MADrD,YAKRX,GA/WP,MAAK/H,MAAQ,CACTC,KAAM,GACNiE,QAAS,GACTiD,YAAY,EACZN,QAAS,MAGb,IAAIsB,QAAUT,sCAAK5I,MAAMA,MAAMA,MAAOA,MAAM4I,KAAK5I,OACjD,GAAIA,MAAM4I,KAAK3C,QAAUjG,MAAM4I,KAAK3C,OAAO7F,OAAS,EAChD,MAAKW,KAAOY,8CAAMkI,YAClB,MAAKf,YAAcF,sCAAK5I,MAAMqJ,QAASrJ,MAAM4I,KAAK3C,QAClD,MAAKA,OAAS,4DAAC6D,OAAD,CAAqB9J,MAAO,MAAK8I,YAAaM,QAASpJ,MAAM4I,KAAKQ,QAASW,KAAI,wLAAQhJ,KAAM,MAAKA,KAAMqE,QAAS,MAAKlE,MAAMkE,SAAhH,eACvB,GAAIpF,MAAM4I,KAAKQ,SAAWpJ,MAAM4I,KAAKQ,QAAQhJ,OAAS,EAAG,CAC5D,MAAKgJ,QAAU,GAD6C,oMAExCpJ,MAAM4I,KAAKQ,SAF6B,WAE5D,kDAAwC,CAAC,IAAhCA,QAA+B,aAC/BA,QAAQY,QACT,MAAKZ,QAAQxI,KAAK,MAAK8E,OAAO0D,WAJsB,qDAShE,MAAKC,QAAU,GAxBA,oMAyBEA,SAzBF,0CAyBNhE,KAzBM,aA0BP2D,OAAS,CAAEzH,IAAK8D,KAAK7E,KAAMD,MAAO8E,KAAKF,OACvCE,KAAKH,OACL8D,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOS,KAAKL,SAAW,MAAKA,SAASK,KAAKH,OAAQ,MAAKzE,MAAMmE,EAAOS,KAAK7E,OAAS6E,KAAKH,OAAO,MAAKzE,MAAMmE,EAAOS,KAAK7E,SAC1J6E,KAAKJ,OACV+D,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOS,KAAKL,SAAW,MAAKA,SAASK,KAAKJ,OAAQ,MAAKxE,MAAMmE,EAAOS,KAAK7E,OAAS6E,KAAKJ,OAAO,MAAKxE,MAAMmE,EAAOS,KAAK7E,SAC5I,UAAd6E,KAAK7C,MAAkC,oBAAd6C,KAAK7C,KACnCwG,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOqF,iDAAQ,MAAKxJ,MAAMmE,EAAOS,KAAK7E,MAAO6E,KAAK6E,SACzE,YAAd7E,KAAK7C,MAAoC,sBAAd6C,KAAK7C,KACrCwG,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOuF,iDAAU,MAAK1J,MAAMmE,EAAOS,KAAK7E,SAC/D,UAAd6E,KAAK7C,MAAkC,oBAAd6C,KAAK7C,KACnCwG,OAAOhI,OAAS,SAAA4D,GACZ,IAAInE,EAAQ,MAAKA,MAAMmE,EAAOS,KAAK7E,MACnC,GAAc,KAAVC,EAAc,OAAO,MAAK6E,MAAMD,KAAMT,EAAO,IAEjD,IAA4B,IAAxBnE,EAAMuG,QAAQ,KAAa,OAAO,MAAK1B,MAAMD,KAAMT,EAAO,mEAAKxC,IAAKC,8CAAI5B,GAAQmJ,IAAI,GAAGhE,QAAS,MAAKmC,WAEzG,IANqB,EAMjBqC,EAAO,GANU,uLAOL3J,EAAMqE,MAAM,MAPP,IAOrB,gCAASuF,EAAT,QACID,EAAKxJ,KAAK,mEAAmCwB,IAAKC,8CAAIgI,GAAMT,IAAI,GAAGhE,QAAS,MAAKmC,SAA7D1C,KAAK7E,KAAO4J,EAAKhK,UARpB,kCAUrB,OAAO,MAAKkF,MAAMD,KAAMT,EAAOwF,IAEd,SAAd/E,KAAK7C,MAAiC,mBAAd6C,KAAK7C,KACpCwG,OAAOhI,OAAS,SAAA4D,GACZ,IADqB,EACjB4B,EAAQ,GADS,uLAEJ8D,8CAAQ,MAAK7J,MAAMmE,EAAOS,KAAK7E,QAF3B,IAErB,2BAAwD,CAAC,IAAhDwD,EAA+C,QACpDwC,EAAM5F,KAAK,oEAAkCmB,UAAU,OAA5C,UACP,4DAAC,kDAAD,IACA,iEAAG6F,KAAMvF,8CAAI2B,EAAKvB,KAAMvC,OAAO,SAASqK,IAAI,sBAA5C,SAAmEvG,EAAKxD,SAFvD,QAAUgG,EAAMpG,UAHpB,kCASrB,OAAO,MAAKkF,MAAMD,KAAMT,EAAO4B,IAEd,WAAdnB,KAAK7C,KACZwG,OAAOhI,OAAS,SAAA4D,GACZ,IAAI4F,EAAI,CAAEC,eAAiD,IAAjC,MAAKhK,MAAMmE,EAAOS,KAAK7E,OAMjD,OALI6E,KAAK/D,QACLkJ,EAAEnJ,SAAW,MAAK6G,OAAOpC,KAAZ,wLAAuBT,KAAMT,GAE1C4F,EAAEE,UAAW,EAEV,MAAKpF,MAAMD,KAAMT,EAAO,uRAAY4F,MAE1B,YAAdnF,KAAK7C,MACZlB,8CAAQtB,MAAM0C,KAAKD,IAAIzC,MAAMyC,IAAK4C,KAAK/D,SAAU+D,KAAKoC,WAAWhG,MAAK,SAAAC,MAClE,GAAa,OAATA,KAAJ,CAEA,IAAIiJ,QAAU,GACVC,MAAQvF,KAAKuF,OAAS,KACtBC,MAAQxF,KAAKwF,OAAS,OALgD,iMAM5DnJ,KAAKP,MAAQO,MAN+C,YAM1E,qDAAiC,CAAC,IAAzBoJ,EAAwB,cACzBC,OAASD,EACTD,MAAM7D,QAAQ,MAAQ,EAEtBzB,KAAK,gBAAkBsF,OAEvBE,OAAO5F,MAAQ2F,EAAED,OACrBF,QAAQG,EAAEF,QAAUG,OAAO5F,OAb2C,sDAe1E,IAAIC,QAAU,MAAKlE,MAAMkE,QACzBA,QAAQC,KAAK7E,MAAQmK,QACrB,MAAK7J,SAAS,CACVsE,QAASA,cAGjB4D,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,MAAKQ,QAAQC,KAAMT,MAC/C,WAAdS,KAAK7C,MAAmC,SAAd6C,KAAK7C,KACtCwG,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,mEAAKsE,wBAAyB,CAAEC,OAAQ,MAAK1I,MAAMmE,EAAOS,KAAK7E,WAC7F,SAAd6E,KAAK7C,KACVwG,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,4DAAC,sCAAD,CAAMlD,KAAM,MAAKjB,MAAMmE,EAAOS,KAAK7E,UAC/E6E,KAAKC,MACV0D,OAAOhI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,MAAKnE,MAAMmE,EAAOS,KAAK7E,QAExEwI,OAAOgC,WAAa3F,KAAK7E,MAAQ,IAAIsE,MAAM,KAC/C,MAAKuE,QAAQzI,KAAKoI,SA5EtB,kDAA2B,QAzBZ,2DAuGXhJ,MAAM4I,KAAKqC,KAAOjL,MAAM4I,KAAKqC,IAAI7K,OAAS,GAC1C,MAAKiJ,QAAQzI,KAAK,CACdL,MAAO,GACPS,OAAQ,gBAAA4D,OACJ,IAAIsG,KAAO,GADE,gMAEElL,MAAM4I,KAAKqC,KAFb,WAEb,uDAAStF,IAAT,aAESA,IAAGwF,OAAQ5F,KAAKI,IAAGwF,OACpBD,KAAKtK,KAAK+E,MALL,oDAOb,IAAIsF,IAAM,GACV,GAAIC,KAAK9K,QAAU,EAAG,CAAC,IAAD,gMACH8K,MADG,WAClB,kDAAqB,CAAC,IAAbvF,GAAY,aACbsF,IAAI7K,OAAS,GAAG6K,IAAIrK,KAAK,6GAAuB4B,KAAK,YAAf,YAC1CyI,IAAIrK,KAAK,MAAKmF,OAAOJ,GAAIf,SAHX,yDAKf,CACHqG,IAAIrK,KAAK,MAAKmF,OAAOmF,KAAK,GAAItG,QAC9BqG,IAAIrK,KAAK,6GAAuB4B,KAAK,YAAf,YAEtB,IADA,IAAI4I,MAAQ,GACH7I,EAAI,EAAGA,EAAI2I,KAAK9K,OAAQmC,IAC7B6I,MAAMxK,KAAK,yGAAMyK,KAAN,UAAgC,MAAKtF,OAAOmF,KAAK3I,GAAIqC,QAArCsG,KAAK3I,GAAG4C,QAEvC8F,IAAIrK,KAAK,8GAAqB0K,QAAS,mHAAOF,QAArC,SAAoD,oEAAMrJ,UAAU,kBAAhB,2BAAtC,SAG3B,OAAO,mEAAKA,UAAU,mBAAf,SAAmCkJ,SAKtD,MAAK/D,KAAK,MAtIK,M,aADJvF,8CAAMC,WAuXnBkI,O,6pBACF9I,OAAS,WACL,IADW,EACPuK,EAAO,GACPC,EAAgB,GAFT,uLAGQ,EAAKxL,MAAMA,OAHnB,IAGX,2BAAqC,CAAC,IAA7BgJ,EAA4B,QAC7BA,EAAO9D,SAAQsG,EAAcxC,EAAOxI,MAAQ,IAEhD,IAAIiL,EAAO,CAAEtG,MAAO6D,EAAO7D,OACP,UAAhB6D,EAAOxG,OACPiJ,EAAKjL,KAAOwI,EAAOxI,MACvB+K,EAAK3K,KACD,wGAAK8K,KAAM,EAAX,SACI,wGAAML,KAAN,qVAAeI,GAAf,aAAsB,EAAKtF,MAAM6C,OADlBA,EAAOxI,QAVvB,8BAeX,IAAI4I,EAAU,GAEd,GADAA,EAAQxI,KAAK,4GAAqB4B,KAAK,UAAUmJ,SAAS,SAA7C,yBAAY,WACrB,EAAK3L,MAAMoJ,SAAW,EAAKpJ,MAAMoJ,QAAQhJ,OAAS,EAAG,CAAC,IAAD,yLAClC,EAAKJ,MAAMoJ,SADuB,IACrD,2BAAuC,CAAC,IAA/B1D,EAA8B,QAC9BA,EAAOsE,QACRZ,EAAQxI,KAAK,EAAKZ,MAAM+J,KAAKrE,OAAOA,KAHS,+BASzD,OAFA6F,EAAK3K,KAAK,oEAAoBmB,UAAU,8BAA9B,SAA6DqH,GAAnD,YAGhB,yGAAMwC,IAAK,EAAK5L,MAAMe,KAAMgB,UAAU,2BAA2ByJ,cAAeA,EAAeK,SAAU,EAAKC,OAA9G,SACI,yGAAKC,OAAQ,GAAb,SAAkBR,O,EAK9BpF,MAAQ,SAAA6C,GACJ,GAAIA,EAAO9D,OAAQ,CACf,IAAIyF,EAAU,CAAC,CAAExF,MAAO,eAAM1E,MAAO,KACrC,IAAK,IAAIuL,KAAShD,EAAO9D,OACrByF,EAAQ/J,KAAK,CAAEuE,MAAO6D,EAAO9D,OAAO8G,GAAQvL,MAAOuL,IAEvD,OAAOrB,EAAQvK,QAAU,EAAI,yGAAO6L,MAAP,CAAatB,QAASA,IAAc,2GAAQA,QAASA,IAGtF,GAAI3B,EAAO/D,OAAQ,CACf,IAAI0F,EAAU,CAAC,CAAExF,MAAO,eAAM1E,MAAO,KACjCyL,EAAOC,OAAOD,KAAKlD,EAAO/D,QAC9B,IAAK,IAAI+G,KAASE,EACdvB,EAAQ/J,KAAK,CAAEuE,MAAO6D,EAAO/D,OAAOiH,EAAKF,IAASvL,MAAOyL,EAAKF,KAElE,OAAOrB,EAAQvK,QAAU,EAAI,yGAAO6L,MAAP,CAAatB,QAASA,IAAc,2GAAQA,QAASA,IAGtF,MAAoB,SAAhB3B,EAAOxG,KACA,oHAES,eAAhBwG,EAAOxG,KACA,4DAACkC,YAAD,IAES,UAAhBsE,EAAOxG,KAEH,0GAAOyJ,MAAP,CAAalK,UAAU,4BAA4BqK,SAAO,EAA1D,UACI,wGAAMf,KAAN,CAAW7K,KAAMwI,EAAOxI,KAAO,QAAS6L,SAAO,EAA/C,SAAgD,+GAChD,oEAAMtK,UAAU,cAAhB,SAA8B,4DAAC,kDAAD,MAC9B,wGAAMsJ,KAAN,CAAW7K,KAAMwI,EAAOxI,KAAO,MAAO6L,SAAO,EAA7C,SAA8C,kHAKtC,WAAhBrD,EAAOxG,KAEH,0GAAOyJ,MAAP,CAAaK,UAAW,GAAxB,UACI,0GAAO7L,MAAO,GAAd,0BACA,0GAAOA,MAAO,IAAd,oBACA,0GAAOA,MAAO,IAAd,uBAKQ,aAAhBuI,EAAOxG,KACA,4DAAC,0CAAD,CAAUrB,KAAM6H,EAAO3I,SAAUmB,QAASwH,EAAOxH,QAAShB,KAAMwI,EAAOxI,KAAMO,KAAI,sLAErF,8G,EAGXN,MAAQ,SAACD,EAAMC,GACX8L,QAAQC,IAAIhM,EAAO,IAAMC,I,EAG7BqL,OAAS,WACL,EAAK9L,MAAM+J,KAAK7C,KAAK,O,YAzFRvF,8CAAMC,WA6FZ+C,4B,khDC7dT8H,Q,kZACF,iBAAYzM,OAAQ,IAAD,oMACf,uBAAMA,OADS,MAcnB0M,kBAAoB,WAChB,MAAKzG,OAAO,KAfG,MAkBnB0G,MAAQ,WACJ,MAAK1G,OAAO,KAnBG,MAsBnBA,OAAS,SAACxF,OACN,IAAIgH,UAAY,GAChB,GAAI,MAAKzH,MAAMiG,OACX,IAAK,IAAI1D,EAAI,EAAGA,EAAI,MAAKvC,MAAMiG,OAAO7F,OAAQmC,IACtCA,IAAM,MAAKvC,MAAMiG,OAAO7F,OAAS,EACjCqH,UAAU,MAAKzH,MAAMiG,OAAO1D,GAAG/B,MAAQC,MAClC,MAAKT,MAAMiG,OAAO1D,GAAGxB,OAC1B0G,UAAU,MAAKzH,MAAMiG,OAAO1D,GAAG/B,MAAQ,MAAKR,MAAMiG,OAAO1D,GAAGxB,MAAQ,MAAKf,MAAMe,KAAKN,MAAM,MAAKT,MAAMiG,OAAO1D,GAAGxB,KAAM,YAG7H0G,UAAUhH,MAAQA,MACtBa,6CAAQ,MAAKtB,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAK,MAAKzC,MAAMsB,SAAhD,wKAAC,2KAA8DmG,WAAc,MAAKzH,MAAMyH,YAAahG,MAAK,SAAAC,MAC7G,GAAa,OAATA,KAAJ,CAEA,IAAIiJ,QAAU,GAHuG,8LAIlGjJ,KAAKP,MAAQO,MAJqF,UAIrH,+CAAsC,CAAC,IAA9BqJ,OAA6B,YAC9B5F,MAAQ4F,OAAO,MAAKH,OACpB,MAAKC,MAAM7D,QAAQ,MAAQ,EAE3BzB,KAAK,SAAW,MAAKsF,OAErB1F,MAAQ4F,OAAO,MAAKF,OACxBF,QAAQ/J,KAAK,CACTuE,MAAOA,MACP1E,MAAOsK,OAAO,MAAKH,UAb0F,kDAgBrH,MAAK9J,SAAS,CAAE6J,uBAjDL,MAqDnBiC,OAAS,SAACzG,EAAO4E,GACb,QAAKA,IAES,KAAV5E,IAEG4E,EAAOtK,MAAMoM,cAAc7F,QAAQb,EAAM0G,gBAAkB,GAAK9B,EAAO5F,MAAM0H,cAAc7F,QAAQb,EAAM0G,gBAAkB,KA1DnH,MA6DnBhM,OAAS,SAAAJ,GACL,MAAKK,SAAS,CAAEL,MAAOA,IACvB,MAAKT,MAAMe,KAAKN,MAAM,MAAKT,MAAMQ,KAAMC,IA/DxB,MAkEnBO,OAAS,kBAAM,0GAAQ8L,YAAY,EAAMC,QAAS,MAAKJ,MAAOK,SAAU,MAAK/G,OAAQgH,aAAc,MAAKL,OAAQvL,SAAU,MAAKR,OAAQJ,MAAO,MAAKS,MAAMT,MAAOkK,QAAS,MAAKzJ,MAAMyJ,WA/D5K3K,MAAMe,MACNf,MAAMe,KAAKN,MAAMT,MAAMQ,KAAMR,MAAMS,OAEvC,MAAKmK,MAAQ5K,MAAM4K,OAAS,KAC5B,MAAKC,MAAQ7K,MAAM6K,OAAS,OAC5B,MAAK3J,MAAQ,CACTyJ,QAAS,GACTlK,MAAOT,MAAMS,OAVF,M,gBADDkB,6CAAMC,WAsEb6K,+B,+iBCqCAS,G,yDAxGX,WAAYlN,GAAQ,IAAD,8BACf,cAAMA,IAsCVgB,OAAS,kBAAM,mBAAK+K,OAAQ,CAAC,EAAG,GAAjB,SAAsB,EAAK7K,MAAMmI,QAAQpH,KAAI,SAAC+G,EAAQgD,GAAT,OAAmB,mBAAiBN,KAAM1C,EAAO0C,KAA9B,SAAqC,EAAKyB,MAAMnB,EAAOhD,EAAOmE,QAApDnB,SAvCtE,EAyCnBmB,MAAQ,SAACnB,EAAOmB,GAEZ,IADA,IAAIlE,EAAW,GACN1G,EAAI,EAAGA,EAAI4K,EAAM/M,OAAQmC,IAC1BA,EAAI,GACJ0G,EAASrI,KAAK,qBAAsCmB,UAAU,2BAAtC,SAAWiK,EAAQ,IAAMzJ,IACrD0G,EAASrI,KAAK,mBAAsCL,MAAO4M,EAAM5K,GAAGhC,MAAtD,SAA8D,EAAK6M,KAAKD,EAAM5K,KAAnE,QAAUyJ,EAAQ,IAAMzJ,IAGrD,OAAO0G,GAjDQ,EAoDnBmE,KAAO,SAAAA,GACH,IAAKA,EAAKlG,OAASkG,EAAKxE,KAAM,OAAO,KAErC,OAAQwE,EAAKxE,KAAKpG,MACd,IAAK,YACD,OAAO,EAAK6K,UAAUD,GAC1B,IAAK,OACD,OAAO,EAAKrD,KAAKqD,GACrB,QACI,OAAO,OA7DA,EAiEnBC,UAAY,SAAAD,GACR,GAA+B,IAA3BA,EAAKxE,KAAK5I,MAAMI,OAAc,OAAO,KAEzC,IAAIsL,EAAO0B,EAAKxE,KAAK5I,MAAMI,OAAS,EAAK,GAAKgN,EAAKxE,KAAK5I,MAAMI,OAAU,EAExE,OAAO,mBAAK2L,OAAQ,CAAC,EAAG,GAAjB,SAAsBqB,EAAKxE,KAAK5I,MAAMiC,KAAI,SAAAoD,GAAI,OAAI,mBAAqBqG,KAAMA,EAA3B,SAAiC,mBAAWnL,MAAO8E,EAAKF,MAAO1E,MAAO,EAAKS,MAAMkM,EAAK7L,KAAK8D,EAAK7E,SAAtF6E,EAAK7E,YAtEzD,EAyEnBuJ,KAAO,SAAAqD,GACH,IAAI1L,EAAO,EAAKR,MAAMkM,EAAK7L,MAAQ,GAEnC,OAAO,mBAAO8H,QAAS+D,EAAK/D,QAASC,WAAY5H,EAAKP,MAAQO,EAAM2G,YAAY,KA5EjE,EA+EnBnB,KAAO,WACH,EAAKoG,QAAUC,WAAW,EAAKrG,KAAM,KAD5B,oBAEU,EAAKhG,MAAMmI,SAFrB,IAET,2BAAuC,CAAC,IAAD,EAA9BL,EAA8B,sBAClBA,EAAOmE,OADW,yBAC1BC,EAD0B,QAE/B,GAAIA,EAAKlG,OAASkG,EAAKpH,OACnB,iBAEJ1E,YAAQ8L,EAAK9L,QAAS8L,EAAK3F,WAAWhG,MAAK,SAAAC,GAEvC,GADA0L,EAAKlG,MAAO,EACC,OAATxF,EAAJ,CAEA,IAAIR,EAAQ,GACZA,EAAMkM,EAAK7L,KAAOG,EAClB,EAAKZ,SAASI,QAVtB,2BAA+B,IADI,gCAF9B,gCA/EM,EAkGnBsM,qBAAuB,WACE,OAAjB,EAAKF,SACLG,aAAa,EAAKH,UAjGtB,EAAKpM,MAAQ,CACTmI,QAAS,IAEb,EAAKiE,QAAU,KACfhM,YAAQ,sBAAsBG,MAAK,SAAAC,GAC/B,GAAa,OAATA,EAAJ,CAGA,IADA,IAAIR,EAAQ,CAAEmI,QAAS3H,GACda,EAAI,EAAGA,EAAIb,EAAKtB,OAAQmC,IAC7B,IADmC,IAAD,WACzBmL,GACL,IAAIN,EAAO1L,EAAKa,GAAG4K,MAAMO,GACzBN,EAAK7L,IAAMgB,EAAI,IAAMmL,EACrBN,EAAKlG,MAAO,EACZhG,EAAMkM,EAAK7L,KAAO,GAClBqH,IAAK+E,IAAIP,EAAK9L,SAASG,MAAK,SAAAmM,GACxB,IAAI/I,EAAI+I,EAAGR,EAAK9L,QAAQkD,UAAU4I,EAAK9L,QAAQuM,YAAY,KAAO,IAClE,GAAKhJ,IAELuI,EAAKxE,KAAO/D,EACG,SAAXA,EAAErC,MAAiB,CACnB4K,EAAK/D,QAAU,GADI,oBAEFT,IAAK5I,MAAM4N,EAAG5N,MAAO6E,EAAE7E,QAFrB,IAEnB,2BAAgD,CAAC,IAAxCqF,EAAuC,QAC5C+H,EAAK/D,QAAQzI,KAAK,CACdL,MAAO8E,EAAKF,MACZ6F,UAAW3F,EAAK7E,KAChBe,IAAK8D,EAAK7E,QANC,oCAVtBkN,EAAI,EAAGA,EAAIhM,EAAKa,GAAG4K,MAAM/M,OAAQsN,IAAM,EAAvCA,GAuBb,EAAK5M,SAASI,EAAO,EAAKgG,UAnCf,E,UADCvF,IAAMC,Y,mRCmGfkM,G,mNAlGX5M,MAAQ,CACJuB,IAAK,KACLsL,SAAS,EACTtK,SAAS,EACTsE,QAAS,KACTiG,OAAQ,G,EAGZjK,OAAS,SAAAkK,GACL,EAAKnN,SAAS,CAAE2C,SAAS,IACzBM,YAAO,EAAK/D,MAAM+D,OAAQkK,EAASjK,MAAMvC,MAAK,SAAAC,GAC1C,GAAa,OAATA,EAAJ,CAMA,IAAIe,EAAM,EAAKvB,MAAM6M,QAAU,EAAK7M,MAAMuB,IAAM,EAAKzC,MAAMS,MAC3DgC,EAAMA,EAAOA,EAAM,IAAMf,EAAKwM,KAAQxM,EAAKwM,KAC3C,EAAKpN,SAAS,CACV2B,IAAKA,EACLsL,SAAS,EACTtK,SAAS,IACV,WACC,EAAKzD,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKU,MAAMuB,aAZlD,EAAK3B,SAAS,CAAE2C,SAAS,Q,EAiBrCsE,QAAU,SAAA/D,GACN,EAAKlD,SAAS,CAAEiH,QAAS/D,EAAK3B,O,EAGlC4F,OAAS,WACL,EAAKnH,SAAS,CAAEiH,QAAS,Q,EAG7BiG,OAAS,SAAAhK,GACL,IAAI,EAAKhE,MAAMmO,SAAf,CAEA,IAAI1L,EAAM,EAAKvB,MAAM6M,QAAU,EAAK7M,MAAMuB,IAAM,EAAKzC,MAAMS,MAC3D,GAAKgC,EAAL,CAEA,IAAI2L,EAAO3L,EAAIqC,MAAM,KACjBuJ,EAAI,GACR,IAAK,IAAI9L,KAAK6L,EACN7L,IAAMyB,EAAK9B,MAEXmM,EAAEjO,OAAS,IAAGiO,GAAK,KACvBA,GAAKD,EAAK7L,IAEd,EAAKzB,SAAS,CACV2B,IAAK4L,EACLN,SAAS,IACV,kBAAM,EAAK/N,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKU,MAAMuB,W,EAG/DzB,OAAS,WACL,IAAIyB,EAAM,EAAKvB,MAAM6M,QAAU,EAAK7M,MAAMuB,IAAM,EAAKzC,MAAMS,OACtD,EAAKS,MAAM6M,SAAW,EAAK/N,MAAMS,OAClC,EAAKT,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKR,MAAMS,OAEtD,IAAIU,EAAO,GACX,GAAIsB,EAAK,CACL,IAAI2L,EAAO3L,EAAIqC,MAAM,KACrB,IAAK,IAAIvC,KAAK6L,EACVjN,EAAKP,KAAK,CACNsB,IAAK,GAAKK,EACV/B,KAAM4N,EAAK7L,GACXF,IAAKA,YAAI+L,EAAK7L,IACdsB,OAAQ,SAKpB,IAAI7D,EAAQ,CACRsO,SAAU,eACVC,SAAUpN,EACVY,UAAW,iBACXyM,cAAe,EAAKzK,OACpB0K,UAAW,EAAK1G,SAKpB,OAHK,EAAK/H,MAAMmO,WACZnO,EAAM0O,SAAW,EAAKV,QAGtB,sBAAKjM,UAAU,WAAf,UACI,6CAAY/B,GAAZ,aACK,EAAKA,MAAMmO,UAAa,EAAKnO,MAAMyI,KAAO,GAAKtH,EAAKf,QAAU,EAAKJ,MAAMyI,KAAQ,KAAQ,EAAKvH,MAAMuC,QAAU,cAACkL,EAAA,EAAD,IAAsB,cAACC,EAAA,EAAD,OAEzI,mBAAOpF,QAA+B,MAAtB,EAAKtI,MAAM6G,QAAiB0B,OAAQ,KAAMC,SAAU,EAAKzB,OAAzE,SACI,qBAAK2B,IAAI,UAAUtE,MAAO,CAAEqE,MAAO,QAAUvH,IAAK,EAAKlB,MAAM6G,gB,YA5F7DpG,IAAMC,Y,SCwGXiN,E,4MAvGX3N,MAAQ,CACJC,KAAM,M,EAGVN,OAAS,YAAe,IAAZmD,EAAW,EAAXA,KACR,GAAoB,cAAhBA,EAAKH,OAAwB,CAC7B,IAD6B,EACzB1C,EAAO,EAAKA,OADa,cAEfA,GAFe,IAE7B,4BACI,GADJ,QACUe,MAAQ8B,EAAK9B,IACf,QAJqB,8BAS7B,OAHAf,EAAKP,KAAKoD,QACV,EAAKlD,SAAS,CAAEK,SAKpB,GAAoB,SAAhB6C,EAAKH,OAAmB,CACxB,GAAIG,EAAKT,SAASR,QAGd,YAFA,EAAKtC,QAKT,IAPwB,EAOpBU,EAAO,GAPa,cAQV,EAAKA,QARK,IAQxB,gCAAS2N,EAAT,QACQA,EAAE5M,MAAQ8B,EAAK9B,KACff,EAAKP,KAAKkO,IAVM,8BAcxB,OAHA,EAAKhO,SAAS,CAAEK,cAChB2B,EAAA,EAAQE,KAAKgB,EAAKT,SAAST,SAK/B,GAAoB,YAAhBkB,EAAKH,OAAsB,CAC3B,IAD2B,EACvB1C,EAAO,GADgB,cAEb,EAAKA,QAFQ,IAE3B,2BAA2B,CAAC,IAAnB2N,EAAkB,QACnBA,EAAE5M,MAAQ8B,EAAK9B,KAGnBf,EAAKP,KAAKkO,IANa,8BAW3B,OAHA,EAAKhO,SAAS,CAAEK,KAAMA,SACtB,EAAKV,U,EAMbA,MAAQ,WACJ,IADU,EACNU,EAAO,GADD,cAEO,EAAKD,MAAMC,MAFlB,IAEV,2BAAkC,CAAC,IAA1B6C,EAAyB,QACzBA,EAAKvB,MACNuB,EAAKvB,IAAMuB,EAAKT,SAAS2K,KACzBlK,EAAK3B,IAAMA,YAAI2B,EAAKvB,MAExBtB,EAAKP,KAAK,CACNJ,KAAMwD,EAAKxD,KACXiC,IAAKuB,EAAKvB,OATR,8BAYV,EAAKzC,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM6C,KAAKC,UAAUnC,K,EAG1DA,KAAO,WACH,GAAwB,OAApB,EAAKD,MAAMC,KACX,OAAO,EAAKD,MAAMC,KAGtB,IADA,IAAIA,EAAO,EAAKnB,MAAMS,MAAQ6J,YAAQ,EAAKtK,MAAMS,OAAS,GACjD8B,EAAI,EAAGA,EAAIpB,EAAKf,OAAQmC,IAC7BpB,EAAKoB,GAAGL,IAAM,GAAKK,EACnBpB,EAAKoB,GAAGF,IAAMA,YAAIlB,EAAKoB,GAAGE,KAC1BtB,EAAKoB,GAAGsB,OAAS,OAGrB,OAAO1C,G,EAGXH,OAAS,WACL,IAAIhB,EAAQ,CACR+F,OAAQ1D,YAAI,4BACZ7B,KAAM,EAAKR,MAAM+D,OACjBiB,UAAU,EACV+J,SAAU,CACNC,YAAa,CACT,KAAM,UACN,OAAQ,WAEZC,YAAa,EACbhP,OAAQ,SAAAiP,GAAO,gBAAOC,WAAWD,EAAQE,QAAQ,IAAlC,OAEnBb,SAAU,EAAKpN,OACfE,SAAU,EAAKR,QAGnB,OACI,6CAAYb,GAAZ,aACI,8BAAQ,cAACqP,EAAA,EAAD,IAAR,uB,YAlGG1N,IAAMC,W,kEC6BV0N,I,0NA1BXpO,MAAQ,CACJqO,OAAQC,cAAYC,cACpB1B,SAAS,G,EAGblN,OAAS,SAAAK,GACL,EAAKJ,SAAS,CACVyO,OAAQrO,EACR6M,SAAS,IAEb,EAAK/N,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAMkP,IAAYC,uBAAazO,EAAM0O,wB,EAG1E5O,OAAS,WACL,IAAIE,EAAQ,EAAKA,MAAMqO,OACvB,IAAK,EAAKrO,MAAM6M,SAAW,EAAK/N,MAAMS,MAAO,CACzC,EAAKT,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKR,MAAMS,OAClD,IAAIoP,EAAUC,KAAY,EAAK9P,MAAMS,OACjCoP,IACA3O,EAAQsO,cAAYO,kBAAkBC,eAAaC,qBAAqBJ,KAGhF,OAAO,cAAC,SAAD,CAAQK,YAAahP,EAAOiP,aAAc,CAAEC,OAAQ,MAASC,oBAAqB,EAAKxP,U,YAvBhFc,IAAMC,Y,oBCQtB0O,I,OAAS,CACXC,SAAU,CACNC,GAAI,CACA9E,KAAM,IAEV+E,GAAI,CACA/E,KAAM,IAGdgF,WAAY,CACRF,GAAI,CACA9E,KAAM,IAEV+E,GAAI,CACA/E,KAAM,OAKZiF,G,kDACF,WAAY3Q,GAAQ,IAAD,8BACf,cAAMA,IASV0M,kBAAoB,WACZ,EAAK1M,MAAMyC,MAAQ,EAAKzC,MAAM0B,MAC9B,EAAKwF,OAAOzF,MAAK,SAAAC,GACA,OAATA,GAEJ,EAAKA,KAAKA,MALI,oBASLkH,IAAK5I,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAM4I,KAAK5I,QATxC,yBASbqF,EATa,QAUA,cAAdA,EAAK7C,MACLlB,YAAQ,mBAAoB,CAAEC,IAAK8D,EAAKuL,YAAanP,MAAK,SAAAC,GACtD,GAAa,OAATA,EAAJ,CAEA,IAAImP,EAAQvG,YAAQ5I,EAAK2D,EAAKuL,YACT,IAAjBC,EAAMzQ,SAEVsB,EAAK2D,EAAKuL,WAAaC,EAAM,GAC7B,EAAK/P,SAASY,SAT1B,2BAAuE,IATjD,gCAVP,EAkCnBA,KAAO,SAAAA,GACH,IAAIuD,EAAS,EAAKlE,KAAKoG,QAAQ4B,iBAC/B,IAAK,IAAIxH,KAAO0D,EACZA,EAAO1D,GAAOG,EAAKH,GAEvB,EAAKtB,OAAOgF,GACZ,EAAKlE,KAAKoG,QAAQ2J,eAAe7L,GACjC,EAAKnE,SAASY,IAzCC,EA4CnBzB,OAAS,SAACgF,GAAY,IAAD,gBACA2D,IAAK5I,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAM4I,KAAK5I,QAD7C,IACjB,2BAAsE,CAAC,IAA9DqF,EAA6D,QAC9D5E,EAAQwE,EAAOI,EAAK7E,MACxB,GAAI6E,EAAKH,OACLD,EAAOI,EAAK7E,MAAQuQ,YAAMtQ,EAAO,QAChC,GAAkB,UAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQyJ,YAAQxJ,EAAO4E,EAAK6E,YACvC,GAAkB,YAAd7E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQ2J,YAAU1J,QAC7B,GAAkB,WAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAkB,IAAVC,GAAyB,MAAVA,OAClC,GAAkB,UAAd4E,EAAK7C,KAEV,IADA,IAAIqO,EAAQvG,YAAQ7J,GACX8B,EAAI,EAAGA,EAAIsO,EAAMzQ,OAAQmC,IAC9B,IAAK,IAAIyO,KAAKH,EAAMtO,GAChB0C,EAAOI,EAAK7E,KAAO,IAAMwQ,EAAI,IAAMzO,GAAKsO,EAAMtO,GAAGyO,QAClDvQ,IACW,SAAd4E,EAAK7C,KACLyC,EAAOI,EAAK7E,MAAQyQ,IAAOxQ,EAAO,cACf,aAAd4E,EAAK7C,OACVyC,EAAOI,EAAK7E,MAAQyQ,IAAOxQ,EAAO,yBAEtC4E,EAAKL,WACLC,EAAOI,EAAK7E,MAAQyE,EAAOI,EAAK7E,MAAQyE,EAAOI,EAAK7E,MAAMsE,MAAM,KAAO,KAvB9D,gCA5CF,EAuEnBrE,MAAQ,SAACD,EAAMC,GACX,GAAc,OAAVA,EAGA,OAFa,EAAKM,KAAKoG,QAAU,EAAKpG,KAAKoG,QAAQ4B,iBAAmB,IAExDvI,IAAS,EAAKyE,OAAOzE,GAGvC,EAAKyE,OAAOzE,GAAQC,GA9EL,EAiFnBiF,OAAS,SAAAkI,GACL,IADW,EACP3I,EAAS,EAAKlE,KAAKoG,QAAQ4B,iBADpB,cAEMH,IAAK5I,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAM4I,KAAK5I,QAFnD,IAEX,2BAAsE,CAAC,IAA9DqF,EAA6D,QAC9D5E,EAAQwE,EAAOI,EAAK7E,MACN,WAAd6E,EAAK7C,KAMJ/B,GAAmB,KAAVA,EAMI,SAAd4E,EAAK7C,KACLyC,EAAOI,EAAK7E,MAAQC,EAAMR,OAAO,cACd,aAAdoF,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQC,EAAMR,OAAO,uBACd,UAAdoF,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQ0Q,YAAUzQ,GACX,YAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQ2Q,YAAY1Q,GAC3B4E,EAAKL,WACVC,EAAOI,EAAK7E,MAAQyE,EAAOI,EAAK7E,MAAM4Q,KAAK,aAdpCnM,EAAOI,EAAK7E,MANnByE,EAAOI,EAAK7E,MAAQC,EAAQ,EAAI,GAL7B,8BA2BX,GAAI,EAAKT,MAAM0B,KACX,IAAK,IAAIH,KAAO,EAAKvB,MAAM0B,OACjBH,KAAO0D,IAAW,EAAKjF,MAAM0B,KAAKH,KACpC0D,EAAO1D,GAAO,EAAKvB,MAAM0B,KAAKH,IAC1C,EAAK8P,OAAOzD,EAAZ,2BAAqB3I,GAAW,EAAKA,SAAUxD,MAAK,SAAAC,GACnC,OAATA,IAEAkM,EAAG5H,OACH,EAAKhG,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAMyC,IAAK,EAAKzC,MAAMyH,UAAW,EAAKzH,MAAM0B,MACjEkM,EAAG7K,QACR,EAAK/C,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAKmL,EAAG7K,SAAU,EAAK/C,MAAMyH,UAAW,EAAKzH,MAAM0B,MAClGkM,EAAGlM,KACR,EAAKA,KAAKA,GAEVoB,EAAA,EAAQC,QAAQ,6CA1HT,EA8HnBkF,OAAS,SAAA2F,GACL,EAAK5N,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAKmL,EAAG7K,SAAU,EAAK/C,MAAMyH,YA/HlE,EAkInBzG,OAAS,WACL,IAAIoK,EAAQ,GACR,EAAKpL,MAAM4I,KAAKC,MAChBuC,EAAMxK,KAAK,qBAA0CmB,UAAU,eAAemH,wBAAyB,CAAEC,OAAQ,EAAKjI,MAAM,EAAKlB,MAAM4I,KAAKC,QAAvH,QAAU,EAAK7I,MAAM4I,KAAKC,OAHxC,oBAIMD,IAAK5I,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAM4I,KAAK5I,QAJnD,IAIX,gCAASqF,EAAT,QACI,EAAKoG,KAAKL,EAAO/F,EAAM,KALhB,8BAOX,OACI,4CAAMuG,IAAK,EAAK7K,MAAUuP,IAA1B,IAAkC9E,cAAe,EAAKtK,MAAtD,UACKkK,EACD,kBAAMC,KAAN,CAAWtJ,UAAU,uBAAuBoD,MAAM,UAAlD,SAA6D,EAAKiE,iBA5I3D,EAiJnBqC,KAAO,SAACL,EAAO/F,EAAM9D,GACjB,GAAkB,UAAd8D,EAAK7C,KAAkB,CAGvB,IAFA,IAAI8O,EAAK,GACLT,EAAQvG,YAAQ,EAAKpJ,MAAMmE,EAAK7E,OAC3B+B,EAAI,EAAGA,EAAIsO,EAAMzQ,OAAQmC,IAAK,CACnC+O,EAAG1Q,KAAK,qBAAuCmB,UAAU,iCAAvCsD,EAAK7E,KAAO,YAAc+B,IADT,oBAEjB8C,EAAK1E,UAFY,IAEnC,2BAAiC,CAAC,IAAzB4Q,EAAwB,QACzBC,EAAInO,KAAKoO,MAAMpO,KAAKC,UAAUiO,IAClCC,EAAEhR,KAAO6E,EAAK7E,KAAO,IAAMgR,EAAEhR,KAAO,IAAM+B,EAC1C,EAAKkJ,KAAK6F,EAAIE,EAAGnM,EAAK7E,KAAO,MALE,+BAkBvC,OAVA4K,EAAMxK,KACF,sBAAqBmB,UAAU,wBAA/B,UACI,qBAAKA,UAAU,8BAAf,SAA8CsD,EAAKF,QAClDmM,EACD,qBAAKvP,UAAU,kCACf,qBAAKA,UAAU,6BAAf,SAA4C,wBAAQS,KAAK,UAAUoD,QAAS,EAAK8L,KAAK5L,KAAV,eAAqBT,GAArD,SAA4D,cAACuJ,EAAA,EAAD,UAJlGvJ,EAAK7E,YAOnB,EAAKmR,YAKT,IAAIlG,EAAO,CACPlK,IAAKA,EAAM8D,EAAK7E,KAChBuB,UAAW,wCAA0C,EAAK4P,YAAc,IAAM,EAAI,MAAQ,QAC1FxM,MAAOE,EAAKF,OAEhB,GAAIE,EAAK7C,MAAQ6C,EAAK7C,KAAKoP,WAAW,aAClCxG,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAsB,EAAK0C,SAAS9I,YAC5C,GAAkB,UAAdA,EAAK7C,KACZ4I,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,cAAC,EAAD,CAAOjL,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQ0E,KAAMpD,EAAKoD,MAAQ,EAAGhI,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BACxI,GAAkB,SAAdsE,EAAK7C,KACZ4I,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,cAAC,EAAD,CAAMjL,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQ0E,KAAMpD,EAAKoD,MAAQ,EAAGhI,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BACvI,GAAkB,YAAdsE,EAAK7C,KACZ4I,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,cAAC,IAAD,yBAAS/I,KAAM,EAAK1C,MAAM0C,KAAMD,IAAK,EAAKzC,MAAMyC,KAAS4C,GAAzD,IAA+D5E,MAAO,EAAKS,MAAMmE,EAAK7E,MAAOkB,KAAM,EAAK1B,MAAM0B,KAAMX,KAAI,2BACrJ,GAAkB,YAAdsE,EAAK7C,KACZ4I,EAAMxK,KAAK,mBAAMyK,KAAN,2BAAeI,GAAf,cAAsB,EAAKvK,MAAMmE,EAAK7E,OAAS,GAA/C,IAAoD6E,EAAK/D,QAAU,mBAAQuQ,KAAM,cAACC,EAAA,EAAD,CAAclI,IAAKvE,EAAKF,QAAWS,QAAS,EAAKmM,QAAQjM,KAAb,eAAwBT,KAAY,eACzK,GAAkB,WAAdA,EAAK7C,KACZ4I,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,cAAC,GAAD,CAAQjL,KAAM6E,EAAK7E,KAAMC,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BAC9F,GAAkB,SAAdsE,EAAK7C,KACZ4I,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,qBAAKvC,wBAAyB,CAAEC,OAAQ,EAAKjI,MAAMmE,EAAK7E,OAAS,eAC9F,GAAkB,cAAd6E,EAAK7C,KAAsB,CAClC,IAAI/B,EAAQ,EAAKS,MAAMmE,EAAKuL,YAAc,CAAEnO,IAAK,GAAIjC,KAAM,IAC3D,GAAIC,EAAO,CACP,IAAI0E,EAAQ1E,EAAMD,KACdwL,EAAQ7G,EAAM0I,YAAY,KAC1B7B,GAAS,IAAG7G,EAAQA,EAAMX,UAAU,EAAGwH,IAC3CP,EAAK1J,WAAa,0BAClB0J,EAAKtG,MAAQ,YACbiG,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,mBAAG7D,KAAMnH,EAAMgC,IAAM,aAAehC,EAAMD,KAAMN,OAAO,SAASqK,IAAI,sBAApE,SAA2FpF,cAE5H,GAAkB,aAAdE,EAAK7C,KAAqB,CACjC,IAAIrB,EAAOkE,EAAKhF,UACXc,GAAQ,EAAKnB,MAAMyH,WAAa,EAAKzH,MAAMyH,UAAUlG,MACtDJ,EAAO,EAAKnB,MAAMyH,UAAUlG,KAChC6J,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,cAAC,KAAD,CAAUtK,KAAMA,EAAMK,QAAS6D,EAAK7D,QAAShB,KAAM6E,EAAK7E,KAAMC,MAAO,EAAKS,MAAMmE,EAAK7E,MAAOO,KAAI,yBAC3G,SAAdsE,EAAK7C,KACZ4I,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,aAAqB,cAAC,KAAD,CAAM/J,KAAM,EAAKR,MAAMmE,EAAK7E,aAE1C,WAAd6E,EAAK7C,OACLiJ,EAAKuG,cAAgB,WACzB5G,EAAMxK,KAAK,kBAAMyK,KAAN,2BAAeI,GAAf,IAAqBjL,KAAM6E,EAAK7E,KAAhC,SAAuC,EAAK2F,MAAMd,SAjNlD,EAqNnBqM,KAAO,SAACrM,GACJ,IADa,EACT4M,EAAM,GADG,cAEK5M,EAAK1E,UAFV,IAEb,4BACIsR,EADJ,QACczR,MAAQ,IAHT,8BAIb,IAAIkB,EAAO4I,YAAQ,EAAKpJ,MAAMmE,EAAK7E,OACnCkB,EAAKd,KAAKqR,GACV,IAAI/Q,EAAQ,GACZA,EAAMmE,EAAK7E,MAAQkB,EACnB,EAAKZ,SAASI,IA7NC,EAgOnBiN,SAAW,SAAA9I,GACP,IAAI5E,EAAQ,EAAKS,MAAMmE,EAAK7E,MAC5B,GAAkB,oBAAd6E,EAAK7C,KACL,OAAOyH,YAAQxJ,EAAO4E,EAAK6E,OAE/B,GAAkB,sBAAd7E,EAAK7C,KACL,OAAO2H,YAAU1J,GAErB,GAAkB,oBAAd4E,EAAK7C,KACL,OAAO,cAAC,EAAD,CAAOhC,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQ0E,KAAMpD,EAAKoD,MAAQ,EAAG0F,UAAU,EAAM1N,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,iBAEtI,GAAkB,mBAAdsE,EAAK7C,KAA2B,CAChC,IAAIgE,EAAQ,GACZ,IAAK,IAAD,gBACiB8D,YAAQ7J,IADzB,IACA,2BAAiC,CAAC,IAAzBuD,EAAwB,QAC7BwC,EAAM5F,KAAK,sBAAkCmB,UAAU,oBAA5C,UACP,cAACmQ,EAAA,EAAD,IACA,mBAAGtK,KAAMvF,YAAI2B,EAAKvB,KAAMvC,OAAO,SAASqK,IAAI,sBAA5C,SAAmEvG,EAAKxD,SAFvD,QAAUgG,EAAMpG,UAFzC,+BAOF,MAAOqF,IAET,OAAOe,EAGX,OAAInB,EAAKH,OACEG,EAAKL,SAAW,EAAKA,SAASK,EAAKH,OAAQzE,GAAU4E,EAAKH,OAAOzE,IAAU,GAElF4E,EAAKJ,OACEI,EAAKL,SAAW,EAAKA,SAASK,EAAKJ,OAAQxE,GAAU4E,EAAKJ,OAAOxE,IAAU,GAExE,IAAVA,EACO,EAEJA,GAAS,IAlQD,EAqQnBuE,SAAW,SAACC,EAAQxE,GAChB,IAAKA,EAAO,MAAO,GAEnB,IAH0B,EAGtByE,EAAS,GAHa,cAIZzE,GAJY,IAI1B,2BAAqB,CAAC,IACd0E,EAAQF,EADK,SAEbE,IACAD,GAAU,IAAMC,IAPE,8BAU1B,OAAOD,EAAO9E,OAAS,EAAI8E,EAAOV,UAAU,GAAK,IA/QlC,EAkRnB2B,MAAQ,SAAAd,GACJ,GAAIA,EAAKH,OAAQ,CACb,IAAIyF,EAAU,GACd,IAAK,IAAIqB,KAAS3G,EAAKH,OACnByF,EAAQ/J,KAAK,CAAEuE,MAAOE,EAAKH,OAAO8G,GAAQvL,MAAOsQ,YAAM/E,EAAO,KAElE,OAAI3G,EAAKL,SACE2F,EAAQvK,OAAS,EAAI,kBAAU6L,MAAV,CAAgBtB,QAASA,IAAc,mBAAQA,QAASA,EAASwH,KAAK,WAAWC,YAAU,IAEpHzH,EAAQvK,OAAS,EAAI,kBAAO6L,MAAP,CAAatB,QAASA,IAAc,mBAAQA,QAASA,IAGrF,GAAItF,EAAKJ,OAAQ,CACb,IAAI0F,EAAU,GACVuB,EAAOC,OAAOD,KAAK7G,EAAKJ,QAC5B,IAAK,IAAI+G,KAASE,EACdvB,EAAQ/J,KAAK,CAAEuE,MAAOE,EAAKJ,OAAOiH,EAAKF,IAASvL,MAAOyL,EAAKF,KAEhE,OAAI3G,EAAKL,SACE2F,EAAQvK,OAAS,EAAI,kBAAU6L,MAAV,CAAgBtB,QAASA,IAAc,mBAAQA,QAASA,EAASwH,KAAK,WAAWC,YAAU,IAEpHzH,EAAQvK,OAAS,EAAI,kBAAO6L,MAAP,CAAatB,QAASA,IAAc,mBAAQA,QAASA,IAGrF,MAAkB,SAAdtF,EAAK7C,KAAwB,sBAEf,aAAd6C,EAAK7C,KAA4B,mBAAY6P,UAAU,IAEzC,WAAdhN,EAAK7C,KAA0B,mBAAQkI,UAAWrF,EAAK/D,UAAY+D,EAAKiN,OAAQjR,SAAU,EAAK6G,OAAOpC,KAAZ,eAAuBT,KAEnG,cAAdA,EAAK7C,KAA6B,kBAAO+P,SAAP,CAAgBC,SAAU,CAAEC,QAAS,KAEzD,aAAdpN,EAAK7C,KAA4B,kBAAOkQ,SAAP,IAE9B,uBApTQ,EAuTnBxK,OAAS,SAAC7C,EAAM8C,GACZ,EAAK1H,MAAM4E,EAAK7E,KAAM2H,EAAQ,EAAI,IAxTnB,EA2TnB4J,QAAU,SAAC1M,GACP/D,YAAQ,EAAKtB,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAK4C,EAAK/D,SAAU,CAAEZ,GAAI,EAAKV,MAAM0B,KAAKhB,KAAMe,MAAK,SAAAC,GAC3E,OAATA,GAEJ,EAAK1B,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAMyC,IAAK,EAAKzC,MAAMyH,UAAW/F,OA/ThD,EAmUnB0H,QAAU,WACN,IAAIuJ,EAAU,GACd,IAAK,EAAK3S,MAAM4I,KAAKQ,SAAW,EAAKpJ,MAAM4I,KAAKQ,QAAQhJ,QAAU,EAC9D,OAAOuS,EAEX,IAAIC,EAAyC,IAAnC,EAAK5S,MAAM4I,KAAKQ,QAAQhJ,OAClC,GAAI,EAAKJ,MAAM4I,KAAKQ,QAAS,CAAC,IAAD,gBACL,EAAKpJ,MAAM4I,KAAKQ,SADX,IACzB,2BAA6C,CAAC,IAArCA,EAAoC,QACzC,IAAIA,EAAQY,OAAZ,CAEA,IAAItE,EAAS,CACTnE,IAAK6H,EAAQjE,OAEbyN,IACAlN,EAAOlD,KAAO,UACdkD,EAAOiG,SAAW,UAEtBgH,EAAQ/R,KAAK,6CAAY8E,GAAZ,IAAoBE,QAAS,EAAKF,OAAOI,KAAZ,eAAuBsD,GAApD,SAA+DA,EAAQjE,UAChFiE,EAAQrG,SAAW6P,GACnBD,EAAQ/R,KAAK,mBAAqB4B,KAAK,SAASoD,QAAS,EAAKqC,OAAOnC,KAAZ,eAAuBsD,GAAnE,yBAAY,aAbR,+BAiB7B,OAAOuJ,GAvVP,EAAK5R,KAAOY,IAAMkI,YAClB,EAAK3I,MAAQlB,EAAM0B,MAAQ,GAC3B,EAAKzB,OAAO,EAAKiB,OACjB,EAAK+D,OAAS,GACd,EAAK0M,UAAY,EAPF,E,UADJhQ,IAAMC,WA+XViR,G,4MA/BX3L,KAAO,kBAAM5F,YAAQ,EAAKtB,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAK,EAAKzC,MAAM4I,KAAKtH,SAAU,EAAKtB,MAAMyH,Y,EAE9F4J,OAAS,SAACzD,EAAI3I,GAAY,IAAD,gBACJ,EAAKjF,MAAM4I,KAAK5I,OADZ,IACrB,2BAAwC,CAAC,IAAhCqF,EAA+B,QACpC,GAAkB,UAAdA,EAAK7C,KAAkB,CACvB,IAAIqO,EAAQ,GACZ,IAAK,IAAItP,KAAO0D,EACZ,QAAoB6N,IAAhB7N,EAAO1D,IAGPA,EAAIyF,QAAQ3B,EAAK7E,OAAS,EAAG,CAC7B,IAAIuS,EAAKxR,EAAIuD,MAAM,KACfkH,EAAQ+E,YAAMgC,EAAG,IACjBd,EAAMpB,EAAM7E,IAAU,GAC1BiG,EAAIc,EAAG,IAAM9N,EAAO1D,UACb0D,EAAO1D,GACdsP,EAAM7E,GAASiG,EAIvB,IADA,IAAIe,EAAM,GACV,MAAgBnC,EAAhB,gBAAK,IAAIoB,EAAG,KACJA,GACAe,EAAIpS,KAAKqR,GACjBhN,EAAOI,EAAK7E,MAAQ6C,KAAKC,UAAU0P,KArBtB,8BAyBrB,OAAO1R,YAAQ,EAAKtB,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAKmL,EAAGtM,SAAWsM,EAAGpL,MAAtD,YAAC,eAAiEyC,GAAW,EAAKjF,MAAMyH,a,YA5BzFkJ,IC7WNsC,G,4MAjBX/L,KAAO,kBAAM5F,YAAQ,mBAAoB,CAAEC,IAAK,EAAKA,S,EAErD8P,OAAS,SAACzD,EAAI3I,GACV,IAAI4L,EAAQ,GACZ,IAAK,IAAIrQ,KAAQyE,EACb4L,EAAMjQ,KAAK,CACPW,IAAKf,EACLC,MAAOwE,EAAOzE,IAAS,KAI/B,OAAOc,YAAQ,kBAAmB,CAAE4R,IAAK7P,KAAKC,UAAUuN,M,EAG5DtP,IAAM,kBAAM,EAAKvB,MAAMyC,IAAI+B,UAAU,GAAG2O,QAAQ,MAAO,KAAO,K,YAf5CxC,I,mBCgHPyC,I,yDA7GX,WAAYpT,GAAQ,IAAD,8BACf,cAAMA,IAkBVqT,MAAQ,SAAAA,GACJ,EAAKvS,SAAS,CAAEwS,MAAM,IACtBhS,YAAQ,uBAAwB,CAAE+R,MAAOA,IAAS5R,MAAK,SAAAC,GACtC,OAATA,GAEJ,EAAKZ,SAAS,CACVwS,MAAM,EACND,MAAOA,EACPE,OAAQ7R,QA3BD,EAgCnByG,MAAQ,SAAA1C,GACJ,EAAK3E,SAAS,CACVyS,OAAQ9N,EAAE+N,WAlCC,EAsCnBC,KAAO,WACH,EAAK3S,SAAS,CAAEwS,MAAM,IAAS,kBAAMhS,YAAQ,qBAAsB,CAAE+R,MAAO,EAAKnS,MAAMmS,MAAOE,OAAQ,EAAKrS,MAAMqS,OAAOnC,KAAK,QAAS3P,MAAK,SAAAC,GAAI,OAAI,EAAKZ,SAAS,CAAEwS,MAAM,WAvC1J,EA0CnBI,QAAU,WACN,IADY,EACRzR,EAAM,GADE,cAEK,EAAKf,MAAMqS,QAFhB,IAEZ,2BACI,IADiC,IAA5BrF,EAA2B,UACnB,CACTjM,EAAIiM,IAAQ,EACZ,IAAIlC,EAAQkC,EAAKL,YAAY,KAC7B,IAAe,IAAX7B,EACA,MAEJkC,EAAOA,EAAK1J,UAAU,EAAGwH,IATrB,8BAaZ,IAAI0H,EAAU,GACd,IAAK,IAAInS,KAAOU,EACZyR,EAAQ9S,KAAKW,GAGjB,OAAOmS,GA5DQ,EA+DnB1S,OAAS,WACL,IAAIiI,EAAW,GACf,OAAK,EAAK/H,MAAMyS,QAAuC,IAA7B,EAAKzS,MAAMyS,OAAOvT,QAE5C6I,EAASrI,KAAK,EAAK+S,UACf,EAAKzS,MAAMoS,MAAQ,EAAKpS,MAAM0S,MAAQ,EAAK1S,MAAM0S,KAAKxT,OAAS,GAC/D6I,EAASrI,KAAK,oBAAiBiT,WAAW,EAAMC,YAAY,EAAOC,UAAU,EAAMC,eAAe,EAC9FC,oBAAqB,EAAKP,UAAWQ,mBAAoB,EAAKhT,MAAMqS,OAAQY,QAAS,EAAKhM,MAAOlH,SAAU,EAAKmT,MAAM,EAAKlT,MAAM0S,KAAM,KADnH,SAExB,EAAK5T,MAAM4I,KAAKQ,SAAW,EAAKpJ,MAAM4I,KAAKQ,QAAQhJ,OAAS,GAC5D6I,EAASrI,KAAK,qBAAmBmB,UAAU,0BAA7B,SAAuD,mBAAQS,KAAK,UAAUoD,QAAS,EAAK6N,KAArC,2BAA9C,YAEpBxK,GAT0DA,GAjElD,EA6EnB0K,OAAS,WACL,IADW,EACPhJ,EAAU,GADH,cAEO,EAAKzJ,MAAMyS,QAFlB,IAEX,2BAAqC,CAAC,IAA7BN,EAA4B,QACjC1I,EAAQ/J,KAAK,kBAAQyT,OAAR,CAAiC5T,MAAO4S,EAAMA,MAA9C,SAAsDA,EAAM7S,MAAxC6S,EAAMA,SAHhC,8BAMX,OAAO,mBAAqBiB,aAAc,EAAKpT,MAAMmS,OAAS,EAAG/N,MAAO,CAAEqE,MAAO,QAAUtI,SAAU,EAAKgS,MAAnG,SAA2G1I,GAA/F,WAnFJ,EAsFnByJ,MAAQ,SAACG,EAAOC,GACZ,IAAIJ,EAAQ,GACZ,IAAKG,GAA0B,IAAjBA,EAAMnU,OAAc,OAAOgU,EAEzC,IAJ0B,EAItBlI,EAAO,GAJe,cAKTqI,GALS,IAK1B,2BAAwB,CAAC,IAAhBX,EAAe,QAChBrS,EAAMiT,GAAaZ,EAAKtS,SAAWsS,EAAKpR,MAAQoR,EAAKzO,OACrDyO,EAAKnM,YACLlG,GAAO8B,KAAKC,UAAUsQ,EAAKnM,YAC3BlG,KAAO2K,IAEXA,EAAK3K,IAAO,EACZ6S,EAAMxT,KAAK,CACPW,IAAKA,EACLhB,MAAOqT,EAAKzO,MACZxE,SAAU,EAAKyT,MAAMR,EAAKxI,MAAO7J,EAAM,SAfrB,8BAmB1B,OAAO6S,GAtGP,EAAKlT,MAAQ,GACbI,YAAQ,wBAAwBG,MAAK,SAAAC,GACrB,MAARA,GAEJ,EAAKZ,SAAS,CACV6S,OAAQjS,EACR2R,MAAO,IACR,kBAAM,EAAKA,MAAM,SAExB/R,YAAQ,gBAAiB,CAAEmT,KAAK,IAAQhT,MAAK,SAAAC,GAC5B,OAATA,GAEJ,EAAKZ,SAAS,CAAE8S,KAAMlS,OAfX,E,UADDC,IAAMC,YCOb8S,I,mNARX1T,OAAS,WAGG,OAFA,EAAKhB,MAAMwH,KAEJ,qBAAKzF,UAAU,UAAf,sB,YAJJJ,IAAMC,YC2DVc,GAFF,I,iDAjDTiS,SAAW,SAAA3I,GAAK,OAAI,EAAKA,MAAQA,G,KAEjCvJ,IAAM,SAACA,EAAKnB,GACR,OAAKA,EAEDA,EAAQsQ,WAAW,KAAatQ,EAE7BmB,EAAI+B,UAAU,EAAG/B,EAAIoL,YAAY,KAAO,GAAKvM,EAJ/BmB,G,KAOzByE,KAAO,SAACzE,EAAKgF,EAAW/F,GACfe,EAAImP,WAAW,OAAMnP,EAAMA,EAAI+B,UAAU/B,EAAIuE,QAAQ,MAAMmM,QAAQ,MAAO,MACnE,mBAAR1Q,EAMQ,uBAARA,EAMJmG,IAAK+E,IAAIlL,GAAKhB,MAAK,SAAAmM,GACf,GAAW,OAAPA,EAAJ,CAEA,IAAI/I,EAAI+I,EAAGnL,EAAI+B,UAAU/B,EAAIoL,YAAY,KAAO,IAC3ChJ,IAEU,SAAXA,EAAErC,KACF,EAAK1B,SAAS,cAAC,IAAD,CAAMd,MAAO4N,EAAG5N,MAAO4I,KAAM/D,EAAGpC,IAAKA,EAAKgF,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,KAC9E,SAAXmC,EAAErC,KACT,EAAK1B,SAAS,cAAC,GAAD,CAAMd,MAAO4N,EAAG5N,MAAO4I,KAAM/D,EAAGpC,IAAKA,EAAKgF,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,KAC9E,YAAXmC,EAAErC,KACT,EAAK1B,SAAS,cAAC,GAAD,CAAS8H,KAAM/D,KACX,YAAX+I,EAAGrM,IACV,EAAKT,SAAS,cAAC,GAAD,CAASd,MAAO4N,EAAG5N,MAAO4I,KAAM/D,EAAGpC,IAAKA,EAAKgF,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,KACjF,SAAXmC,EAAErC,MACT,EAAKgF,KAAK3C,EAAE2C,KAAMC,EAAW/F,QApBjC,EAAKZ,SAAS,cAAC,EAAD,KANdQ,YAAQmB,GAAKhB,MAAK,SAAAC,GAAI,OAAIgG,OAAOC,SAAS3B,a,KA+BlDwB,KAAO,SAACA,EAAMC,EAAW/F,GAAlB,OAA2B,EAAKZ,SAAS,cAAC,GAAD,CAAM0G,KAAMA,EAAMC,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,M,KAE1G5B,SAAW,SAAAI,GAAK,OAAI,EAAK8K,MAAMlL,SAAS,CAAE4B,KAAM,0BAAW,kBAAM,EAAKsJ,MAAMlL,SAAS,CAAE4B,KAAMxB,SCpDzF0T,G,IAAAA,QA0DOC,G,kDAvDX,aAAe,IAAD,8BACV,gBAiBJtN,MAAQ,SAAA9B,GACJ,EAAKyB,KAAK,EAAKjF,IAAIwD,EAAElE,OAnBX,EAsBd2F,KAAO,SAAAuE,GACCA,EAAKnK,QACLoB,GAAKwE,KAAKuE,EAAKnK,QAASmK,EAAKhE,UAAWgE,EAAK/J,MACxC+J,EAAKjE,MACV9E,GAAK8E,KAAKiE,EAAKjE,KAAMiE,EAAKhE,UAAWgE,EAAK/J,OA1BpC,EA6BdV,OAAS,WACL,OAAgC,IAA5B,EAAKE,MAAMkK,MAAMhL,OAAqB,KAEnC,mBAAMwF,QAAS,EAAK2B,MAAO4K,KAAK,SAAS2C,MAAM,OAAOC,gBAAiB,CAAC,OAAQC,oBAAqB,CAAC,EAAK9T,MAAMuK,KAAO,MAAQ,SAAhI,SAA2I,EAAKmI,KAAK,EAAK1S,MAAMkK,MAAO,QAhCpK,EAmCdwI,KAAO,SAACxI,EAAOtD,GACX,IAAIyM,EAAQ,GACZ,GAAqB,IAAjBnJ,EAAMhL,OAAc,OAAOmU,EAE/B,IAAK,IAAIhS,EAAI,EAAGA,EAAI6I,EAAMhL,OAAQmC,IAAK,CACnC,IAAIhB,EAAMuG,EAAS,IAAMvF,EACrBkJ,EAAOL,EAAM7I,GACbkJ,EAAKnK,UAAYmK,EAAKL,OACtB,EAAKnJ,IAAIV,GAAOkK,EAChB8I,EAAM3T,KAAK,kBAAMyK,KAAN,UAAsBI,EAAKtG,OAAX5D,KAG3BgT,EAAM3T,KAAK,cAACgU,GAAD,CAAmBrU,MAAO,+BAAOkL,EAAKtG,QAAtC,SAAuD,EAAKyO,KAAKnI,EAAKL,MAAO7J,IAA/DA,IAIjC,OAAOgT,GAhDP,EAAKrT,MAAQ,CACTkK,MAAO,IAEX,EAAKnJ,IAAM,GACXX,YAAQ,iBAAiBG,MAAK,SAAAC,GAC1B,GAAa,OAATA,GAAiC,IAAhBA,EAAKtB,OAA1B,CAEA,IAAIqL,EAAO/J,EAAK,GAAGJ,SAAWI,EAAK,GAAG8F,KACtC,EAAK1G,SAAS,CACVsK,MAAO1J,EACP+J,KAAMA,IACP,kBAAM,EAAKvE,KAAKuE,EAAO/J,EAAK,GAAKA,EAAK,GAAG0J,MAAM,WAd5C,E,UADKzJ,IAAMC,W,sFCmDdqT,I,yDAnDX,WAAYjV,GAAQ,IAAD,8BACf,cAAMA,IAMVkV,KAAO,WACH,EAAKlV,MAAM0C,KAAKwE,KAAK,aAAc,GAAI,OARxB,EAWnBiO,SAAW,WACP,EAAKnV,MAAM0C,KAAKwE,KAAK,iBAAkB,GAAI,KAZ5B,EAenBkO,QAAU,WACNzS,YAAK,kBAAkBlB,MAAK,SAAAmB,GAAI,OAAI8E,OAAOC,SAAS3B,aAhBrC,EAmBnBhF,OAAS,WACL,IAAIqU,EAAO,EAAKrV,MAAMsV,KAAKD,MAAQ,YAC/BzB,EAAO,8BACP,mBAAMvI,KAAN,CAAWzF,QAAS,EAAKsP,KAAzB,UACI,cAACK,GAAA,EAAD,IACA,+DAEJ,mBAAMlK,KAAN,CAAWzF,QAAS,EAAKuP,SAAzB,UACI,cAACK,GAAA,EAAD,IACA,+DAEJ,kBAAMC,QAAN,IACA,mBAAMpK,KAAN,CAAWzF,QAAS,EAAKwP,QAAzB,UACI,cAACM,GAAA,EAAD,IACA,sDAIR,OACI,sBAAK3T,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAf,SAAsC,oBAAM4T,SAAU,EAAKzU,MAAMuC,YACjE,oBAAU6H,QAASsI,EAAnB,SACI,sBAAK7R,UAAU,sBAAf,UACK,EAAK/B,MAAMsV,KAAKtT,OAAS,oBAAQI,IAAKC,YAAI,EAAKrC,MAAMsV,KAAKtT,UAAc,6BAASqT,EAAK7Q,UAAU,EAAG,KACpG,+BAAO6Q,aAxCvB,EAAKnU,MAAQ,CAAEuC,SAAS,GACxBD,YAAO,gBAJQ,E,UADJ7B,IAAMC,YC+BVgU,I,yDA5Bb,WAAY5V,GAAQ,IAAD,8BACjB,cAAMA,IAQRgB,OAAS,kBACP,oBAAQsE,MAAO,CAAEuQ,UAAW,SAA5B,UACE,mBAAQC,MAAR,WACE,qBAAK/T,UAAU,eAAf,SAA+B,EAAK/B,MAAM+V,KAAO,CAAC,qBAAe3T,IAAKC,YAAI,EAAKrC,MAAM+V,MAAOnM,IAAI,IAArC,OAA4C,uBAAS,QAAgB,OAChI,qBAAK7H,UAAU,eAAf,SAA8B,cAAC,GAAD,MAC9B,sBAAKA,UAAU,oBAAf,kCAA0D,IAAIiU,MAAOC,oBAEvE,8BACE,kBAAQC,OAAR,CAAenU,UAAU,iBAAzB,SACE,cAAC,GAAD,CAAMuT,KAAM,EAAKtV,MAAMsV,KAAM5S,KAAMA,OAErC,kBAAQyT,QAAR,UACE,qBAAKpU,UAAU,eAAf,SAA+B,EAAKb,MAAMwB,gBAlBhD,EAAKxB,MAAQ,CACXwB,KAAM,yBAERA,GAAKiS,SAAL,gBANiB,E,UADChT,IAAMC,Y,kDC6EbwU,I,yDA7EX,WAAYpW,GAAQ,IAAD,8BACf,cAAMA,IA2BV8L,OAAS,SAAA7G,GACD,EAAK/D,MAAMmV,IAAMpR,EAAOqR,SAAWrR,EAAOkQ,SAC1CrS,EAAA,EAAQE,KAAK,6EAKjBiC,EAAOzC,KAAO,GACdlB,YAAQ,eAAiB,EAAKJ,MAAMmV,GAAK,KAAO,MAAOpR,GAAQxD,MAAK,SAAAC,GACpD,MAARA,GACAgG,OAAOC,SAAS3B,cAtCT,EA2CnBnF,OAAS,WACL,EAAKC,SAAS,CAAEuV,IAAK,EAAKnV,MAAMmV,MAzChC,EAAKnV,MAAQ,CACTmV,IAAI,EACJ1C,OAAQ,IAEZrS,YAAQ,mBAAoB,CAAEC,IAAK,mCAAoCE,MAAK,SAAAC,GACxE,GAAa,OAATA,EAAJ,CAEA,IAAImP,EAAQvG,YAAQ5I,EAAK,mCACzB,GAAqB,IAAjBmP,EAAMzQ,OAAV,CAEA,IAAIwQ,EAAYC,EAAM,GACtBD,EAAUzL,MAAQyL,EAAUpQ,KAC5B,IAAIwL,EAAQ4E,EAAUpQ,KAAKqN,YAAY,KACnC7B,GAAS,IACT4E,EAAUzL,MAAQyL,EAAUpQ,KAAKgE,UAAU,EAAGwH,IAClD,EAAKlL,SAAS,CAAE8P,UAAWA,SAE/BtP,YAAQ,gCAAgCG,MAAK,SAAAC,GAC5B,OAATA,GAAiBA,EAAKtB,QAAU,GAGpC,EAAKU,SAAS,CAAE6S,OAAQjS,OAxBb,E,sDAgDf,OACI,oBAAQK,UAAU,iBAAlB,UACI,mBAAQoU,QAAR,WACI,qBAAKpU,UAAU,iBAAf,SAAiCqE,SAAS7F,QAC1C,qBAAKwB,UAAU,eAAf,SACI,oBAAM8J,SAAU0K,KAAKzK,OAArB,UACI,kBAAMT,KAAN,CAAW7K,KAAK,MAAhB,SAAsB,mBAAOgW,OAAQ,cAACjB,GAAA,EAAD,CAAcjQ,MAAO,CAAEmR,MAAO,qBAAyBC,YAAY,qBAAMC,WAAW,MACzH,kBAAMtL,KAAN,CAAW7K,KAAK,WAAhB,SAA2B,kBAAOkS,SAAP,CAAgB8D,OAAQ,cAAChB,GAAA,EAAD,CAAclQ,MAAO,CAAEmR,MAAO,qBAAyBC,YAAY,mBACrHH,KAAKrV,MAAMmV,GAAK,kBAAMhL,KAAN,CAAW7K,KAAK,SAAhB,SAAyB,kBAAOkS,SAAP,CAAgB8D,OAAQ,cAAChB,GAAA,EAAD,CAAclQ,MAAO,CAAEmR,MAAO,qBAAyBC,YAAY,+BAAwB,KAC5JH,KAAKrV,MAAMmV,IAAME,KAAKrV,MAAMyS,OAAOvT,OAAS,EAAI,kBAAMiL,KAAN,CAAWlG,MAAM,eAAK3E,KAAK,QAA3B,SAAmC,kBAAOyL,MAAP,CAAatB,QAAS4L,KAAKrV,MAAMyS,OAAQiD,WAAW,SAASC,YAAY,YAAyB,KACrLN,KAAKrV,MAAMmV,IAAME,KAAKrV,MAAM0P,UAAY,kBAAMvF,KAAN,UAAW,mBAAGzD,KAAM2O,KAAKrV,MAAM0P,UAAUnO,IAAM,aAAe8T,KAAKrV,MAAM0P,UAAUpQ,KAAMN,OAAO,SAASqK,IAAI,sBAAlG,SAAyHgM,KAAKrV,MAAM0P,UAAUzL,UAAyB,KAC3N,kBAAMkG,KAAN,UAAW,mBAAQ7I,KAAK,UAAUmJ,SAAS,SAAS5J,UAAU,oBAAnD,SAAwEwU,KAAKrV,MAAMmV,GAAK,2BAAS,mBAC3GE,KAAKvW,MAAM8W,aAAe,mBAAMzL,KAAN,WACvB,mBAAQ7I,KAAK,OAAOT,UAAU,kBAAkB6D,QAAS2Q,KAAK1V,OAA9D,SAAuE0V,KAAKrV,MAAMmV,GAAK,mDAAa,mCACpG,wEACA,cAACU,GAAA,EAAD,CAAgBhV,UAAU,kBAC1B,cAACiV,GAAA,EAAD,CAAgBjV,UAAU,kBAC1B,cAACkV,GAAA,EAAD,CAAelV,UAAU,kBACzB,cAACmV,GAAA,EAAD,CAAgBnV,UAAU,qBACf,aAI3B,mBAAQoV,OAAR,CAAepV,UAAU,iBAAzB,kCAAiE,IAAIiU,MAAOC,wB,GAxEvEtU,IAAMC,YCgCZwV,G,kDA/Bb,WAAYpX,GAAQ,IAAD,8BACjB,cAAMA,IAUR0M,kBAAoB,WAClBpL,YAAQ,mBAAoB,CAAEC,IAAK,oBAAqBE,MAAK,SAAAC,GAC9C,OAATA,IAEJ0E,SAAS7F,MAAQmB,EAAK,iCAAmC,iBACzD,EAAKZ,SAAS,CACZiV,KAAMrU,EAAK,+BACXoV,aAAwD,MAA1CpV,EAAK,uCAGvBJ,YAAQ,cAAcG,MAAK,SAAAC,GAAI,OAAI,EAAKZ,SAAS,CAAEwU,KAAM5T,QArBxC,EAwBnBV,OAAS,kBACP,mBAAgBoP,OAAQiH,IAAxB,SACG,EAAKnW,MAAMoU,KAAK5U,IAAoC,KAA9B,EAAKQ,MAAMoU,KAAK5U,GAAGN,OAAgB,cAAC,GAAD,CAAS2V,KAAM,EAAK7U,MAAM6U,KAAMT,KAAM,EAAKpU,MAAMoU,OAAW,cAAC,GAAD,CAAQS,KAAM,EAAK7U,MAAM6U,KAAMe,aAAc,EAAK5V,MAAM4V,kBAvBhL,EAAK5V,MAAQ,CACX6U,KAAM,GACNe,cAAc,EACdxB,KAAM,IAER9R,YAAO,MARU,E,UADF7B,IAAMC,WCKL0V,QACW,cAA7B5P,OAAOC,SAAS4P,UAEe,UAA7B7P,OAAOC,SAAS4P,UAEhB7P,OAAOC,SAAS4P,SAASC,MACvB,2DCZNC,IAASzW,OAAO,cAAC,GAAD,IAAUoF,SAASsR,eAAe,SD6H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpW,MAAK,SAAAqW,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1L,QAAQ0L,MAAMA,EAAMnV,a,oEEpFtB8F,EAAO,IAhDT,aAAe,IAAD,gCAId+E,IAAM,SAAAlL,GACF,IAAIlB,EAAMkB,EAAI+B,UAAU,EAAG/B,EAAIoL,YAAY,KAAO,GAClD,OAAItM,KAAO,EAAKU,IACL,IAAIiW,SAAQ,SAACC,EAASC,GACzBD,EAAQ,EAAKlW,IAAIV,OAIlBD,YAAQ,gBAAiB,CAC5BC,IAAKA,IACNE,MAAK,SAAAC,GAKJ,OAJY,MAARA,IACA,EAAKO,IAAIV,GAAOG,GAGbA,MAnBD,KAuBd1B,MAAQ,SAACqY,EAAMC,GACX,IAAKD,EAAM,OAAOC,EAElB,IAAKA,EAAK,OAAOD,EAEjB,IALmB,EAKfE,EAAK,GALU,cAMLD,GANK,IAMnB,2BAAmB,CAAC,IAAD,EAAV9N,EAAU,QACXgO,EAAK,GADM,cAEDH,GAFC,IAEf,2BAAoB,CAAC,IAAZvJ,EAAW,QAChB,GAAIA,EAAEtO,OAASgK,EAAEhK,KAAM,CACnBgY,EAAK1J,EAEL,QANO,8BASfyJ,EAAG3X,KAAH,2BACO4X,GACAhO,KAjBQ,8BAqBnB,OAAO+N,GA3CPhC,KAAKtU,IAAM,IAiDJ2G,O,gCCvDf,8KAAMqB,EAAU,SAACxJ,EAAOyJ,GACpB,IAAKzJ,EAAO,OAAOyJ,GAAS,GAE5B,IACI,OAAQuO,SAAShY,GAAS,KAAK2O,QAAQ,GACzC,MAAO3J,GACL,MAAO,SAITyL,EAAY,SAAAzQ,GACd,IAAKA,EAAO,OAAO,EAEnB,IACI,OAAO4D,KAAKqU,MAA0B,IAApBvJ,WAAW1O,KAAiB,EAChD,MAAOgF,GACL,OAAO,IAIT0E,EAAY,SAAA1J,GACd,IAAKA,EAAO,MAAO,SAEnB,IACI,OAAQgY,SAAShY,GAAS,KAAK2O,QAAQ,GAAK,KAC9C,MAAO3J,GACL,MAAO,WAIT0L,EAAc,SAAA1Q,GAChB,IAAKA,EAAO,OAAO,EAEnB,IAEI,IAAIL,GADJK,EAAQA,EAAMkY,QACKvY,OAInB,OAHIA,EAAS,GAAqC,MAAhCK,EAAM+D,UAAUpE,EAAS,KACvCK,EAAQA,EAAM+D,UAAU,EAAGpE,EAAS,GAAGuY,QAEpCtU,KAAKqU,MAA0B,IAApBvJ,WAAW1O,IAC/B,MAAOgF,GACL,OAAO,IAITsL,EAAQ,SAACtQ,EAAO6T,GAClB,IAAK7T,EAAO,OAAO6T,EAEnB,IACI,OAAOmE,SAAShY,GAClB,MAAOgF,GACL,OAAO6O,K,gCCnDf,sCAAMhK,EAAU,SAAAsO,GACZ,IAAKA,EACD,MAAO,GAEX,GAAsB,kBAAVA,EACR,OAAOA,EAEX,IACI,IAAI/H,EAAQxN,KAAKoO,MAAMmH,GAEvB,OAAO/H,aAAiBvI,MAAQuI,EAAQ,GAC1C,MAAOpL,GACL,MAAO,O","file":"static/js/main.48e681d4.chunk.js","sourcesContent":["import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = <Search key=\"search\" props={this.searchProps} toolbar={props.meta.toolbar} grid={this} form={this.form} dselect={this.state.dselect} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(props.body.uri(props.uri, prop.service), prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data.list || data) {\n                        let option = d;\n                        if (lname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + lname);\n                        else\n                            option.label = d[lname];\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.style(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    if (mops.length <= 2) {\n                        for (let op of mops) {\n                            if (ops.length > 0) ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                            ops.push(this.action(op, model));\n                        }\n                    } else {\n                        ops.push(this.action(mops[0], model));\n                        ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                        let items = [];\n                        for (let i = 1; i < mops.length; i++) {\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        }\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    value = (name, value) => {\n        console.log(name + \";\" + value);\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.form)\n            props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        this.state = {\n            options: [],\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        } else\n            parameter.value = value;\n        service(this.props.body.uri(this.props.uri, this.props.service), { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('label=' + this.lname);\n                else\n                    label = option[this.lname];\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({ options });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            uri = uri ? (uri + ',' + data.path) : data.path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass File extends React.Component {\n    state = {\n        list: null\n    }\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            let list = this.list();\n            for (let f of list)\n                if (f.uid === file.uid)\n                    return;\n\n            list.push(file);\n            this.setState({ list });\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.value();\n\n                return;\n            }\n\n            let list = [];\n            for (let f of this.list())\n                if (f.uid !== file.uid)\n                    list.push(f);\n            this.setState({ list });\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            let list = [];\n            for (let f of this.list()) {\n                if (f.uid === file.uid)\n                    continue;\n\n                list.push(f);\n            }\n            this.setState({ list: list });\n            this.value();\n\n            return;\n        }\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                file.url = url(file.uri);\n            }\n            list.push({\n                name: file.name,\n                uri: file.uri\n            });\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n\n    render = () => {\n        let props = {\n            action: url('/photon/ctrl-http/upload'),\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { PaperClipOutlined, SyncOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent, toInt } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n        this.itemIndex = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = toInt(value, 0);\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (prop.type === 'array') {\n                let array = toArray(value);\n                for (let i = 0; i < array.length; i++)\n                    for (let k in array[i])\n                        values[prop.name + ':' + k + ':' + i] = array[i][k];\n            } else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props))\n            this.item(items, prop, '');\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    item = (items, prop, key) => {\n        if (prop.type === 'array') {\n            let is = [];\n            let array = toArray(this.state[prop.name]);\n            for (let i = 0; i < array.length; i++) {\n                is.push(<div key={prop.name + ':divider:' + i} className=\"console-form-children-divider\" />);\n                for (let child of prop.children) {\n                    let c = JSON.parse(JSON.stringify(child));\n                    c.name = prop.name + ':' + c.name + ':' + i;\n                    this.item(is, c, prop.name + ':');\n                }\n            }\n            items.push(\n                <div key={prop.name} className=\"console-form-children\">\n                    <div className=\"console-form-children-title\">{prop.label}</div>\n                    {is}\n                    <div className=\"console-form-children-divider\" />\n                    <div className=\"console-form-children-plus\"><button type=\"primary\" onClick={this.plus.bind(this, prop)}><PlusOutlined /></button></div>\n                </div>\n            );\n            this.itemIndex++;\n\n            return;\n        }\n\n        let item = {\n            key: key + prop.name,\n            className: 'console-form-item console-form-item-' + (this.itemIndex++ % 2 === 0 ? 'odd' : 'even'),\n            label: prop.label\n        };\n        if (prop.type && prop.type.startsWith('read-only')) {\n            items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n        } else if (prop.type === 'image') {\n            items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'file') {\n            items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'dselect') {\n            items.push(<Form.Item {...item}><DSelect body={this.props.body} uri={this.props.uri} {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n        } else if (prop.type === 'refresh') {\n            items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n        } else if (prop.type === 'editor') {\n            items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'html') {\n            items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n        } else if (prop.type === 'agreement') {\n            let value = this.state[prop.agreement] || { uri: '', name: '' };\n            if (value) {\n                let label = value.name;\n                let index = label.lastIndexOf('.');\n                if (index > -1) label = label.substring(0, index);\n                item.className += ' console-form-agreement';\n                item.label = 'agreement';\n                items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n            }\n        } else if (prop.type === 'category') {\n            let list = prop.category;\n            if (!list && this.props.parameter && this.props.parameter.key)\n                list = this.props.parameter.key;\n            items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n        } else if (prop.type === 'user') {\n            items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n        } else {\n            if (prop.type === 'switch')\n                item.valuePropName = 'checked';\n            items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n        }\n    }\n\n    plus = (prop) => {\n        let obj = {};\n        for (let child of prop.children)\n            obj[child.name] = '';\n        let data = toArray(this.state[prop.name]);\n        data.push(obj);\n        let state = {};\n        state[prop.name] = data;\n        this.setState(state);\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file') {\n            let files = [];\n            try {\n                for (let file of toArray(value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: toInt(index, 0) });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            let keys = Object.keys(prop.values);\n            for (let index in keys)\n                options.push({ label: prop.values[keys[index]], value: keys[index] });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => {\n        for (let prop of this.props.meta.props) {\n            if (prop.type === 'array') {\n                let array = [];\n                for (let key in values) {\n                    if (values[key] === undefined)\n                        continue;\n\n                    if (key.indexOf(prop.name) > -1) {\n                        let ks = key.split(':');\n                        let index = toInt(ks[2]);\n                        let obj = array[index] || {};\n                        obj[ks[1]] = values[key];\n                        delete values[key];\n                        array[index] = obj;\n                    }\n                }\n                let arr = [];\n                for (let obj of array)\n                    if (obj)\n                        arr.push(obj);\n                values[prop.name] = JSON.stringify(arr);\n            }\n        }\n\n        return service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n    }\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;","const toMoney = (value, empty) => {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = value => {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = value => {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = value => {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toInt = (value, defaultValue) => {\n    if (!value) return defaultValue;\n\n    try {\n        return parseInt(value);\n    } catch (e) {\n        return defaultValue;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent,\n    toInt\n};","const toArray = text => {\n    if (!text)\n        return [];\n\n    if (typeof (text) === 'object')\n        return text;\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}"],"sourceRoot":""}