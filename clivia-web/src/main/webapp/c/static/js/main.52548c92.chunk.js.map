{"version":3,"sources":["console/category.jsx","console/user.jsx","http.js","console/grid.jsx","console/dselect.jsx","console/numeric.js","console/dashboard.jsx","console/image.jsx","console/upload.jsx","console/file.jsx","console/folder.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","json.js","console/meta.js"],"names":["Category","props","format","target","source","length","category","element","title","name","value","id","children","push","change","setState","form","render","treeData","state","list","treeDefaultExpandedKeys","onChange","service","key","pointTo","then","data","React","Component","User","uids","className","avatar","map","uid","line","src","url","auth","i","type","uri","body","post","json","code","message","success","warn","fetch","method","headers","header","JSON","stringify","response","loader","loading","localStorage","removeItem","ok","status","statusText","upload","file","psid","FormData","append","getItem","Math","random","toString","substring","setItem","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","dselect","prop","style","eval","condition","e","button","op","onClick","operate","bind","action","reload","search","searches","input","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","indexOf","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","parameter","href","encodeURIComponent","window","open","location","ids","delete","parent","preview","currentTarget","cancelPreview","cancelDelete","okDelete","switch","check","param","pagination","Array","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","Search","toolbar","grid","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","onOk","deleteItems","items","span","createRef","hidden","toMoney","empty","toPercent","imgs","img","toArray","rel","s","defaultChecked","disabled","options","vname","lname","d","option","lines","dataIndex","ops","mops","when","opsize","Item","overlay","cols","initialValues","item","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","console","log","DSelect","componentDidMount","focus","filter","toLowerCase","showSearch","onFocus","onSearch","filterOption","parseInt","toFixed","fromMoney","round","parseFloat","fromPercent","trim","toInt","defaultValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","thumbnail","cancel","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","UploadSupport","replace","exists","f","File","PaperClipOutlined","progress","strokeColor","strokeWidth","percent","UploadOutlined","Folder","addonAfter","FolderOutlined","select","getElementById","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","setFieldsValue","k","moment","join","submit","itemIndex","is","child","c","parse","editable","startsWith","fix","move","VerticalAlignTopOutlined","ArrowUpOutlined","ArrowDownOutlined","VerticalAlignBottomOutlined","DeleteOutlined","plus","icon","SyncOutlined","refresh","valuePropName","obj","from","to","moveCopy","mode","allowClear","showTime","time","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","undefined","ks","arr","Setting","kvs","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","text","Promise","resolve","reject","full","sub","ps","fn"],"mappings":"6KAIMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAoBVC,OAAS,SAACC,EAAQC,GACd,GAAsB,IAAlBA,EAAOC,OAAX,CADyB,oBAIJD,GAJI,IAIzB,2BAA6B,CAAC,IAArBE,EAAoB,QACrBC,EAAU,CACVC,MAAOF,EAASG,KAChBC,MAAOJ,EAASK,IAEhBL,EAASM,WACTL,EAAQK,SAAW,GACnB,EAAKV,OAAOK,EAAQK,SAAUN,EAASM,WAE3CT,EAAOU,KAAKN,IAbS,iCArBV,EAsCnBO,OAAS,SAAAJ,GACL,EAAKK,SAAS,CACVL,MAAOA,IAEX,EAAKT,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAMC,IA1CxB,EA6CnBO,OAAS,kBAAM,mBAAYC,SAAU,EAAKC,MAAMC,KAAMV,MAAO,EAAKS,MAAMT,MAAOW,wBAAyB,CAAC,EAAKF,MAAMT,OAAQY,SAAU,EAAKR,UA1CvI,EAAKK,MAAQ,CACTC,KAAM,GACNV,MAAO,IAEXT,EAAMe,KAAKN,MAAMT,EAAMQ,KAAMR,EAAMS,OACnCa,YAAQ,iBAAkB,CAAEC,IAAKvB,EAAMmB,KAAMK,QAASxB,EAAMwB,UAAWC,MAAK,SAAAC,GACxE,GAAa,OAATA,EAAJ,CAGA,IAAIR,EAAQ,CACRC,KAAM,GACNV,MAAOT,EAAMS,OAEjB,EAAKR,OAAOiB,EAAMC,KAAMO,GACxB,EAAKZ,SAASI,OAjBH,E,UADAS,IAAMC,WAiDd7B,O,+HChDT8B,E,4MACFb,OAAS,WACL,IAAK,EAAKhB,MAAM0B,KACZ,OAAO,KAEX,IAAII,EAAO,EAAKA,OAEhB,OACI,sBAAKC,UAAU,OAAf,UACK,EAAKC,SACN,sBAAKD,UAAU,YAAf,UACKD,EAAKG,KAAI,SAAAC,GAAG,OAAI,qBAAeH,UAAU,WAAzB,SAAqCG,GAA3BA,MAC1B,EAAKC,KAAKL,EAAM,QAChB,EAAKK,KAAKL,EAAM,QAChB,EAAKK,KAAKL,EAAM,UAChB,EAAKK,KAAKL,EAAM,gB,EAMjCE,OAAS,WACL,OAAK,EAAKhC,MAAM0B,KAAKM,OAGd,qBAAKD,UAAU,cAAf,SAA6B,mBAAQK,IAAKC,YAAI,EAAKrC,MAAM0B,KAAKM,YAF1D,M,EAKfF,KAAO,WACH,IAAK,EAAK9B,MAAM0B,KAAKY,MAAQ,EAAKtC,MAAM0B,KAAKY,KAAKlC,QAAU,EACxD,MAAO,GAGX,IADA,IAAI0B,EAAO,GACFS,EAAI,EAAGA,EAAI,EAAKvC,MAAM0B,KAAKY,KAAKlC,OAAQmC,IACxC,EAAKvC,MAAM0B,KAAKY,KAAKC,GAAGC,MACzBV,EAAKlB,KAAK,EAAKZ,MAAM0B,KAAKY,KAAKC,GAAGL,KAE1C,OAAOJ,G,EAGXK,KAAO,SAACL,EAAMtB,GACV,IAAIC,EAAQ,EAAKT,MAAM0B,KAAKlB,GAC5B,IAAKC,EACD,OAAO,KAHQ,oBAKHqB,GALG,IAKnB,4BACI,GADJ,UACgBrB,EACR,OAAO,MAPI,8BASnB,OAAO,qBAAKsB,UAAW,QAAUvB,EAA1B,SAAiCC,K,YAjD7BkB,IAAMC,WAqDVC,O,6NCpDTP,EAAU,SAACmB,EAAKC,GAAN,OAAeC,EAAKF,EAAKC,GAAMjB,MAAK,SAAAmB,GAChD,OAAa,OAATA,EAAsB,KAER,IAAdA,EAAKC,MACDD,EAAKE,SACL,IAAQC,QAAQH,EAAKE,SAElBF,EAAKlB,OAGhB,IAAQsB,KAAK,IAAMJ,EAAKC,KAAO,IAAMD,EAAKE,SAEnC,UAGLH,EAAO,SAAPA,EAAQF,EAAKC,GAAN,OAAeO,MAjBf,GAiB4BR,EAAK,CAC1CS,OAAQ,OACRC,QAASC,IACTV,KAAMW,KAAKC,UAAUZ,KACtBjB,MAAK,SAAA8B,GAUJ,OATIZ,EAAKa,QACLb,EAAKa,OAAO1C,SAAS,CACjB2C,SAAS,IAIL,mBAARhB,GACAiB,aAAaC,WAAW,qBAExBJ,EAASK,GAAWL,EAASX,QAEjC,IAAQI,KAAK,IAAMO,EAASM,OAAS,IAAMN,EAASO,YAE7C,UAGLC,EAAS,SAACvD,EAAMwD,GAClB,IAAIZ,EAAS,GACba,EAAKb,GAAQ,GACb,IAAIV,EAAO,IAAIwB,SAGf,OAFAxB,EAAKyB,OAAO3D,EAAMwD,GAEXf,MAAa,2BAA4B,CAC5CC,OAAQ,OACRC,QAASC,EACTV,KAAMA,IACPjB,MAAK,SAAA8B,GAOJ,OANIZ,EAAKa,QACLb,EAAKa,OAAO1C,SAAS,CACjB2C,SAAS,IAIbF,EAASK,GACFL,EAASX,OAAOnB,MAAK,SAAAmB,GACxB,OAAIA,EAAKG,QACEH,GAEX,IAAQI,KAAKJ,EAAKE,SAEX,UAIf,IAAQE,KAAK,IAAMO,EAASM,OAAS,IAAMN,EAASO,YAE7C,UAITV,EAAS,WACX,IAAIA,EAAS,CACT,eAAgB,oBAIpB,OAFAa,EAAKb,GAAQ,GAENA,GAGLf,EAAM,SAAAI,GAAG,MAjFF,GAiFaA,GAEpBwB,EAAO,SAACb,EAAQK,GACdA,GAAWd,EAAKa,QAChBb,EAAKa,OAAO1C,SAAS,CACjB2C,SAAS,IAIjB,IAAIQ,EAAOP,aAAaU,QAAQ,qBAChC,IAAKH,EAAM,CAEP,IADAA,EAAO,GACAA,EAAK7D,OAAS,IAAI6D,GAAQI,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACtEP,EAAOA,EAAKO,UAAU,EAAG,IACzBd,aAAae,QAAQ,oBAAqBR,GAE9Cb,EAAO,qBAAuBa,GAG5BT,EAAS,SAAAA,GAAM,OAAIb,EAAKa,OAASA,I,stIC7F/BkB,YAAR,oDAAQA,YAEFC,K,8YACF,cAAY3E,OAAQ,IAAD,2LACf,uBAAMA,OADS,MA0KnBS,MAAQ,SAACmE,EAAOpE,GACZ,IADqB,EACjBqE,EAAID,EADa,uLAEPpE,EAAKsE,MAAM,MAFJ,IAErB,2BAA+B,CAAC,IAAvBC,EAAsB,QAC3B,KAAIA,KAAKF,GAGL,MAAO,GAFPA,EAAIA,EAAEE,IAJO,8BASrB,OAAU,IAANF,EACO,EAEJA,GAAK,IAtLG,MAyLnBG,SAAW,SAACC,EAAQxE,GAChB,IAAKA,EAAO,MAAO,GAEnB,IAH0B,EAGtByE,EAAS,GAHa,uLAIZzE,GAJY,IAI1B,2BAAqB,CAAC,IACd0E,EAAQF,EADK,SAEbE,IACAD,GAAU,IAAMC,IAPE,8BAU1B,OAAOD,EAAO9E,OAAS,EAAI8E,EAAOV,UAAU,GAAK,IAnMlC,MAsMnBY,QAAU,SAACC,EAAMT,GACb,IAAInE,EAAQ,MAAKA,MAAMmE,EAAOS,EAAK7E,MACnC,OAAK,MAAKU,MAAMkE,SAAY,MAAKlE,MAAMkE,QAAQC,EAAK7E,MAE7C,MAAKU,MAAMkE,QAAQC,EAAK7E,MAAMC,GAF6B,SAxMnD,MA6MnB6E,MAAQ,SAACD,KAAMT,MAAOtE,SAClB,GAAI+E,KAAKC,MAAO,CAAC,IAAD,gMACMD,KAAKC,OADX,WACZ,kDAA8B,CAAC,IAAtBA,MAAqB,aAC1B,IAEI,GAAIC,KAAKD,MAAME,WACX,OAAO,mEAAKF,MAAOA,MAAM7E,MAAlB,SAA0BH,UACvC,MAAOmF,MAND,qDAUhB,OAAOnF,SAxNQ,MA2NnBoF,OAAS,SAAAC,GAAE,OAAI,4GAAuBC,QAAS,MAAKC,QAAQC,KAAb,wLAAwBH,EAAI,MAA5D,SAAoEA,EAAGR,OAA1DQ,EAAGR,QA3NZ,MA6NnBY,OAAS,SAACJ,EAAIf,GAAL,OAAe,oEAAqB7C,UAAU,kBAAkB6D,QAAS,MAAKC,QAAQC,KAAb,wLAAwBH,EAAIf,GAAtF,SAA+Fe,EAAGR,OAAvFQ,EAAGR,QA7NnB,MA+NnBU,QAAU,SAACF,EAAIf,GACX,GAAgB,WAAZe,EAAGnD,MAAiC,YAAZmD,EAAGnD,KAM/B,GAAgB,WAAZmD,EAAGnD,KAWP,GAAImD,EAAGK,OACH,MAAKA,OAAOL,EAAIf,EAAO,SAK3B,GAAIe,EAAGM,OACH,MAAKD,OAAOL,EAAIf,EAAO,MAAKsB,iBAKhC,GAAgB,QAAZP,EAAGnD,KAAP,CAUA,GAAgB,WAAZmD,EAAGnD,KAAmB,CACtB,IAAI2D,EAAQC,SAASC,cAAc,SA8BnC,OA7BAF,EAAM3D,KAAO,OACb2D,EAAMb,MAAMgB,QAAU,OACtBH,EAAMI,SAAW,SAAAd,GACb,GAAKA,EAAEvF,OAAOsG,OAAmC,IAA1Bf,EAAEvF,OAAOsG,MAAMpG,OAAtC,CAEA,IAAIqG,EAAS,IAAIC,WACb1C,EAAOyB,EAAEvF,OAAOsG,MAAM,GAC1BC,EAAOE,OAAS,WACPF,EAAOG,QAAmC,kBAAlBH,EAAOG,QAIpCtF,8CAAQ,sBAAuB,CAC3Bd,KAAMmF,EAAG5B,OACT8C,SAAU7C,EAAKxD,KACfsG,YAAa9C,EAAKxB,KAClBuE,OAAQN,EAAOG,OAAOpC,UAAUiC,EAAOG,OAAOI,QAAQ,KAAO,KAC9DvF,MAAK,SAAAC,GACJ0E,SAAS1D,KAAKuE,YAAYd,GACb,OAATzE,GAEJ,MAAKwF,KAAK,CAAEC,QAAS,MAAKC,SAAW,QAG7CX,EAAOY,cAAcrD,KAEzBoC,SAAS1D,KAAK4E,YAAYnB,QAC1BA,EAAMoB,QAKV,GAAgB,aAAZ5B,EAAGnD,KAmBHoC,GAASA,EAAMjE,iBACRiE,EAAMjE,SAED,SAAZgF,EAAGnD,KACH,MAAKxC,MAAM0C,KAAK8E,KAAK7B,EAAG6B,KAAM,MAAKxH,MAAMyH,UAAW7C,GAEpD,MAAK5E,MAAM0C,KAAKwE,KAAK,MAAKlH,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAAO,MAAKxC,MAAMyH,UAAW7C,OAzB3G,CACI,IAAI8C,EAAO,MAAK1H,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAChE,GAAIoC,GAASA,EAAMlE,GAAIgH,GAAQ,OAAS9C,EAAMlE,OACzC,CACD,IAAIuE,EAAS,MAAKiB,WAClB,IAAK,IAAI3E,KAAO0D,EAAQ,CACpB,IAAIxE,EAAQwE,EAAO1D,GACdd,IAGLiH,IAA+B,IAAvBA,EAAKV,QAAQ,KAAc,IAAM,IACzCU,GAAQnG,EAAM,IAAMoG,mBAAmBlH,KAG/CmH,OAAOC,KAAK,eAAeC,SAASJ,KAAOA,OA1D/C,CACI,IADmB,EACfK,EAAM,GADS,uLAEL,MAAK7G,MAAMC,MAFN,IAEnB,4BACI4G,GAAO,IADX,QACmBrH,IAHA,8BAIfqH,EAAI3H,OAAS,GACb,MAAK4F,OAAOL,EAAIf,EAAO,CAAEmD,IAAKA,EAAIvD,UAAU,UA3BhD,MAAK1D,SAAS,CACVkH,OAAQ,CACJrC,GAAIA,EACJf,MAAOA,UATf,MAAK5E,MAAM0C,KAAKwE,KAAK,MAAKlH,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAAO,MAAKxC,MAAMyH,UAAW7C,GAASA,EAAMlE,GAAK,CAAEuH,OAAQrD,EAAMlE,IAAO,KAjOvI,MAqUnBwH,QAAU,SAAAzC,GAAC,OAAI,MAAK3E,SAAS,CAAEoH,QAASzC,EAAE0C,cAAc/F,OArUrC,MAuUnBgG,cAAgB,kBAAM,MAAKtH,SAAS,CAAEoH,QAAS,QAvU5B,MAyUnBG,aAAe,kBAAM,MAAKvH,SAAS,CAAEkH,OAAQ,QAzU1B,MA2UnBM,SAAW,WACP,MAAKtC,OAAO,MAAK9E,MAAM8G,OAAOrC,GAAI,MAAKzE,MAAM8G,OAAOpD,MAAO,IAC3D,MAAK9D,SAAS,CAAEkH,OAAQ,QA7UT,MAgVnBO,OAAS,SAAC5C,EAAIf,EAAO4D,GACjB,IAAIf,EAAY,GAChBA,EAAU9B,EAAGnF,MAAQgI,EAAQ,EAAI,EACjC,MAAKxC,OAAOL,EAAIf,EAAO6C,IAnVR,MAsVnBzB,OAAS,SAACL,EAAIf,EAAO6C,GACjB,IAAIgB,EAAK,qVAAQ7D,GAAU6C,GACvB9B,EAAG8B,YACHgB,EAAK,qVAAQA,GAAU9C,EAAG8B,YAC1B,MAAKzH,MAAMyH,YACXgB,EAAK,qVAAQA,GAAU,MAAKzI,MAAMyH,YACtCnG,8CAAQ,MAAKtB,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAKkD,EAAGrE,SAAWqE,EAAGnD,MAAOiG,GAAOhH,MAAK,SAAAC,GAC/D,OAATA,GAEJ,MAAKwF,KAAK,CAAEC,QAAS,MAAKC,SAAW,QA/V1B,MAmWnBF,KAAO,SAAAwB,GACH,IAAIjB,EAAY,MAAKvB,WACjBwC,IACAjB,EAAUL,QAAUsB,EAAWvB,SAC/B,MAAKnH,MAAMyH,YACXA,EAAS,qVAAQA,GAAc,MAAKzH,MAAMyH,YAC9CnG,8CAAQ,MAAKtB,MAAMyC,IAAKgF,GAAWhG,MAAK,SAAAC,GACvB,OAATA,GAEJ,MAAKZ,SAAS,CACVK,KAAM,KACP,WACC,GAAIO,aAAgBiH,MAChB,MAAK7H,SAAS,CACVK,KAAMO,QAEP,CACH,MAAK0F,QAAU1F,EAAKkH,OACpB,IAAI1H,EAAQ,CAAEC,KAAMO,EAAKP,MACrBO,EAAKmH,OAASnH,EAAKoH,KACnB5H,EAAMwH,YAAa,EAEnBxH,EAAMwH,WAAa,CACfK,MAAOrH,EAAKmH,MACZG,SAAUtH,EAAKoH,KACf3B,QAASzF,EAAKkH,QAGlB,MAAK5I,MAAMiJ,KAAKC,OAChBhI,EAAM,MAAKlB,MAAMiJ,KAAKC,MAAQxH,EAAK,MAAK1B,MAAMiJ,KAAKC,OACvD,MAAKpI,SAASI,WAjYX,MAuYnBgF,SAAW,WACP,IAAK,MAAKnF,OAAS,MAAKA,KAAKoG,UAAY,MAAKgC,aAA2C,IAA5B,MAAKA,YAAY/I,OAAc,MAAO,GAEnG,IAHa,EAGT6E,EAAS,MAAKlE,KAAKoG,QAAQiC,iBAHlB,uLAIM,MAAKD,aAJX,IAIb,2BAAqC,CAAC,IAA7BE,EAA4B,QACjC,GAAoB,UAAhBA,EAAO7G,KAAX,CAQA,IAAI/B,EAAQwE,EAAOoE,EAAO7I,MACrBC,IAEe,SAAhB4I,EAAO7G,KACPyC,EAAOoE,EAAO7I,MAAQC,EAAMR,OAAO,cACZ,eAAhBoJ,EAAO7G,OACO,IAAjB/B,EAAML,OACN6E,EAAOoE,EAAO7I,MAAQ,GAEtByE,EAAOoE,EAAO7I,MAAQC,EAAM,GAAGR,OAAO,cAAgB,IAAMQ,EAAM,GAAGR,OAAO,qBAhBhFgF,EAAOoE,EAAO7I,OAASyE,EAAOoE,EAAO7I,KAAO,UAAY,IAAM,KAAOyE,EAAOoE,EAAO7I,KAAO,QAAU,WAC7FyE,EAAOoE,EAAO7I,KAAO,gBACrByE,EAAOoE,EAAO7I,KAAO,QARvB,8BA0Bb,OAAOyE,GAjaQ,MAoanBjE,OAAS,WACL,IAAIsI,EAAW,GAiBf,OAhBI,MAAKtJ,MAAMiJ,KAAKC,MAChBI,EAAS1I,KAAK,mEAA0CmB,UAAU,eAAewH,wBAAyB,CAAEC,OAAQ,MAAKtI,MAAM,MAAKlB,MAAMiJ,KAAKC,QAAvH,QAAU,MAAKlJ,MAAMiJ,KAAKC,OAClD,MAAKjD,OAAQqD,EAAS1I,KAAK,4DAAC6I,OAAD,CAAqBzJ,MAAO,MAAKmJ,YAAaO,QAAS,MAAK1J,MAAMiJ,KAAKS,QAASC,KAAI,wLAAQ5I,KAAM,MAAKA,KAAMqE,QAAS,MAAKlE,MAAMkE,SAArH,WAClC,MAAKsE,SAASJ,EAAS1I,KAAK,mEAAmBmB,UAAU,uBAA7B,SAAqD,MAAK2H,SAAjD,YAC9CJ,EAAS1I,KAAK,2GAAmBgJ,QAAS,MAAKA,QAASC,WAAY,MAAK3I,MAAMC,KAAM2I,OAAO,KAAKpB,WAAY,MAAKxH,MAAMwH,WACpHrH,SAAU,MAAK6F,KAAMnF,UAAU,gBADV,UAEzBuH,EAAS1I,KACL,2GAAqBmJ,QAA+B,MAAtB,MAAK7I,MAAMgH,QAAiB8B,OAAQ,KAAMC,SAAU,MAAK7B,cAAvF,SACI,mEAAK9C,MAAO,CAAE4E,MAAO,QAAU9H,IAAK,MAAKlB,MAAMgH,QAASiC,IAAI,MADrD,YAIfb,EAAS1I,KACL,2GAAoBmJ,QAAS,MAAK7I,MAAM8G,OAAQzH,MAAO,MAAKW,MAAM8G,OAAS,MAAK9G,MAAM8G,OAAOrC,GAAGR,MAAQ,GAAI8E,SAAU,MAAK5B,aAAc+B,KAAM,MAAK9B,SAApJ,SACK,MAAK+B,eADC,WAIRf,GAtbQ,MAybnBe,YAAc,WACV,IAAK,MAAKnJ,MAAM8G,OAAQ,OAAO,KAE/B,IAHgB,EAGZsC,EAAQ,GAHI,uLAIC,MAAKtK,MAAMA,OAJZ,IAIhB,2BAAmC,CAAC,IAA3BqF,EAA0B,QAC3B5E,EAAQ,MAAKS,MAAM8G,OAAOpD,MAAMS,EAAK7E,MACrC6E,EAAKH,OAAQzE,EAAQ4E,EAAKH,OAAOzE,GACd,YAAd4E,EAAK7C,OACV/B,EAAQ,MAAK2E,QAAQC,EAAM,MAAKnE,MAAM8G,OAAOpD,QACjD0F,EAAM1J,KAAK,oHACP,yGAAK2J,KAAM,EAAX,SAAelF,EAAKF,QACpB,yGAAKoF,KAAM,GAAX,SAAgB9J,MAFC4E,EAAK7E,QATd,8BAehB,OAAO8J,GArcP,MAAKpJ,MAAQ,CACTC,KAAM,GACNiE,QAAS,GACTsD,YAAY,EACZR,QAAS,KACTF,OAAQ,MAGZ,IAAI4B,QAAUX,sCAAKjJ,MAAMA,MAAMA,MAAOA,MAAMiJ,KAAKjJ,OACjD,GAAIA,MAAMiJ,KAAKhD,QAAUjG,MAAMiJ,KAAKhD,OAAO7F,OAAS,EAChD,MAAKW,KAAOY,8CAAM6I,YAClB,MAAKrB,YAAcF,sCAAKjJ,MAAM4J,QAAS5J,MAAMiJ,KAAKhD,QAClD,MAAKA,QAAS,OACX,GAAIjG,MAAMiJ,KAAKS,SAAW1J,MAAMiJ,KAAKS,QAAQtJ,OAAS,EAAG,CAC5D,MAAKsJ,QAAU,GAD6C,oMAExC1J,MAAMiJ,KAAKS,SAF6B,WAE5D,kDAAwC,CAAC,IAAhCA,QAA+B,aAC/BA,QAAQe,QACT,MAAKf,QAAQ9I,KAAK,MAAK8E,OAAOgE,WAJsB,qDAShE,MAAKE,QAAU,GAzBA,oMA0BEA,SA1BF,0CA0BNvE,KA1BM,aA2BPgE,OAAS,CAAE9H,IAAK8D,KAAK7E,KAAMD,MAAO8E,KAAKF,OACvCE,KAAKH,OACLmE,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOS,KAAKL,SAAW,MAAKA,SAASK,KAAKH,OAAQ,MAAKzE,MAAMmE,EAAOS,KAAK7E,OAAS6E,KAAKH,OAAO,MAAKzE,MAAMmE,EAAOS,KAAK7E,SAC1J6E,KAAKJ,OACNI,KAAKJ,kBAAkB0D,MACvBU,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKnE,MAAMmE,EAAOS,KAAK7E,OAEhD6I,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOS,KAAKL,SAAW,MAAKA,SAASK,KAAKJ,OAAQ,MAAKxE,MAAMmE,EAAOS,KAAK7E,OAAS6E,KAAKJ,OAAO,MAAKxE,MAAMmE,EAAOS,KAAK7E,SAC9I,UAAd6E,KAAK7C,MAAkC,oBAAd6C,KAAK7C,KACrC6G,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO8F,iDAAQ,MAAKjK,MAAMmE,EAAOS,KAAK7E,MAAO6E,KAAKsF,SACzE,YAAdtF,KAAK7C,MAAoC,sBAAd6C,KAAK7C,KACrC6G,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAOgG,iDAAU,MAAKnK,MAAMmE,EAAOS,KAAK7E,SAC/D,UAAd6E,KAAK7C,MAAkC,oBAAd6C,KAAK7C,KACnC6G,OAAOrI,OAAS,SAAA4D,GACZ,IAAInE,EAAQ,MAAKA,MAAMmE,EAAOS,KAAK7E,MACnC,GAAc,KAAVC,EAAc,OAAO,MAAK6E,MAAMD,KAAMT,EAAO,IAEjD,IAA4B,IAAxBnE,EAAMuG,QAAQ,KAAa,OAAO,MAAK1B,MAAMD,KAAMT,EAAO,mEAAKxC,IAAKC,8CAAI5B,GAAQ0J,IAAI,GAAGvE,QAAS,MAAKsC,WAEzG,IANqB,EAMjB2C,EAAO,GANU,uLAOLpK,EAAMqE,MAAM,MAPP,IAOrB,gCAASgG,EAAT,QACID,EAAKjK,KAAK,mEAAmCwB,IAAKC,8CAAIyI,GAAMX,IAAI,GAAGvE,QAAS,MAAKsC,SAA7D7C,KAAK7E,KAAOqK,EAAKzK,UARpB,kCAUrB,OAAO,MAAKkF,MAAMD,KAAMT,EAAOiG,IAEd,SAAdxF,KAAK7C,MAAiC,mBAAd6C,KAAK7C,KACpC6G,OAAOrI,OAAS,SAAA4D,GACZ,IADqB,EACjB4B,EAAQ,GADS,uLAEJuE,8CAAQ,MAAKtK,MAAMmE,EAAOS,KAAK7E,QAF3B,IAErB,2BAAwD,CAAC,IAAhDwD,EAA+C,QACpDwC,EAAM5F,KAAK,oEAAkCmB,UAAU,OAA5C,UACP,4DAAC,kDAAD,IACA,iEAAG2F,KAAMrF,8CAAI2B,EAAKvB,KAAMvC,OAAO,SAAS8K,IAAI,sBAA5C,SAAmEhH,EAAKxD,SAFvD,QAAUgG,EAAMpG,UAHpB,kCASrB,OAAO,MAAKkF,MAAMD,KAAMT,EAAO4B,IAEd,WAAdnB,KAAK7C,KACZ6G,OAAOrI,OAAS,SAAA4D,GACZ,IAAIqG,EAAI,CAAEC,eAAiD,IAAjC,MAAKzK,MAAMmE,EAAOS,KAAK7E,OAMjD,OALI6E,KAAK/D,QACL2J,EAAE5J,SAAW,MAAKkH,OAAOzC,KAAZ,wLAAuBT,KAAMT,GAE1CqG,EAAEE,UAAW,EAEV,MAAK7F,MAAMD,KAAMT,EAAO,sRAAYqG,MAE1B,YAAd5F,KAAK7C,MACZlB,8CAAQtB,MAAM0C,KAAKD,IAAIzC,MAAMyC,IAAK4C,KAAK/D,SAAU+D,KAAKoC,WAAWhG,MAAK,SAAAC,MAClE,GAAa,OAATA,KAAJ,CAEA,IAAI0J,QAAU,GACVC,MAAQhG,KAAKgG,OAAS,KACtBC,MAAQjG,KAAKiG,OAAS,OALgD,iMAM5D5J,KAAKP,MAAQO,MAN+C,YAM1E,qDAAiC,CAAC,IAAzB6J,EAAwB,cACzBC,OAASD,EACTD,MAAMtE,QAAQ,MAAQ,EAEtBzB,KAAK,gBAAkB+F,OAEvBE,OAAOrG,MAAQoG,EAAED,OACrBF,QAAQG,EAAEF,QAAUG,OAAOrG,OAb2C,sDAe1E,IAAIC,QAAU,MAAKlE,MAAMkE,QACzBA,QAAQC,KAAK7E,MAAQ4K,QACrB,MAAKtK,SAAS,CACVsE,QAASA,cAGjBiE,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,MAAKQ,QAAQC,KAAMT,MAC/C,aAAdS,KAAK7C,KACZ6G,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,QAC9B,WAAdS,KAAK7C,MAAmC,SAAd6C,KAAK7C,KACpC6G,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,mEAAK2E,wBAAyB,CAAEC,OAAQ,MAAK/I,MAAMmE,EAAOS,KAAK7E,WAC7F,SAAd6E,KAAK7C,KACV6G,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,4DAAC,sCAAD,CAAMlD,KAAM,MAAKjB,MAAMmE,EAAOS,KAAK7E,UAC/E6E,KAAKC,MACV+D,OAAOrI,OAAS,SAAA4D,GAAK,OAAI,MAAKU,MAAMD,KAAMT,EAAO,MAAKnE,MAAMmE,EAAOS,KAAK7E,QACrD,eAAd6E,KAAK7C,KACV6G,OAAOrI,OAAS,SAAA4D,GACZ,IADqB,EACjB6G,EAAQ,GADS,uLAEJxC,sCAAKjJ,MAAMA,MAAMA,MAAOqF,KAAKoG,QAFzB,IAErB,2BAAsD,CAAC,IAA9CtJ,EAA6C,QAC9C1B,EAAQ,MAAKA,MAAMmE,EAAOzC,EAAK3B,OAC9BC,GAAmB,IAAVA,KAGV0B,EAAK+C,OACLzE,EAAQ0B,EAAK+C,OAAOzE,IACf0B,EAAK8C,QAAY9C,EAAK8C,kBAAkB0D,MAE1B,UAAdxG,EAAKK,MAAkC,oBAAdL,EAAKK,KACnC/B,EAAQiK,iDAAQjK,GACG,YAAd0B,EAAKK,MAAoC,sBAAdL,EAAKK,OACrC/B,EAAQmK,iDAAUnK,IAJlBA,EAAQ0B,EAAK8C,OAAOxE,GAKxBgL,EAAM7K,KAAK,8EAAiDuB,EAAKgD,MAAtD,MAAgE,MAAKG,MAAMnD,EAAMyC,EAAOnE,KAA9E,QAAUmE,EAAMlE,GAAK,IAAMyB,EAAK3B,SAfpC,kCAkBrB,OAAOiL,GAIXpC,OAAOqC,WAAarG,KAAK7E,MAAQ,IAAIsE,MAAM,KAC/C,MAAK8E,QAAQhJ,KAAKyI,SAvGtB,kDAA2B,QA1BZ,2DAmIXrJ,MAAMiJ,KAAK0C,KAAO3L,MAAMiJ,KAAK0C,IAAIvL,OAAS,GAC1C,MAAKwJ,QAAQhJ,KAAK,CACdL,MAAO,GACPS,OAAQ,gBAAA4D,OACJ,IAAIgH,KAAO,GADE,gMAEE5L,MAAMiJ,KAAK0C,KAFb,WAEb,uDAAShG,GAAT,aAESA,GAAGkG,OAAQtG,KAAKI,GAAGkG,OACpBD,KAAKhL,KAAK+E,KALL,oDAOb,IAAIgG,IAAM,GACNG,OAAS9L,MAAMiJ,KAAK6C,QAAU,CAAC,GAGnC,GAFIA,OAAO1L,OAAS,IAChB0L,OAAO,GAAK,GACZF,KAAKxL,QAAU0L,OAAO,GACtB,IAAK,IAAIvJ,KAAKqJ,KACNrJ,EAAI,GAAGoJ,IAAI/K,KAAK2B,EAAIuJ,OAAO,KAAO,EAAI,oEAAS,MAAQvJ,GAAQ,6GAA8BC,KAAK,YAArB,WAAaD,IAC9FoJ,IAAI/K,KAAK,MAAKmF,OAAO6F,KAAKrJ,GAAIqC,YAE/B,CACHkH,OAAO,KACP,IAAK,IAAIvJ,GAAI,EAAGA,GAAIuJ,OAAO,GAAIvJ,KAC3BoJ,IAAI/K,KAAK,MAAKmF,OAAO6F,KAAKrJ,IAAIqC,QAC9B+G,IAAI/K,KAAK2B,GAAI,GAAMA,GAAIuJ,OAAO,KAAO,EAAK,oEAAS,MAAQvJ,IAAQ,6GAA8BC,KAAK,YAArB,WAAaD,KAGlG,IADA,IAAI+H,MAAQ,GACH/H,IAAIuJ,OAAO,GAAIvJ,IAAIqJ,KAAKxL,OAAQmC,MACrC+H,MAAM1J,KAAK,yGAAMmL,KAAN,UAAgC,MAAKhG,OAAO6F,KAAKrJ,KAAIqC,QAArCgH,KAAKrJ,KAAG4C,QACvCwG,IAAI/K,KAAK,8GAAqBoL,QAAS,mHAAO1B,QAArC,SAAoD,oEAAMvI,UAAU,kBAAhB,2BAAtC,SAG3B,OAAO,mEAAKA,UAAU,mBAAf,SAAmC4J,SAKtD,MAAKzE,KAAK,MAvKK,M,aADJvF,8CAAMC,WA6cnB6H,O,6pBACFzI,OAAS,WACL,IADW,EACPiL,EAAO,GACPC,EAAgB,GAFT,uLAGQ,EAAKlM,MAAMA,OAHnB,IAGX,2BAAqC,CAAC,IAA7BqJ,EAA4B,SAC7BA,EAAOnE,QAAUmE,EAAOpE,QAA0B,YAAhBoE,EAAO7G,QAAoB0J,EAAc7C,EAAO7I,MAAQ,IAE9F,IAAI2L,EAAO,CAAEhH,MAAOkE,EAAOlE,OACP,UAAhBkE,EAAO7G,OACP2J,EAAK3L,KAAO6I,EAAO7I,MACvByL,EAAKrL,KACD,yGAAK2J,KAAM,EAAX,SACI,wGAAMwB,KAAN,qVAAeI,GAAf,aAAsB,EAAKhG,MAAMkD,OADlBA,EAAO7I,QAVvB,8BAeX,IAAIkJ,EAAU,GAEd,GADAA,EAAQ9I,KAAK,4GAAqB4B,KAAK,UAAU4J,SAAS,SAA7C,yBAAY,WACrB,EAAKpM,MAAM0J,SAAW,EAAK1J,MAAM0J,QAAQtJ,OAAS,EAAG,CAAC,IAAD,yLAClC,EAAKJ,MAAM0J,SADuB,IACrD,2BAAuC,CAAC,IAA/BhE,EAA8B,QAC9BA,EAAO+E,QACRf,EAAQ9I,KAAK,EAAKZ,MAAM2J,KAAKjE,OAAOA,KAHS,+BASzD,OAFAuG,EAAKrL,KAAK,oEAAoBmB,UAAU,8BAA9B,SAA6D2H,GAAnD,YAGhB,yGAAM2C,IAAK,EAAKrM,MAAMe,KAAMgB,UAAU,2BAA2BmK,cAAeA,EAAeI,SAAU,EAAKC,OAA9G,SACI,yGAAKC,OAAQ,GAAb,SAAkBP,O,EAK9B9F,MAAQ,SAAAkD,GACJ,GAAIA,EAAOnE,OAAQ,CACf,IAAIkG,EAAU,CAAC,CAAEjG,MAAO,eAAM1E,MAAO,KACrC,IAAK,IAAIgM,KAASpD,EAAOnE,OACrBkG,EAAQxK,KAAK,CAAEuE,MAAOkE,EAAOnE,OAAOuH,GAAQhM,MAAOgM,IAEvD,OAAOrB,EAAQhL,QAAU,EAAI,yGAAOsM,MAAP,CAAatB,QAASA,IAAc,2GAAQA,QAASA,IAGtF,GAAI/B,EAAOpE,OAAQ,CACf,IAAImG,EAAU,CAAC,CAAEjG,MAAO,eAAM1E,MAAO,KACjCkM,EAAOC,OAAOD,KAAKtD,EAAOpE,QAC9B,IAAK,IAAIwH,KAASE,EACdvB,EAAQxK,KAAK,CAAEuE,MAAOkE,EAAOpE,OAAO0H,EAAKF,IAAShM,MAAOkM,EAAKF,KAElE,OAAOrB,EAAQhL,QAAU,EAAI,yGAAOsM,MAAP,CAAatB,QAASA,IAAc,2GAAQA,QAASA,IAGtF,GAAoB,YAAhB/B,EAAO7G,KAAoB,CAC3B,IAAI4I,EAAU,CAAC,CAAEjG,MAAO,eAAM1E,MAAO,KACjCwE,EAAS,EAAKjF,MAAMoF,QAAQiE,EAAO7I,MACvC,GAAIyE,EACA,IAAK,IAAI1D,KAAO0D,EACZmG,EAAQxK,KAAK,CAAEuE,MAAOF,EAAO1D,GAAMd,MAAOc,IAGlD,OAAO,2GAAQ6J,QAASA,IAG5B,MAAoB,SAAhB/B,EAAO7G,KACA,oHAES,eAAhB6G,EAAO7G,KACA,4DAACkC,YAAD,IAES,UAAhB2E,EAAO7G,KAEH,0GAAOkK,MAAP,CAAa3K,UAAU,4BAA4B8K,SAAO,EAA1D,UACI,wGAAMd,KAAN,CAAWvL,KAAM6I,EAAO7I,KAAO,QAASsM,SAAO,EAA/C,SAAgD,+GAChD,oEAAM/K,UAAU,cAAhB,SAA8B,4DAAC,kDAAD,MAC9B,wGAAMgK,KAAN,CAAWvL,KAAM6I,EAAO7I,KAAO,MAAOsM,SAAO,EAA7C,SAA8C,kHAKtC,WAAhBzD,EAAO7G,KAEH,0GAAOkK,MAAP,CAAaK,UAAW,GAAxB,UACI,0GAAOtM,MAAO,GAAd,0BACA,0GAAOA,MAAO,IAAd,oBACA,0GAAOA,MAAO,IAAd,uBAKQ,aAAhB4I,EAAO7G,KACA,4DAAC,0CAAD,CAAUrB,KAAMkI,EAAOhJ,SAAUmB,QAAS6H,EAAO7H,QAAShB,KAAM6I,EAAO7I,KAAMO,KAAI,sLAErF,8G,EAGXN,MAAQ,SAACD,EAAMC,GACXuM,QAAQC,IAAIzM,EAAO,IAAMC,I,EAG7B8L,OAAS,WACL,EAAKvM,MAAM2J,KAAKzC,KAAK,O,YApGRvF,8CAAMC,WAwGZ+C,4B,khDC9jBTuI,Q,kZACF,iBAAYlN,OAAQ,IAAD,oMACf,uBAAMA,OADS,MAcnBmN,kBAAoB,WAChB,MAAKlH,OAAO,KAfG,MAkBnBmH,MAAQ,WACJ,MAAKnH,OAAO,KAnBG,MAsBnBA,OAAS,SAACxF,OACN,IAAIgH,UAAY,GAChB,GAAI,MAAKzH,MAAMiG,OACX,IAAK,IAAI1D,EAAI,EAAGA,EAAI,MAAKvC,MAAMiG,OAAO7F,OAAQmC,IACtCA,IAAM,MAAKvC,MAAMiG,OAAO7F,OAAS,EACjCqH,UAAU,MAAKzH,MAAMiG,OAAO1D,GAAG/B,MAAQC,MAClC,MAAKT,MAAMiG,OAAO1D,GAAGxB,OAC1B0G,UAAU,MAAKzH,MAAMiG,OAAO1D,GAAG/B,MAAQ,MAAKR,MAAMiG,OAAO1D,GAAGxB,MAAQ,MAAKf,MAAMe,KAAKN,MAAM,MAAKT,MAAMiG,OAAO1D,GAAGxB,KAAM,YAG7H0G,UAAUhH,MAAQA,MACtBa,6CAAQ,MAAKtB,MAAM0C,KAAKD,IAAI,MAAKzC,MAAMyC,IAAK,MAAKzC,MAAMsB,SAAhD,wKAAC,2KAA8DmG,WAAc,MAAKzH,MAAMyH,YAAahG,MAAK,SAAAC,MAC7G,GAAa,OAATA,KAAJ,CAEA,IAAI0J,QAAU,GAHuG,8LAIlG1J,KAAKP,MAAQO,MAJqF,UAIrH,+CAAsC,CAAC,IAA9B8J,OAA6B,YAC9BrG,MAAQqG,OAAO,MAAKH,OACpB,MAAKC,MAAMtE,QAAQ,MAAQ,EAE3BzB,KAAK,SAAW,MAAK+F,OAErBnG,MAAQqG,OAAO,MAAKF,OACxBF,QAAQxK,KAAK,CACTuE,MAAOA,MACP1E,MAAO+K,OAAO,MAAKH,UAb0F,kDAgBrH,MAAKvK,SAAS,CAAEsK,uBAjDL,MAqDnBiC,OAAS,SAAClH,EAAOqF,GACb,QAAKA,IAES,KAAVrF,IAEGqF,EAAO/K,MAAM6M,cAActG,QAAQb,EAAMmH,gBAAkB,GAAK9B,EAAOrG,MAAMmI,cAActG,QAAQb,EAAMmH,gBAAkB,KA1DnH,MA6DnBzM,OAAS,SAAAJ,GACL,MAAKK,SAAS,CAAEL,MAAOA,IACvB,MAAKT,MAAMe,KAAKN,MAAM,MAAKT,MAAMQ,KAAMC,IA/DxB,MAkEnBO,OAAS,kBAAM,0GAAQuM,YAAY,EAAMC,QAAS,MAAKJ,MAAOK,SAAU,MAAKxH,OAAQyH,aAAc,MAAKL,OAAQhM,SAAU,MAAKR,OAAQJ,MAAO,MAAKS,MAAMT,MAAO2K,QAAS,MAAKlK,MAAMkK,WA/D5KpL,MAAMe,MACNf,MAAMe,KAAKN,MAAMT,MAAMQ,KAAMR,MAAMS,OAEvC,MAAK4K,MAAQrL,MAAMqL,OAAS,KAC5B,MAAKC,MAAQtL,MAAMsL,OAAS,OAC5B,MAAKpK,MAAQ,CACTkK,QAAS,GACT3K,MAAOT,MAAMS,OAVF,M,gBADDkB,6CAAMC,WAsEbsL,+B,8IC1Ef,8KAAMxC,EAAU,SAACjK,EAAOkK,GACpB,IAAKlK,EAAO,OAAOkK,GAAS,GAE5B,IACI,OAAQgD,SAASlN,GAAS,KAAKmN,QAAQ,GACzC,MAAOnI,GACL,MAAO,SAIToI,EAAY,SAAApN,GACd,IAAKA,EAAO,OAAO,EAEnB,IACI,OAAO4D,KAAKyJ,MAA0B,IAApBC,WAAWtN,KAAiB,EAChD,MAAOgF,GACL,OAAO,IAITmF,EAAY,SAAAnK,GACd,IAAKA,EAAO,MAAO,SAEnB,IACI,OAAQkN,SAASlN,GAAS,KAAKmN,QAAQ,GAAK,KAC9C,MAAOnI,GACL,MAAO,WAITuI,EAAc,SAAAvN,GAChB,IAAKA,EAAO,OAAO,EAEnB,IAEI,IAAIL,GADJK,EAAQA,EAAMwN,QACK7N,OAInB,OAHIA,EAAS,GAAqC,MAAhCK,EAAM+D,UAAUpE,EAAS,KACvCK,EAAQA,EAAM+D,UAAU,EAAGpE,EAAS,GAAG6N,QAEpC5J,KAAKyJ,MAA0B,IAApBC,WAAWtN,IAC/B,MAAOgF,GACL,OAAO,IAITyI,EAAQ,SAACzN,EAAO0N,GAClB,IAAK1N,EAAO,OAAO0N,EAEnB,IACI,OAAOR,SAASlN,GAClB,MAAOgF,GACL,OAAO0I,K,0cC4DAC,E,kDAxGX,WAAYpO,GAAQ,IAAD,8BACf,cAAMA,IAsCVgB,OAAS,kBAAM,mBAAKwL,OAAQ,CAAC,EAAG,GAAjB,SAAsB,EAAKtL,MAAM0I,QAAQ3H,KAAI,SAACoH,EAAQoD,GAAT,OAAmB,mBAAiBlC,KAAMlB,EAAOkB,KAA9B,SAAqC,EAAK8D,MAAM5B,EAAOpD,EAAOgF,QAApD5B,SAvCtE,EAyCnB4B,MAAQ,SAAC5B,EAAO4B,GAEZ,IADA,IAAI/E,EAAW,GACN/G,EAAI,EAAGA,EAAI8L,EAAMjO,OAAQmC,IAC1BA,EAAI,GACJ+G,EAAS1I,KAAK,qBAAsCmB,UAAU,2BAAtC,SAAW0K,EAAQ,IAAMlK,IACrD+G,EAAS1I,KAAK,mBAAsCL,MAAO8N,EAAM9L,GAAGhC,MAAtD,SAA8D,EAAK+N,KAAKD,EAAM9L,KAAnE,QAAUkK,EAAQ,IAAMlK,IAGrD,OAAO+G,GAjDQ,EAoDnBgF,KAAO,SAAAA,GACH,IAAKA,EAAKpH,OAASoH,EAAKrF,KAAM,OAAO,KAErC,OAAQqF,EAAKrF,KAAKzG,MACd,IAAK,YACD,OAAO,EAAK+L,UAAUD,GAC1B,IAAK,OACD,OAAO,EAAK3E,KAAK2E,GACrB,QACI,OAAO,OA7DA,EAiEnBC,UAAY,SAAAD,GACR,GAA+B,IAA3BA,EAAKrF,KAAKjJ,MAAMI,OAAc,OAAO,KAEzC,IAAImK,EAAO+D,EAAKrF,KAAKjJ,MAAMI,OAAS,EAAK,GAAKkO,EAAKrF,KAAKjJ,MAAMI,OAAU,EAExE,OAAO,mBAAKoM,OAAQ,CAAC,EAAG,GAAjB,SAAsB8B,EAAKrF,KAAKjJ,MAAMiC,KAAI,SAAAoD,GAAI,OAAI,mBAAqBkF,KAAMA,EAA3B,SAAiC,mBAAWhK,MAAO8E,EAAKF,MAAO1E,MAAO,EAAKS,MAAMoN,EAAK/M,KAAK8D,EAAK7E,SAAtF6E,EAAK7E,YAtEzD,EAyEnBmJ,KAAO,SAAA2E,GACH,IAAI5M,EAAO,EAAKR,MAAMoN,EAAK/M,MAAQ,GAEnC,OAAO,mBAAOqI,QAAS0E,EAAK1E,QAASC,WAAYnI,EAAKP,MAAQO,EAAMgH,YAAY,KA5EjE,EA+EnBxB,KAAO,WACH,EAAKsH,QAAUC,WAAW,EAAKvH,KAAM,KAD5B,oBAEU,EAAKhG,MAAM0I,SAFrB,IAET,2BAAuC,CAAC,IAAD,EAA9BP,EAA8B,sBAClBA,EAAOgF,OADW,yBAC1BC,EAD0B,QAE/B,GAAIA,EAAKpH,OAASoH,EAAKtI,OACnB,iBAEJ1E,YAAQgN,EAAKhN,QAASgN,EAAK7G,WAAWhG,MAAK,SAAAC,GAEvC,GADA4M,EAAKpH,MAAO,EACC,OAATxF,EAAJ,CAEA,IAAIR,EAAQ,GACZA,EAAMoN,EAAK/M,KAAOG,EAClB,EAAKZ,SAASI,QAVtB,2BAA+B,IADI,gCAF9B,gCA/EM,EAkGnBwN,qBAAuB,WACE,OAAjB,EAAKF,SACLG,aAAa,EAAKH,UAjGtB,EAAKtN,MAAQ,CACT0I,QAAS,IAEb,EAAK4E,QAAU,KACflN,YAAQ,sBAAsBG,MAAK,SAAAC,GAC/B,GAAa,OAATA,EAAJ,CAGA,IADA,IAAIR,EAAQ,CAAE0I,QAASlI,GACda,EAAI,EAAGA,EAAIb,EAAKtB,OAAQmC,IAC7B,IADmC,IAAD,WACzBqM,GACL,IAAIN,EAAO5M,EAAKa,GAAG8L,MAAMO,GACzBN,EAAK/M,IAAMgB,EAAI,IAAMqM,EACrBN,EAAKpH,MAAO,EACZhG,EAAMoN,EAAK/M,KAAO,GAClB0H,IAAK4F,IAAIP,EAAKhN,SAASG,MAAK,SAAAqN,GACxB,IAAIjK,EAAIiK,EAAGR,EAAKhN,QAAQkD,UAAU8J,EAAKhN,QAAQyN,YAAY,KAAO,IAClE,GAAKlK,IAELyJ,EAAKrF,KAAOpE,EACG,SAAXA,EAAErC,MAAiB,CACnB8L,EAAK1E,QAAU,GADI,oBAEFX,IAAKjJ,MAAM8O,EAAG9O,MAAO6E,EAAE7E,QAFrB,IAEnB,2BAAgD,CAAC,IAAxCqF,EAAuC,QAC5CiJ,EAAK1E,QAAQhJ,KAAK,CACdL,MAAO8E,EAAKF,MACZuG,UAAWrG,EAAK7E,KAChBe,IAAK8D,EAAK7E,QANC,oCAVtBoO,EAAI,EAAGA,EAAIlN,EAAKa,GAAG8L,MAAMjO,OAAQwO,IAAM,EAAvCA,GAuBb,EAAK9N,SAASI,EAAO,EAAKgG,UAnCf,E,UADCvF,IAAMC,W,0UCAxBoN,G,mNACF9N,MAAQ,CACJuB,IAAK,KACLwM,SAAS,EACTxL,SAAS,EACTyE,QAAS,KACTgH,OAAQ,G,EAGZnL,OAAS,SAAAoL,GACL,EAAKrO,SAAS,CAAE2C,SAAS,IACzBM,YAAO,EAAK/D,MAAM+D,OAAQoL,EAASnL,MAAMvC,MAAK,SAAAC,GAC1C,GAAa,OAATA,EAAJ,CAMA,IAAIe,EAAM,EAAKvB,MAAM+N,QAAU,EAAK/N,MAAMuB,IAAM,EAAKzC,MAAMS,MACvD2O,EAAO1N,EAAK2N,WAAa3N,EAAK0N,KAClC3M,EAAMA,EAAOA,EAAM,IAAM2M,EAAQA,EACjC,EAAKtO,SAAS,CACV2B,IAAKA,EACLwM,SAAS,EACTxL,SAAS,IACV,WACC,EAAKzD,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKU,MAAMuB,aAblD,EAAK3B,SAAS,CAAE2C,SAAS,Q,EAkBrCyE,QAAU,SAAAlE,GACN,EAAKlD,SAAS,CAAEoH,QAASlE,EAAK3B,O,EAGlCiN,OAAS,WACL,EAAKxO,SAAS,CAAEoH,QAAS,Q,EAG7BgH,OAAS,SAAAlL,GACL,IAAI,EAAKhE,MAAMuP,SAAf,CAEA,IAAI9M,EAAM,EAAKvB,MAAM+N,QAAU,EAAK/N,MAAMuB,IAAM,EAAKzC,MAAMS,MAC3D,GAAKgC,EAAL,CAEA,IAAI+M,EAAO/M,EAAIqC,MAAM,KACjB2K,EAAI,GACR,IAAK,IAAIlN,KAAKiN,EACNjN,IAAMyB,EAAK9B,MAEXuN,EAAErP,OAAS,IAAGqP,GAAK,KACvBA,GAAKD,EAAKjN,IAEd,EAAKzB,SAAS,CACV2B,IAAKgN,EACLR,SAAS,IACV,kBAAM,EAAKjP,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKU,MAAMuB,W,EAG/DzB,OAAS,WACL,IAAIyB,EAAM,EAAKvB,MAAM+N,QAAU,EAAK/N,MAAMuB,IAAM,EAAKzC,MAAMS,OACtD,EAAKS,MAAM+N,SAAW,EAAKjP,MAAMS,OAClC,EAAKT,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKR,MAAMS,OAEtD,IAAIU,EAAO,GACX,GAAIsB,EAAK,CACL,IAAI+M,EAAO/M,EAAIqC,MAAM,KACrB,IAAK,IAAIvC,KAAKiN,EACVrO,EAAKP,KAAK,CACNsB,IAAK,GAAKK,EACV/B,KAAMgP,EAAKjN,GACXF,IAAKA,YAAImN,EAAKjN,IACdsB,OAAQ,SAKpB,IAAI7D,EAAQ,CACR0P,SAAU,eACVC,SAAUxO,EACVY,UAAW,iBACX6N,cAAe,EAAK7L,OACpB8L,UAAW,EAAK3H,SAKpB,OAHK,EAAKlI,MAAMuP,WACZvP,EAAM8P,SAAW,EAAKZ,QAGtB,sBAAKnN,UAAU,WAAf,UACI,6CAAY/B,GAAZ,aACK,EAAKA,MAAMuP,UAAa,EAAKvP,MAAM8I,KAAO,GAAK3H,EAAKf,QAAU,EAAKJ,MAAM8I,KAAQ,KAAQ,EAAK5H,MAAMuC,QAAU,cAACsM,EAAA,EAAD,IAAsB,cAACC,EAAA,EAAD,OAEzI,mBAAOjG,QAA+B,MAAtB,EAAK7I,MAAMgH,QAAiB8B,OAAQ,KAAMC,SAAU,EAAKqF,OAAzE,SACI,qBAAKnF,IAAI,UAAU7E,MAAO,CAAE4E,MAAO,QAAU9H,IAAK,EAAKlB,MAAMgH,gB,YA7F7DvG,IAAMC,YAoGXoN,I,mBCrGTiB,G,4MACFlK,OAAS1D,YAAI,4B,EAEbxB,OAAS,YAAe,IAAZmD,EAAW,EAAXA,KACR,GAAoB,cAAhBA,EAAKH,OAMT,MAAoB,SAAhBG,EAAKH,OACDG,EAAKT,SAASR,SACd,EAAKkM,QAAQjL,GAAM,QACnB,EAAKvD,UAKT,EAAKwO,QAAQjL,GAAM,QACnBlB,EAAA,EAAQE,KAAKgB,EAAKT,SAAST,UAKX,YAAhBkB,EAAKH,QACL,EAAKoL,QAAQjL,GAAM,QACnB,EAAKvD,cAFT,EAnBI,EAAKwO,QAAQjL,GAAM,I,EA2B3BiL,QAAU,SAACjL,EAAMkM,GACb,IADyB,EACrB/O,EAAO,GACPgP,GAAS,EAFY,cAGX,EAAKhP,QAHM,IAGzB,2BAA2B,CAAC,IAAnBiP,EAAkB,QACnBA,EAAElO,MAAQ8B,EAAK9B,IAQnBf,EAAKP,KAAKwP,IAPND,GAAS,EACLD,GACA/O,EAAKP,KAAKoD,KAPG,8BAcpBmM,GACDhP,EAAKP,KAAKoD,GACd,EAAKlD,SAAS,CAAEK,U,EAGpBV,MAAQ,WACJ,IADU,EACNU,EAAO,GADD,cAEO,EAAKD,MAAMC,MAFlB,IAEV,2BAAkC,CAAC,IAA1B6C,EAAyB,QACzBA,EAAKvB,MACNuB,EAAKvB,IAAMuB,EAAKT,SAAS6L,KACrBpL,EAAKT,SAAS8L,YACdrL,EAAKqL,UAAYrL,EAAKT,SAAS8L,WACnCrL,EAAK3B,IAAMA,YAAI2B,EAAKvB,MAExB,IAAI2N,EAAI,CACJ5P,KAAMwD,EAAKxD,KACXiC,IAAKuB,EAAKvB,KAEVuB,EAAKqL,YACLe,EAAEf,UAAYrL,EAAKqL,WACvBlO,EAAKP,KAAKwP,IAfJ,8BAiBV,EAAKpQ,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM6C,KAAKC,UAAUnC,K,EAG1DA,KAAO,WACH,GAAwB,OAApB,EAAKD,MAAMC,KACX,OAAO,EAAKD,MAAMC,KAGtB,IADA,IAAIA,EAAO,EAAKnB,MAAMS,MAAQsK,YAAQ,EAAK/K,MAAMS,OAAS,GACjD8B,EAAI,EAAGA,EAAIpB,EAAKf,OAAQmC,IAC7BpB,EAAKoB,GAAGL,IAAM,GAAKK,EACnBpB,EAAKoB,GAAGF,IAAMA,YAAIlB,EAAKoB,GAAGE,KAC1BtB,EAAKoB,GAAGsB,OAAS,OAGrB,OAAO1C,G,YAlFaQ,IAAMC,WCE5ByO,G,4MACFnP,MAAQ,CACJC,KAAM,M,EAGVH,OAAS,WACL,GAAI,EAAKhB,MAAMuP,SAAU,CACrB,IAAI/I,EAAQ,GACZ,IAAK,IAAD,gBACiBuE,YAAQ,EAAK/K,MAAMS,QADpC,IACA,2BAA4C,CAAC,IAApCuD,EAAmC,QACxCwC,EAAM5F,KAAK,sBAAkCmB,UAAU,oBAA5C,UACP,cAACuO,EAAA,EAAD,IACA,mBAAG5I,KAAMrF,YAAI2B,EAAKvB,KAAMvC,OAAO,SAAS8K,IAAI,sBAA5C,SAAmEhH,EAAKxD,SAFvD,QAAUgG,EAAMpG,UAFzC,+BAOF,MAAOqF,IAET,OAAOe,EAGX,IAAIxG,EAAQ,CACR+F,OAAQ,EAAKA,OACbvF,KAAM,EAAKR,MAAM+D,OACjBiB,UAAU,EACVuL,SAAU,CACNC,YAAa,CACT,KAAM,UACN,OAAQ,WAEZC,YAAa,EACbxQ,OAAQ,SAAAyQ,GAAO,gBAAO3C,WAAW2C,EAAQ9C,QAAQ,IAAlC,OAEnB+B,SAAU,EAAKxO,OACfE,SAAU,EAAKR,QAGnB,OACI,6CAAYb,GAAZ,aACI,8BAAQ,cAAC2Q,GAAA,EAAD,IAAR,uB,YD8CDV,ICxCAI,M,UCfAO,G,kDA/BX,WAAY5Q,GAAQ,IAAD,8BACf,cAAMA,IAOVgB,OAAS,iBAAM,CACX,qBAAqCe,UAAU,sBAA/C,SAAqE,uBAAOS,KAAK,OAAO9B,GAAI,EAAKV,MAAMQ,KAAO,QAASwE,UAAU,EAAO3D,SAAU,EAAKR,UAA7I,EAAKb,MAAMQ,KAAO,SAC5B,mBAAwCqQ,WAAY,cAACC,GAAA,EAAD,CAAgBlL,QAAS,EAAKmL,SAAYtQ,MAAO,EAAKS,MAAMT,OAApG,EAAKT,MAAMQ,KAAO,YAVf,EAanBuQ,OAAS,WACL3K,SAAS4K,eAAe,EAAKhR,MAAMQ,KAAO,SAAS+G,SAdpC,EAiBnB1G,OAAS,SAAC4E,GACN,GAAKA,GAAMA,EAAEvF,QAAWuF,EAAEvF,OAAOsG,OAAmC,IAA1Bf,EAAEvF,OAAOsG,MAAMpG,OAAzD,CAEA,IAAIgP,EAAO3J,EAAEvF,OAAOsG,MAAM,GAAG4I,KACxBA,IAELA,EAAOA,EAAK5K,UAAU,EAAG4K,EAAKL,YAAYtJ,EAAEvF,OAAOsG,MAAM,GAAGhG,OAC5D,EAAKR,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM4O,GACvC,EAAKtO,SAAS,CACVL,MAAO2O,OAvBX,EAAKlO,MAAQ,CACTT,MAAOT,EAAMS,OAJF,E,UADFkB,IAAMC,W,wECIrBqP,I,0NACF/P,MAAQ,CACJgQ,OAAQC,eAAYC,cACpBnC,SAAS,G,EAGbpO,OAAS,SAAAK,GACL,EAAKJ,SAAS,CACVoQ,OAAQhQ,EACR+N,SAAS,IAEb,EAAKjP,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM6Q,KAAYC,wBAAapQ,EAAMqQ,wB,EAG1EvQ,OAAS,WACL,IAAIE,EAAQ,EAAKA,MAAMgQ,OACvB,IAAK,EAAKhQ,MAAM+N,SAAW,EAAKjP,MAAMS,MAAO,CACzC,EAAKT,MAAMe,KAAKN,MAAM,EAAKT,MAAMQ,KAAM,EAAKR,MAAMS,OAClD,IAAI+Q,EAAUC,KAAY,EAAKzR,MAAMS,OACjC+Q,IACAtQ,EAAQiQ,eAAYO,kBAAkBC,gBAAaC,qBAAqBJ,KAGhF,OAAO,cAAC,UAAD,CAAQK,YAAa3Q,EAAO4Q,aAAc,CAAEC,OAAQ,MAASC,oBAAqB,EAAKnR,U,YAvBhFc,IAAMC,YA2BbqP,M,oBClBTgB,I,OAAS,CACXC,SAAU,CACNC,GAAI,CACA5H,KAAM,IAEV6H,GAAI,CACA7H,KAAM,IAGd8H,WAAY,CACRF,GAAI,CACA5H,KAAM,IAEV6H,GAAI,CACA7H,KAAM,OAKZ+H,G,kDACF,WAAYtS,GAAQ,IAAD,8BACf,cAAMA,IASVmN,kBAAoB,WACZ,EAAKnN,MAAMyC,MAAQ,EAAKzC,MAAM0B,MAC9B,EAAKwF,OAAOzF,MAAK,SAAAC,GACA,OAATA,GAEJ,EAAKA,KAAKA,MALI,oBASLuH,IAAKjJ,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAMiJ,KAAKjJ,QATxC,yBASbqF,EATa,QAUA,kBAAdA,EAAK7C,MAA4B6C,EAAK/D,SAAW+D,EAAKgG,OACtD/J,YAAQ+D,EAAK/D,QAAS+D,EAAKoC,WAAWhG,MAAK,SAAAC,GACvC,GAAa,OAATA,EAAJ,CAEA,IAH+C,EAG3C0J,EAAU,GAHiC,cAIjC1J,EAAKP,MAAQO,GAJoB,IAI/C,gCAAS6J,EAAT,QACIH,EAAQxK,KAAK,CAAEH,MAAO8K,EAAElG,EAAKgG,UALc,8BAM/C,IAAInK,EAAQ,GACZA,EAAM,iBAAmBmE,EAAK7E,MAAQ4K,EACtC,EAAKtK,SAASI,OAGJ,cAAdmE,EAAK7C,MACLlB,YAAQ,mBAAoB,CAAEC,IAAK8D,EAAKkN,YAAa9Q,MAAK,SAAAC,GACtD,GAAa,OAATA,EAAJ,CAEA,IAAI8Q,EAAQzH,YAAQrJ,EAAK2D,EAAKkN,YACT,IAAjBC,EAAMpS,SAEVsB,EAAK2D,EAAKkN,WAAaC,EAAM,GAC7B,EAAK1R,SAASY,SArB1B,2BAAuE,IATjD,gCAVP,EA8CnBA,KAAO,SAAAA,GACH,IAAIuD,EAAS,EAAKlE,KAAKoG,QAAQiC,iBAC/B,IAAK,IAAI7H,KAAO0D,EACZA,EAAO1D,GAAOG,EAAKH,GAEvB,EAAKtB,OAAOgF,GACZ,EAAKlE,KAAKoG,QAAQsL,eAAexN,GACjC,EAAKnE,SAASY,IArDC,EAwDnBzB,OAAS,SAACgF,GAAY,IAAD,gBACAgE,IAAKjJ,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAMiJ,KAAKjJ,QAD7C,IACjB,2BAAsE,CAAC,IAA9DqF,EAA6D,QAC9D5E,EAAQwE,EAAOI,EAAK7E,MACxB,GAAI6E,EAAKH,OACLD,EAAOI,EAAK7E,MAAQ,GAAK0N,YAAMzN,EAAO,QACrC,GAAkB,UAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQkK,YAAQjK,EAAO4E,EAAKsF,YACvC,GAAkB,YAAdtF,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQoK,YAAUnK,QAC7B,GAAkB,WAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAkB,IAAVC,GAAyB,MAAVA,OAClC,GAAkB,UAAd4E,EAAK7C,MAAkC,oBAAd6C,EAAK7C,KAEnC,IADA,IAAIgQ,EAAQzH,YAAQtK,GACX8B,EAAI,EAAGA,EAAIiQ,EAAMpS,OAAQmC,IAC9B,IAAK,IAAImQ,KAAKF,EAAMjQ,GAChB0C,EAAOI,EAAK7E,KAAO,IAAMkS,EAAI,IAAMnQ,GAAK,GAAKiQ,EAAMjQ,GAAGmQ,QACvDjS,IACW,SAAd4E,EAAK7C,KACLyC,EAAOI,EAAK7E,MAAQmS,IAAOlS,EAAO,cACf,aAAd4E,EAAK7C,OACVyC,EAAOI,EAAK7E,MAAQmS,IAAOlS,EAAO,yBAEtC4E,EAAKL,WACLC,EAAOI,EAAK7E,MAAQyE,EAAOI,EAAK7E,MAAQyE,EAAOI,EAAK7E,MAAMsE,MAAM,KAAO,KAvB9D,gCAxDF,EAmFnBrE,MAAQ,SAACD,EAAMC,GACX,GAAc,OAAVA,EAGA,OAFa,EAAKM,KAAKoG,QAAU,EAAKpG,KAAKoG,QAAQiC,iBAAmB,IAExD5I,IAAS,EAAKyE,OAAOzE,GAGvC,EAAKyE,OAAOzE,GAAQC,GA1FL,EA6FnBiF,OAAS,SAAAoJ,GACL,IADW,EACP7J,EAAS,EAAKlE,KAAKoG,QAAQiC,iBADpB,cAEMH,IAAKjJ,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAMiJ,KAAKjJ,QAFnD,IAEX,2BAAsE,CAAC,IAA9DqF,EAA6D,QAC9D5E,EAAQwE,EAAOI,EAAK7E,MACN,WAAd6E,EAAK7C,KAMJ/B,GAAmB,KAAVA,EAMV4E,EAAKH,OACLD,EAAOI,EAAK7E,MAAQ0N,YAAMzN,GACP,SAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQC,EAAMR,OAAO,cACd,aAAdoF,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQC,EAAMR,OAAO,uBACd,UAAdoF,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQqN,YAAUpN,GACX,YAAd4E,EAAK7C,KACVyC,EAAOI,EAAK7E,MAAQwN,YAAYvN,GAC3B4E,EAAKL,WACVC,EAAOI,EAAK7E,MAAQyE,EAAOI,EAAK7E,MAAMoS,KAAK,aAhBpC3N,EAAOI,EAAK7E,MANnByE,EAAOI,EAAK7E,MAAQC,EAAQ,EAAI,GAL7B,8BA6BX,GAAI,EAAKT,MAAM0B,KACX,IAAK,IAAIH,KAAO,EAAKvB,MAAM0B,OACjBH,KAAO0D,IAAW,EAAKjF,MAAM0B,KAAKH,KACpC0D,EAAO1D,GAAO,EAAKvB,MAAM0B,KAAKH,IAC1C,EAAKsR,OAAO/D,EAAZ,2BAAqB7J,GAAW,EAAKA,SAAUxD,MAAK,SAAAC,GACnC,OAATA,IAEAoN,EAAG9I,OACH,EAAKhG,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAMyC,IAAK,EAAKzC,MAAMyH,UAAW,EAAKzH,MAAM0B,MACjEoN,EAAG/L,QACR,EAAK/C,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAKqM,EAAG/L,SAAU,EAAK/C,MAAMyH,UAAW,EAAKzH,MAAM0B,MAClGoN,EAAGpN,KACR,EAAKA,KAAKA,GAEVoB,EAAA,EAAQC,QAAQ,6CAxIT,EA4InBuM,OAAS,SAAAR,GACL,EAAK9O,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAKqM,EAAG/L,SAAU,EAAK/C,MAAMyH,YA7IlE,EAgJnBzG,OAAS,WACL,EAAK8R,UAAY,EACjB,IAAIxI,EAAQ,GACR,EAAKtK,MAAMiJ,KAAKC,MAChBoB,EAAM1J,KAAK,qBAA0CmB,UAAU,eAAewH,wBAAyB,CAAEC,OAAQ,EAAKtI,MAAM,EAAKlB,MAAMiJ,KAAKC,QAAvH,QAAU,EAAKlJ,MAAMiJ,KAAKC,OAJxC,oBAKMD,IAAKjJ,MAAM,EAAKA,MAAMA,MAAO,EAAKA,MAAMiJ,KAAKjJ,QALnD,IAKX,gCAASqF,EAAT,QACI,EAAK8G,KAAK7B,EAAOjF,EAAM,KANhB,8BAQX,OACI,4CAAMgH,IAAK,EAAKtL,MAAUkR,IAA1B,IAAkC/F,cAAe,EAAKhL,MAAtD,UACKoJ,EACD,kBAAMyB,KAAN,CAAWhK,UAAU,uBAAuBoD,MAAM,UAAlD,SAA6D,EAAKuE,iBA3J3D,EAgKnByC,KAAO,SAAC7B,EAAOjF,EAAM9D,GACjB,GAAkB,UAAd8D,EAAK7C,MAAkC,oBAAd6C,EAAK7C,KAA4B,CAG1D,IAFA,IAAIuQ,EAAK,GACLP,EAAQzH,YAAQ,EAAK7J,MAAMmE,EAAK7E,OAC3B+B,EAAI,EAAGA,EAAIiQ,EAAMpS,OAAQmC,IAC9B,GAAiB,OAAbiQ,EAAMjQ,GAAV,CAGAwQ,EAAGnS,KAAK,qBAAuCmB,UAAU,iCAAvCsD,EAAK7E,KAAO,YAAc+B,IAJT,oBAKjB8C,EAAK1E,UALY,IAKnC,2BAAiC,CAAC,IAAzBqS,EAAwB,QACzBC,EAAI5P,KAAK6P,MAAM7P,KAAKC,UAAU0P,IAClCC,EAAEzS,KAAO6E,EAAK7E,KAAO,IAAMyS,EAAEzS,KAAO,IAAM+B,GACxB,oBAAd8C,EAAK7C,MAAiD,SAAlB6C,EAAK8N,UAAuB5Q,EAAIiQ,EAAMpS,OAAS,KAC/E6S,EAAEzQ,KACGyQ,EAAEzQ,KAAK4Q,WAAW,eACnBH,EAAEzQ,KAAO,aAAeyQ,EAAEzQ,MAE9ByQ,EAAEzQ,KAAO,aAEjB,EAAK2J,KAAK4G,EAAIE,EAAG5N,EAAK7E,KAAO,MAfE,8BAiB9B6E,EAAKgO,KACNN,EAAGnS,KACC,sBAAuCmB,UAAU,gCAAjD,UACKQ,EAAI,EAAI,qBAAKqD,QAAS,EAAK0N,KAAKxN,KAAV,eAAqBT,EAAMmN,EAAMpS,OAAQmC,EAAG,GAA1D,SAA8D,cAACgR,EAAA,EAAD,MAAqC,KAC3GhR,EAAI,EAAI,qBAAKqD,QAAS,EAAK0N,KAAKxN,KAAV,eAAqBT,EAAMmN,EAAMpS,OAAQmC,EAAGA,EAAI,GAA9D,SAAkE,cAACiR,EAAA,EAAD,MAA4B,KACtGjR,EAAIiQ,EAAMpS,OAAS,EAAI,qBAAKwF,QAAS,EAAK0N,KAAKxN,KAAV,eAAqBT,EAAMmN,EAAMpS,OAAQmC,EAAGA,EAAI,GAA9D,SAAkE,cAACkR,EAAA,EAAD,MAA8B,KACvHlR,EAAIiQ,EAAMpS,OAAS,EAAI,qBAAKwF,QAAS,EAAK0N,KAAKxN,KAAV,eAAqBT,EAAMmN,EAAMpS,OAAQmC,EAAGiQ,EAAMpS,OAAS,GAAzE,SAA6E,cAACsT,EAAA,EAAD,MAAwC,KAC7I,qBAAK9N,QAAS,EAAKsJ,OAAOpJ,KAAZ,eAAuBT,EAAM9C,GAA3C,SAA+C,cAACoR,EAAA,EAAD,QALzCtO,EAAK7E,KAAO,YAAc+B,IAoBhD,OAVA+H,EAAM1J,KACF,sBAAqBmB,UAAU,wBAA/B,UACI,qBAAKA,UAAU,8BAAf,SAA8CsD,EAAKF,QAClD4N,EACA1N,EAAKgO,IAAM,KAAO,qBAAKtR,UAAU,kCACjCsD,EAAKgO,IAAM,KAAO,qBAAKtR,UAAU,6BAAf,SAA4C,mBAAQ6D,QAAS,EAAKgO,KAAK9N,KAAV,eAAqBT,GAAtC,SAA6C,cAAC2K,EAAA,EAAD,UAJtG3K,EAAK7E,YAOnB,EAAKsS,YAKT,IAAI3G,EAAO,CACP5K,IAAKA,EAAM8D,EAAK7E,KAChBuB,UAAW,wCAA0C,EAAK+Q,YAAc,IAAM,EAAI,MAAQ,QAC1F3N,MAAOE,EAAKF,OAEhB,GAAIE,EAAK7C,MAAQ6C,EAAK7C,KAAK4Q,WAAW,aAClC9I,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAsB,EAAKoD,SAASlK,YAC5C,GAAkB,UAAdA,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,EAAD,CAAO3L,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQ+E,KAAMzD,EAAKyD,MAAQ,EAAGrI,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BACxI,GAAkB,SAAdsE,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,GAAD,CAAM3L,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQ+E,KAAMzD,EAAKyD,MAAQ,EAAGrI,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BACvI,GAAkB,WAAdsE,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,GAAD,CAAQ3L,KAAM6E,EAAK7E,KAAMC,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BAC9F,GAAkB,YAAdsE,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,KAAD,yBAASzJ,KAAM,EAAK1C,MAAM0C,KAAMD,IAAK,EAAKzC,MAAMyC,KAAS4C,GAAzD,IAA+D5E,MAAO,EAAKS,MAAMmE,EAAK7E,MAAOkB,KAAM,EAAK1B,MAAM0B,KAAMX,KAAI,2BACrJ,GAAkB,YAAdsE,EAAK7C,KACZ8H,EAAM1J,KAAK,mBAAMmL,KAAN,2BAAeI,GAAf,cAAsB,EAAKjL,MAAMmE,EAAK7E,OAAS,GAA/C,IAAoD6E,EAAK/D,QAAU,mBAAQuS,KAAM,cAACC,EAAA,EAAD,CAAc3J,IAAK9E,EAAKF,QAAWS,QAAS,EAAKmO,QAAQjO,KAAb,eAAwBT,KAAY,eACzK,GAAkB,WAAdA,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,GAAD,CAAQ3L,KAAM6E,EAAK7E,KAAMC,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,0BAC9F,GAAkB,SAAdsE,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,qBAAK5C,wBAAyB,CAAEC,OAAQ,EAAKtI,MAAMmE,EAAK7E,OAAS,eAC9F,GAAkB,cAAd6E,EAAK7C,KAAsB,CAClC,IAAI/B,EAAQ,EAAKS,MAAMmE,EAAKkN,YAAc,CAAE9P,IAAK,GAAIjC,KAAM,IAC3D,GAAIC,EAAO,CACP,IAAI0E,EAAQ1E,EAAMD,KACdiM,EAAQtH,EAAM4J,YAAY,KAC1BtC,GAAS,IAAGtH,EAAQA,EAAMX,UAAU,EAAGiI,IAC3CN,EAAKpK,WAAa,0BAClBoK,EAAKhH,MAAQ,YACbmF,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,mBAAGzE,KAAMjH,EAAMgC,IAAM,aAAehC,EAAMD,KAAMN,OAAO,SAAS8K,IAAI,sBAApE,SAA2F7F,cAE5H,GAAkB,aAAdE,EAAK7C,KAAqB,CACjC,IAAIrB,EAAOkE,EAAKhF,UACXc,GAAQ,EAAKnB,MAAMyH,WAAa,EAAKzH,MAAMyH,UAAUlG,MACtDJ,EAAO,EAAKnB,MAAMyH,UAAUlG,KAChC+I,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,KAAD,CAAUhL,KAAMA,EAAMK,QAAS6D,EAAK7D,QAAShB,KAAM6E,EAAK7E,KAAMC,MAAO,EAAKS,MAAMmE,EAAK7E,MAAOO,KAAI,yBAC3G,SAAdsE,EAAK7C,KACZ8H,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,aAAqB,cAAC,KAAD,CAAMzK,KAAM,EAAKR,MAAMmE,EAAK7E,aAE1C,WAAd6E,EAAK7C,OACL2J,EAAK6H,cAAgB,WACzB1J,EAAM1J,KAAK,kBAAMmL,KAAN,2BAAeI,GAAf,IAAqB3L,KAAM6E,EAAK7E,KAAhC,SAAuC,EAAK2F,MAAMd,SAvPlD,EA2PnBuO,KAAO,SAACvO,GACJ,IADa,EACT4O,EAAM,GADG,cAEK5O,EAAK1E,UAFV,IAEb,4BACIsT,EADJ,QACczT,MAAQ,IAHT,8BAIb,IAAIkB,EAAOqJ,YAAQ,EAAK7J,MAAMmE,EAAK7E,OACnCkB,EAAKd,KAAKqT,GACV,IAAI/S,EAAQ,GACZA,EAAMmE,EAAK7E,MAAQkB,EACnB,EAAKZ,SAASI,IAnQC,EAsQnBoS,KAAO,SAACjO,EAAMjF,EAAQ8T,EAAMC,GACxB,IAD+B,EAC3BjT,EAAQ,GADmB,cAEbmE,EAAK1E,UAFQ,IAE/B,2BAAiC,CAAC,IAAzBqS,EAAwB,QAC7B,GAAIkB,EAAOC,EAAI,CACX,IAAK,IAAI5R,EAAI,EAAGA,EAAI2R,EAAM3R,IACtB,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOqB,EAAGA,GACzC,IAAK,IAAIA,EAAI2R,EAAM3R,EAAI4R,EAAI5R,IACvB,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOqB,EAAI,EAAGA,GAC7C,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOgT,EAAMC,GACxC,IAAK,IAAI5R,EAAI4R,EAAK,EAAG5R,EAAInC,EAAQmC,IAC7B,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOqB,EAAGA,OAExC,CACD,IAAK,IAAIA,EAAI,EAAGA,EAAI4R,EAAI5R,IACpB,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOqB,EAAGA,GACzC,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOgT,EAAMC,GACxC,IAAK,IAAI5R,EAAI4R,EAAI5R,EAAI2R,EAAM3R,IACvB,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOqB,EAAGA,EAAI,GAC7C,IAAK,IAAIA,EAAI2R,EAAO,EAAG3R,EAAInC,EAAQmC,IAC/B,EAAK6R,SAAS/O,EAAM2N,EAAO9R,EAAOqB,EAAGA,KAnBlB,8BAsB/B,EAAKzB,SAASI,GAAO,kBAAM,EAAKH,KAAKoG,QAAQsL,eAAevR,OA5R7C,EA+RnBkT,SAAW,SAAC/O,EAAM2N,EAAO9R,EAAOf,EAAQD,GACpC,IAAIO,EAAQ,EAAKS,MAAMmE,EAAK7E,KAAO,IAAMwS,EAAMxS,KAAO,IAAML,IACxDM,GAAmB,IAAVA,KACTS,EAAMmE,EAAK7E,KAAO,IAAMwS,EAAMxS,KAAO,IAAMN,GAAUO,IAlS1C,EAqSnByO,OAAS,SAAC7J,EAAMoH,GACZ,IAAI+F,EAAQzH,YAAQ,EAAK7J,MAAMmE,EAAK7E,OACpCgS,EAAM/F,GAAS,KACf,IAAIvL,EAAQ,GACZA,EAAMmE,EAAK7E,MAAQgS,EACnB,EAAK1R,SAASI,IA1SC,EA6SnBqO,SAAW,SAAAlK,GACP,IAAI5E,EAAQ,EAAKS,MAAMmE,EAAK7E,MAC5B,MAAkB,oBAAd6E,EAAK7C,KACEkI,YAAQjK,EAAO4E,EAAKsF,OAEb,sBAAdtF,EAAK7C,KACEoI,YAAUnK,GAEH,oBAAd4E,EAAK7C,KACE,cAAC,EAAD,CAAOhC,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQ+E,KAAMzD,EAAKyD,MAAQ,EAAGyG,UAAU,EAAM9O,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,iBAEpH,mBAAdsE,EAAK7C,KACE,cAAC,GAAD,CAAMhC,KAAM6E,EAAK7E,KAAMuD,OAAQsB,EAAKtB,OAAQwL,UAAU,EAAM9O,MAAO,EAAKS,MAAMmE,EAAK7E,OAAS,GAAIO,KAAI,iBAE3GsE,EAAKH,OACEG,EAAKL,SAAW,EAAKA,SAASK,EAAKH,OAAQzE,GAAU4E,EAAKH,OAAOzE,IAAU,GAElF4E,EAAKJ,OACEI,EAAKL,SAAW,EAAKA,SAASK,EAAKJ,OAAQxE,GAAU4E,EAAKJ,OAAOxE,IAAU,GAExE,IAAVA,EACO,EAEJA,GAAS,IApUD,EAuUnBuE,SAAW,SAACC,EAAQxE,GAChB,IAAKA,EAAO,MAAO,GAEnB,IAH0B,EAGtByE,EAAS,GAHa,cAIZzE,GAJY,IAI1B,2BAAqB,CAAC,IACd0E,EAAQF,EADK,SAEbE,IACAD,GAAU,IAAMC,IAPE,8BAU1B,OAAOD,EAAO9E,OAAS,EAAI8E,EAAOV,UAAU,GAAK,IAjVlC,EAoVnB2B,MAAQ,SAAAd,GACJ,GAAIA,EAAKH,OAAQ,CACb,IAAIkG,EAAU,GACd,IAAK,IAAIqB,KAASpH,EAAKH,OACnBkG,EAAQxK,KAAK,CAAEuE,MAAOE,EAAKH,OAAOuH,GAAQhM,MAAO,GAAKyN,YAAMzB,EAAO,KAEvE,OAAIpH,EAAKL,SACEoG,EAAQhL,OAAS,EAAI,kBAAUsM,MAAV,CAAgBtB,QAASA,IAAc,mBAAQA,QAASA,EAASiJ,KAAK,WAAWC,YAAU,IAEpHlJ,EAAQhL,OAAS,EAAI,kBAAOsM,MAAP,CAAatB,QAASA,IAAc,mBAAQA,QAASA,IAGrF,GAAI/F,EAAKJ,OAAQ,CACb,IAAImG,EAAU,GACd,GAAI/F,EAAKJ,kBAAkB0D,MAAO,CAAC,IAAD,gBACZtD,EAAKJ,QADO,IAC9B,gCAASxE,EAAT,QACI2K,EAAQxK,KAAK,CAAEuE,MAAO1E,EAAOA,MAAOA,KAFV,oCAI7B,GAAI4E,EAAKJ,kBAAkB2H,OAAQ,CACpC,IAAID,EAAOC,OAAOD,KAAKtH,EAAKJ,QAC5B,IAAK,IAAIwH,KAASE,EAAM,CACpB,IAAIpL,EAAMoL,EAAKF,GACfrB,EAAQxK,KAAK,CAAEuE,MAAOE,EAAKJ,OAAO1D,IAAQA,EAAKd,MAAOc,KAI9D,OAAI8D,EAAKL,SACEoG,EAAQhL,OAAS,EAAI,kBAAUsM,MAAV,CAAgBtB,QAASA,IAAc,mBAAQA,QAASA,EAASiJ,KAAK,WAAWC,YAAU,IAEpHlJ,EAAQhL,OAAS,EAAI,kBAAOsM,MAAP,CAAatB,QAASA,IAAc,mBAAQA,QAASA,IAGrF,MAAkB,SAAd/F,EAAK7C,KAAwB,sBAEf,aAAd6C,EAAK7C,KAA4B,mBAAY+R,SAAUlP,EAAKmP,OAAQ,IAEtD,WAAdnP,EAAK7C,KAA0B,mBAAQ2I,UAAW9F,EAAK/D,UAAY+D,EAAKoP,OAAQpT,SAAU,EAAKkH,OAAOzC,KAAZ,eAAuBT,KAEnG,cAAdA,EAAK7C,KAA6B,kBAAOkS,SAAP,CAAgBC,SAAU,CAAEC,QAAS,KAEzD,aAAdvP,EAAK7C,KAA4B,kBAAOqS,SAAP,IAEnB,kBAAdxP,EAAK7C,KAAiC,mBAAc4I,QAAS,EAAKlK,MAAM,iBAAmBmE,EAAK7E,QAE7F,uBAhYQ,EAmYnB+H,OAAS,SAAClD,EAAMmD,GACZ,EAAK/H,MAAM4E,EAAK7E,KAAMgI,EAAQ,EAAI,IApYnB,EAuYnBuL,QAAU,SAAC1O,GACP/D,YAAQ,EAAKtB,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAK4C,EAAK/D,SAAU,CAAEZ,GAAI,EAAKV,MAAM0B,KAAKhB,KAAMe,MAAK,SAAAC,GAC3E,OAATA,GAEJ,EAAK1B,MAAM0C,KAAKwE,KAAK,EAAKlH,MAAMyC,IAAK,EAAKzC,MAAMyH,UAAW/F,OA3YhD,EA+YnBgI,QAAU,WACN,IAAIoL,EAAU,GACd,IAAK,EAAK9U,MAAMiJ,KAAKS,SAAW,EAAK1J,MAAMiJ,KAAKS,QAAQtJ,QAAU,EAC9D,OAAO0U,EAEX,IAAIC,EAAyC,IAAnC,EAAK/U,MAAMiJ,KAAKS,QAAQtJ,OAClC,GAAI,EAAKJ,MAAMiJ,KAAKS,QAAS,CAAC,IAAD,gBACL,EAAK1J,MAAMiJ,KAAKS,SADX,IACzB,2BAA6C,CAAC,IAArCA,EAAoC,QACzC,IAAIA,EAAQe,OAAZ,CAEA,IAAI/E,EAAS,CACTnE,IAAKmI,EAAQvE,OAEb4P,IACArP,EAAOlD,KAAO,UACdkD,EAAO0G,SAAW,UAEtB0I,EAAQlU,KAAK,6CAAY8E,GAAZ,IAAoBE,QAAS,EAAKF,OAAOI,KAAZ,eAAuB4D,GAApD,SAA+DA,EAAQvE,UAChFuE,EAAQ3G,SAAWgS,GACnBD,EAAQlU,KAAK,mBAAqB4B,KAAK,SAASoD,QAAS,EAAK0J,OAAOxJ,KAAZ,eAAuB4D,GAAnE,yBAAY,aAbR,+BAiB7B,OAAOoL,GAnaP,EAAK/T,KAAOY,IAAM6I,YAClB,EAAKtJ,MAAQlB,EAAM0B,MAAQ,GAC3B,EAAKzB,OAAO,EAAKiB,OACjB,EAAK+D,OAAS,GACd,EAAK6N,UAAY,EAPF,E,UADJnR,IAAMC,WA2anBoT,G,4MACF9N,KAAO,kBAAM5F,YAAQ,EAAKtB,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAK,EAAKzC,MAAMiJ,KAAK3H,SAAU,EAAKtB,MAAMyH,Y,EAE9FoL,OAAS,SAAC/D,EAAI7J,GACV,IADqB,EACjBvD,EAAI,2BAAQ,EAAKR,OAAU+D,GADV,cAEJ,EAAKjF,MAAMiJ,KAAKjJ,OAFZ,IAErB,2BAAwC,CAAC,IAAhCqF,EAA+B,QACpC,GAAkB,UAAdA,EAAK7C,KAAkB,CACvB,IADuB,EACnB0C,EAAS,GADU,cAELG,EAAK1E,UAFA,IAEvB,gCAASqS,EAAT,QACQA,EAAM9N,SACNA,EAAO8N,EAAMxS,OAAQ,IAJN,8BAMvB,IAAIgS,EAAQ,GACRtR,EAAQ6J,YAAQ,EAAK7J,MAAMmE,EAAK7E,OACpC,IAAK,IAAIe,KAAOG,EACZ,QAAkBuT,IAAdvT,EAAKH,IAMT,GAAIA,EAAIyF,QAAQ3B,EAAK7E,OAAS,EAAG,CAC7B,IAAI0U,EAAK3T,EAAIuD,MAAM,KACf2H,EAAQyB,YAAMgH,EAAG,IACrB,GAAqB,OAAjBhU,EAAMuL,GAAiB,QAChB/K,EAAKH,GAEZ,SAGJ,IAAI0S,EAAMzB,EAAM/F,IAAU,GAC1BwH,EAAIiB,EAAG,IAAMhQ,EAAOgQ,EAAG,IAAMhH,YAAMxM,EAAKH,IAAQG,EAAKH,UAC9CG,EAAKH,GACZiR,EAAM/F,GAASwH,eAjBRvS,EAAKH,GAqBpB,IADA,IAAI4T,EAAM,GACV,MAAgB3C,EAAhB,gBAAK,IAAIyB,EAAG,KACJA,GACAkB,EAAIvU,KAAKqT,GACjBvS,EAAK2D,EAAK7E,MAAQ6C,KAAKC,UAAU6R,KArCpB,8BAyCrB,OAAO7T,YAAQ,EAAKtB,MAAM0C,KAAKD,IAAI,EAAKzC,MAAMyC,IAAKqM,EAAGxN,SAAWwN,EAAGtM,MAAtD,YAAC,eAAiEd,GAAS,EAAK1B,MAAMyH,a,YA5CvF6K,IAgDN0C,MC5fTI,G,4MACFlO,KAAO,kBAAM5F,YAAQ,mBAAoB,CAAEC,IAAK,EAAKA,S,EAErDsR,OAAS,SAAC/D,EAAI7J,GACV,IAAIuN,EAAQ,GACZ,IAAK,IAAIhS,KAAQyE,EACbuN,EAAM5R,KAAK,CACPW,IAAKf,EACLC,MAAOwE,EAAOzE,IAAS,KAI/B,OAAOc,YAAQ,kBAAmB,CAAE+T,IAAKhS,KAAKC,UAAUkP,M,EAG5DjR,IAAM,kBAAM,EAAKvB,MAAMyC,IAAI+B,UAAU,GAAG0L,QAAQ,MAAO,KAAO,K,YAf5CoC,IAkBP8C,M,mBC8FAE,I,yDA7GX,WAAYtV,GAAQ,IAAD,8BACf,cAAMA,IAkBVuV,MAAQ,SAAAA,GACJ,EAAKzU,SAAS,CAAE0U,MAAM,IACtBlU,YAAQ,uBAAwB,CAAEiU,MAAOA,IAAS9T,MAAK,SAAAC,GACtC,OAATA,GAEJ,EAAKZ,SAAS,CACV0U,MAAM,EACND,MAAOA,EACPE,OAAQ/T,QA3BD,EAgCnB8G,MAAQ,SAAA/C,GACJ,EAAK3E,SAAS,CACV2U,OAAQhQ,EAAEiQ,WAlCC,EAsCnBC,KAAO,WACH,EAAK7U,SAAS,CAAE0U,MAAM,IAAS,kBAAMlU,YAAQ,qBAAsB,CAAEiU,MAAO,EAAKrU,MAAMqU,MAAOE,OAAQ,EAAKvU,MAAMuU,OAAO7C,KAAK,QAASnR,MAAK,SAAAC,GAAI,OAAI,EAAKZ,SAAS,CAAE0U,MAAM,WAvC1J,EA0CnBI,QAAU,WACN,IADY,EACR3T,EAAM,GADE,cAEK,EAAKf,MAAMuU,QAFhB,IAEZ,2BACI,IADiC,IAA5BrG,EAA2B,UACnB,CACTnN,EAAImN,IAAQ,EACZ,IAAI3C,EAAQ2C,EAAKL,YAAY,KAC7B,IAAe,IAAXtC,EACA,MAEJ2C,EAAOA,EAAK5K,UAAU,EAAGiI,IATrB,8BAaZ,IAAImJ,EAAU,GACd,IAAK,IAAIrU,KAAOU,EACZ2T,EAAQhV,KAAKW,GAGjB,OAAOqU,GA5DQ,EA+DnB5U,OAAS,WACL,IAAIsI,EAAW,GACf,OAAK,EAAKpI,MAAM2U,QAAuC,IAA7B,EAAK3U,MAAM2U,OAAOzV,QAE5CkJ,EAAS1I,KAAK,EAAKiV,UACf,EAAK3U,MAAMsU,MAAQ,EAAKtU,MAAM4U,MAAQ,EAAK5U,MAAM4U,KAAK1V,OAAS,GAC/DkJ,EAAS1I,KAAK,oBAAiBmV,WAAW,EAAMC,YAAY,EAAOC,UAAU,EAAMC,eAAe,EAC9FC,oBAAqB,EAAKP,UAAWQ,mBAAoB,EAAKlV,MAAMuU,OAAQY,QAAS,EAAK7N,MAAOvH,SAAU,EAAKqV,MAAM,EAAKpV,MAAM4U,KAAM,KADnH,SAExB,EAAK9V,MAAMiJ,KAAKS,SAAW,EAAK1J,MAAMiJ,KAAKS,QAAQtJ,OAAS,GAC5DkJ,EAAS1I,KAAK,qBAAmBmB,UAAU,0BAA7B,SAAuD,mBAAQS,KAAK,UAAUoD,QAAS,EAAK+P,KAArC,2BAA9C,YAEpBrM,GAT0DA,GAjElD,EA6EnBuM,OAAS,WACL,IADW,EACPzK,EAAU,GADH,cAEO,EAAKlK,MAAM2U,QAFlB,IAEX,2BAAqC,CAAC,IAA7BN,EAA4B,QACjCnK,EAAQxK,KAAK,kBAAQ2V,OAAR,CAAiC9V,MAAO8U,EAAMA,MAA9C,SAAsDA,EAAM/U,MAAxC+U,EAAMA,SAHhC,8BAMX,OAAO,mBAAqBpH,aAAc,EAAKjN,MAAMqU,OAAS,EAAGjQ,MAAO,CAAE4E,MAAO,QAAU7I,SAAU,EAAKkU,MAAnG,SAA2GnK,GAA/F,WAnFJ,EAsFnBkL,MAAQ,SAACE,EAAOC,GACZ,IAAIH,EAAQ,GACZ,IAAKE,GAA0B,IAAjBA,EAAMpW,OAAc,OAAOkW,EAEzC,IAJ0B,EAItB3J,EAAO,GAJe,cAKT6J,GALS,IAK1B,2BAAwB,CAAC,IAAhBV,EAAe,QAChBvU,EAAMkV,GAAaX,EAAKxU,SAAWwU,EAAKtT,MAAQsT,EAAK3Q,OACrD2Q,EAAKrO,YACLlG,GAAO8B,KAAKC,UAAUwS,EAAKrO,YAC3BlG,KAAOoL,IAEXA,EAAKpL,IAAO,EACZ+U,EAAM1V,KAAK,CACPW,IAAKA,EACLhB,MAAOuV,EAAK3Q,MACZxE,SAAU,EAAK2V,MAAMR,EAAKxL,MAAO/I,EAAM,SAfrB,8BAmB1B,OAAO+U,GAtGP,EAAKpV,MAAQ,GACbI,YAAQ,wBAAwBG,MAAK,SAAAC,GACrB,MAARA,GAEJ,EAAKZ,SAAS,CACV+U,OAAQnU,EACR6T,MAAO,IACR,kBAAM,EAAKA,MAAM,SAExBjU,YAAQ,gBAAiB,CAAEoV,KAAK,IAAQjV,MAAK,SAAAC,GAC5B,OAATA,GAEJ,EAAKZ,SAAS,CAAEgV,KAAMpU,OAfX,E,UADDC,IAAMC,YCFtB+U,I,mNACF3V,OAAS,WAGG,OAFA,EAAKhB,MAAMwH,KAEJ,qBAAKzF,UAAU,UAAf,sB,YAJJJ,IAAMC,YASV+U,MCkDAjU,GAFF,I,iDAjDTkU,SAAW,SAAAnK,GAAK,OAAI,EAAKA,MAAQA,G,KAEjChK,IAAM,SAACA,EAAKnB,GACR,OAAKA,EAEDA,EAAQ8R,WAAW,KAAa9R,EAE7BmB,EAAI+B,UAAU,EAAG/B,EAAIsM,YAAY,KAAO,GAAKzN,EAJ/BmB,G,KAOzByE,KAAO,SAACzE,EAAKgF,EAAW/F,GACfe,EAAI2Q,WAAW,OAAM3Q,EAAMA,EAAI+B,UAAU/B,EAAIuE,QAAQ,MAAMkJ,QAAQ,MAAO,MACnE,mBAARzN,EAMQ,uBAARA,EAMJwG,IAAK4F,IAAIpM,GAAKhB,MAAK,SAAAqN,GACf,GAAW,OAAPA,EAAJ,CAEA,IAAIjK,EAAIiK,EAAGrM,EAAI+B,UAAU/B,EAAIsM,YAAY,KAAO,IAC3ClK,IAEU,SAAXA,EAAErC,KACF,EAAK1B,SAAS,cAAC,IAAD,CAAMd,MAAO8O,EAAG9O,MAAOiJ,KAAMpE,EAAGpC,IAAKA,EAAKgF,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,KAC9E,SAAXmC,EAAErC,KACT,EAAK1B,SAAS,cAAC,GAAD,CAAMd,MAAO8O,EAAG9O,MAAOiJ,KAAMpE,EAAGpC,IAAKA,EAAKgF,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,KAC9E,YAAXmC,EAAErC,KACT,EAAK1B,SAAS,cAAC,GAAD,CAASmI,KAAMpE,KACX,YAAXiK,EAAGvN,IACV,EAAKT,SAAS,cAAC,GAAD,CAASd,MAAO8O,EAAG9O,MAAOiJ,KAAMpE,EAAGpC,IAAKA,EAAKgF,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,KACjF,SAAXmC,EAAErC,MACT,EAAKgF,KAAK3C,EAAE2C,KAAMC,EAAW/F,QApBjC,EAAKZ,SAAS,cAAC,EAAD,KANdQ,YAAQmB,GAAKhB,MAAK,SAAAC,GAAI,OAAIkG,OAAOE,SAAS9B,a,KA+BlDwB,KAAO,SAACA,EAAMC,EAAW/F,GAAlB,OAA2B,EAAKZ,SAAS,cAAC,GAAD,CAAM0G,KAAMA,EAAMC,UAAWA,EAAW/F,KAAMA,EAAMgB,KAAM,M,KAE1G5B,SAAW,SAAAI,GAAK,OAAI,EAAKuL,MAAM3L,SAAS,CAAE4B,KAAM,0BAAW,kBAAM,EAAK+J,MAAM3L,SAAS,CAAE4B,KAAMxB,SCpDzF2V,GAAR,IAAQA,QA0DOC,G,kDAvDX,aAAe,IAAD,8BACV,gBAiBJvP,MAAQ,SAAA9B,GACJ,EAAKyB,KAAK,EAAKjF,IAAIwD,EAAElE,OAnBX,EAsBd2F,KAAO,SAAAiF,GACCA,EAAK7K,QACLoB,GAAKwE,KAAKiF,EAAK7K,QAAS6K,EAAK1E,UAAW0E,EAAKzK,MACxCyK,EAAK3E,MACV9E,GAAK8E,KAAK2E,EAAK3E,KAAM2E,EAAK1E,UAAW0E,EAAKzK,OA1BpC,EA6BdV,OAAS,WACL,OAAgC,IAA5B,EAAKE,MAAMoJ,MAAMlK,OAAqB,KAEnC,mBAAMwF,QAAS,EAAK2B,MAAO8M,KAAK,SAAS0C,MAAM,OAAOC,gBAAiB,CAAC,OAAQC,oBAAqB,CAAC,EAAK/V,MAAMiL,KAAO,MAAQ,SAAhI,SAA2I,EAAK2J,KAAK,EAAK5U,MAAMoJ,MAAO,QAhCpK,EAmCdwL,KAAO,SAACxL,EAAOrC,GACX,IAAIuO,EAAQ,GACZ,GAAqB,IAAjBlM,EAAMlK,OAAc,OAAOoW,EAE/B,IAAK,IAAIjU,EAAI,EAAGA,EAAI+H,EAAMlK,OAAQmC,IAAK,CACnC,IAAIhB,EAAM0G,EAAS,IAAM1F,EACrB4J,EAAO7B,EAAM/H,GACb4J,EAAK7K,UAAY6K,EAAK7B,OACtB,EAAKrI,IAAIV,GAAO4K,EAChBqK,EAAM5V,KAAK,kBAAMmL,KAAN,UAAsBI,EAAKhH,OAAX5D,KAG3BiV,EAAM5V,KAAK,cAACiW,GAAD,CAAmBtW,MAAO,+BAAO4L,EAAKhH,QAAtC,SAAuD,EAAK2Q,KAAK3J,EAAK7B,MAAO/I,IAA/DA,IAIjC,OAAOiV,GAhDP,EAAKtV,MAAQ,CACToJ,MAAO,IAEX,EAAKrI,IAAM,GACXX,YAAQ,iBAAiBG,MAAK,SAAAC,GAC1B,GAAa,OAATA,GAAiC,IAAhBA,EAAKtB,OAA1B,CAEA,IAAI+L,EAAOzK,EAAK,GAAGJ,SAAWI,EAAK,GAAG8F,KACtC,EAAK1G,SAAS,CACVwJ,MAAO5I,EACPyK,KAAMA,IACP,kBAAM,EAAKjF,KAAKiF,EAAOzK,EAAK,GAAKA,EAAK,GAAG4I,MAAM,WAd5C,E,UADK3I,IAAMC,W,uFCmDdsV,I,yDAnDX,WAAYlX,GAAQ,IAAD,8BACf,cAAMA,IAMVmX,KAAO,WACH,EAAKnX,MAAM0C,KAAKwE,KAAK,aAAc,GAAI,OARxB,EAWnBkQ,SAAW,WACP,EAAKpX,MAAM0C,KAAKwE,KAAK,iBAAkB,GAAI,KAZ5B,EAenBmQ,QAAU,WACN1U,YAAK,kBAAkBlB,MAAK,SAAAmB,GAAI,OAAIgF,OAAOE,SAAS9B,aAhBrC,EAmBnBhF,OAAS,WACL,IAAIsW,EAAO,EAAKtX,MAAMuX,KAAKD,MAAQ,YAC/BxB,EAAO,8BACP,mBAAM/J,KAAN,CAAWnG,QAAS,EAAKuR,KAAzB,UACI,cAACK,GAAA,EAAD,IACA,+DAEJ,mBAAMzL,KAAN,CAAWnG,QAAS,EAAKwR,SAAzB,UACI,cAACK,GAAA,EAAD,IACA,+DAEJ,kBAAMC,QAAN,IACA,mBAAM3L,KAAN,CAAWnG,QAAS,EAAKyR,QAAzB,UACI,cAACM,GAAA,EAAD,IACA,sDAIR,OACI,sBAAK5V,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAf,SAAsC,oBAAM6V,SAAU,EAAK1W,MAAMuC,YACjE,oBAAUuI,QAAS8J,EAAnB,SACI,sBAAK/T,UAAU,sBAAf,UACK,EAAK/B,MAAMuX,KAAKvV,OAAS,oBAAQI,IAAKC,YAAI,EAAKrC,MAAMuX,KAAKvV,UAAc,6BAASsV,EAAK9S,UAAU,EAAG,KACpG,+BAAO8S,aAxCvB,EAAKpW,MAAQ,CAAEuC,SAAS,GACxBD,YAAO,gBAJQ,E,UADJ7B,IAAMC,YC+BViW,I,yDA5Bb,WAAY7X,GAAQ,IAAD,8BACjB,cAAMA,IAQRgB,OAAS,kBACP,oBAAQsE,MAAO,CAAEwS,UAAW,SAA5B,UACE,mBAAQC,MAAR,WACE,qBAAKhW,UAAU,eAAf,SAA+B,EAAK/B,MAAMgY,KAAO,CAAC,qBAAe5V,IAAKC,YAAI,EAAKrC,MAAMgY,MAAO7N,IAAI,IAArC,OAA4C,uBAAS,QAAgB,OAChI,qBAAKpI,UAAU,eAAf,SAA8B,cAAC,GAAD,MAC9B,sBAAKA,UAAU,oBAAf,kCAA0D,IAAIkW,MAAOC,oBAEvE,8BACE,kBAAQC,OAAR,CAAepW,UAAU,iBAAzB,SACE,cAAC,GAAD,CAAMwV,KAAM,EAAKvX,MAAMuX,KAAM7U,KAAMA,OAErC,kBAAQ0V,QAAR,UACE,qBAAKrW,UAAU,eAAf,SAA+B,EAAKb,MAAMwB,gBAlBhD,EAAKxB,MAAQ,CACXwB,KAAM,yBAERA,GAAKkU,SAAL,gBANiB,E,UADCjV,IAAMC,Y,kDC6EbyW,I,yDA7EX,WAAYrY,GAAQ,IAAD,8BACf,cAAMA,IA2BVuM,OAAS,SAAAtH,GACD,EAAK/D,MAAMoX,IAAMrT,EAAOsT,SAAWtT,EAAOmS,SAC1CtU,EAAA,EAAQE,KAAK,6EAKjBiC,EAAOzC,KAAO,GACdlB,YAAQ,eAAiB,EAAKJ,MAAMoX,GAAK,KAAO,MAAOrT,GAAQxD,MAAK,SAAAC,GACpD,MAARA,GACAkG,OAAOE,SAAS9B,cAtCT,EA2CnBnF,OAAS,WACL,EAAKC,SAAS,CAAEwX,IAAK,EAAKpX,MAAMoX,MAzChC,EAAKpX,MAAQ,CACToX,IAAI,EACJzC,OAAQ,IAEZvU,YAAQ,mBAAoB,CAAEC,IAAK,mCAAoCE,MAAK,SAAAC,GACxE,GAAa,OAATA,EAAJ,CAEA,IAAI8Q,EAAQzH,YAAQrJ,EAAK,mCACzB,GAAqB,IAAjB8Q,EAAMpS,OAAV,CAEA,IAAImS,EAAYC,EAAM,GACtBD,EAAUpN,MAAQoN,EAAU/R,KAC5B,IAAIiM,EAAQ8F,EAAU/R,KAAKuO,YAAY,KACnCtC,GAAS,IACT8F,EAAUpN,MAAQoN,EAAU/R,KAAKgE,UAAU,EAAGiI,IAClD,EAAK3L,SAAS,CAAEyR,UAAWA,SAE/BjR,YAAQ,gCAAgCG,MAAK,SAAAC,GAC5B,OAATA,GAAiBA,EAAKtB,QAAU,GAGpC,EAAKU,SAAS,CAAE+U,OAAQnU,OAxBb,E,2CA+CnB,WACI,OACI,oBAAQK,UAAU,iBAAlB,UACI,mBAAQqW,QAAR,WACI,qBAAKrW,UAAU,iBAAf,SAAiCqE,SAAS7F,QAC1C,qBAAKwB,UAAU,eAAf,SACI,oBAAMuK,SAAUkM,KAAKjM,OAArB,UACI,kBAAMR,KAAN,CAAWvL,KAAK,MAAhB,SAAsB,mBAAOiY,OAAQ,cAACjB,GAAA,EAAD,CAAclS,MAAO,CAAEoT,MAAO,qBAAyBC,YAAY,qBAAMC,WAAW,MACzH,kBAAM7M,KAAN,CAAWvL,KAAK,WAAhB,SAA2B,kBAAOqU,SAAP,CAAgB4D,OAAQ,cAAChB,GAAA,EAAD,CAAcnS,MAAO,CAAEoT,MAAO,qBAAyBC,YAAY,mBACrHH,KAAKtX,MAAMoX,GAAK,kBAAMvM,KAAN,CAAWvL,KAAK,SAAhB,SAAyB,kBAAOqU,SAAP,CAAgB4D,OAAQ,cAAChB,GAAA,EAAD,CAAcnS,MAAO,CAAEoT,MAAO,qBAAyBC,YAAY,+BAAwB,KAC5JH,KAAKtX,MAAMoX,IAAME,KAAKtX,MAAM2U,OAAOzV,OAAS,EAAI,kBAAM2L,KAAN,CAAW5G,MAAM,eAAK3E,KAAK,QAA3B,SAAmC,kBAAOkM,MAAP,CAAatB,QAASoN,KAAKtX,MAAM2U,OAAQgD,WAAW,SAASC,YAAY,YAAyB,KACrLN,KAAKtX,MAAMoX,IAAME,KAAKtX,MAAMqR,UAAY,kBAAMxG,KAAN,UAAW,mBAAGrE,KAAM8Q,KAAKtX,MAAMqR,UAAU9P,IAAM,aAAe+V,KAAKtX,MAAMqR,UAAU/R,KAAMN,OAAO,SAAS8K,IAAI,sBAAlG,SAAyHwN,KAAKtX,MAAMqR,UAAUpN,UAAyB,KAC3N,kBAAM4G,KAAN,UAAW,mBAAQvJ,KAAK,UAAU4J,SAAS,SAASrK,UAAU,oBAAnD,SAAwEyW,KAAKtX,MAAMoX,GAAK,2BAAS,mBAC3GE,KAAKxY,MAAM+Y,aAAe,mBAAMhN,KAAN,WACvB,mBAAQvJ,KAAK,OAAOT,UAAU,kBAAkB6D,QAAS4S,KAAK3X,OAA9D,SAAuE2X,KAAKtX,MAAMoX,GAAK,mDAAa,mCACpG,wEACA,cAACU,GAAA,EAAD,CAAgBjX,UAAU,kBAC1B,cAACkX,GAAA,EAAD,CAAgBlX,UAAU,kBAC1B,cAACmX,GAAA,EAAD,CAAenX,UAAU,kBACzB,cAACoX,GAAA,EAAD,CAAgBpX,UAAU,qBACf,aAI3B,mBAAQqX,OAAR,CAAerX,UAAU,iBAAzB,kCAAiE,IAAIkW,MAAOC,wB,GAxEvEvW,IAAMC,YCgCZyX,G,kDA/Bb,WAAYrZ,GAAQ,IAAD,8BACjB,cAAMA,IAURmN,kBAAoB,WAClB7L,YAAQ,mBAAoB,CAAEC,IAAK,oBAAqBE,MAAK,SAAAC,GAC9C,OAATA,IAEJ0E,SAAS7F,MAAQmB,EAAK,iCAAmC,iBACzD,EAAKZ,SAAS,CACZkX,KAAMtW,EAAK,+BACXqX,aAAwD,MAA1CrX,EAAK,uCAGvBJ,YAAQ,cAAcG,MAAK,SAAAC,GAAI,OAAI,EAAKZ,SAAS,CAAEyW,KAAM7V,QArBxC,EAwBnBV,OAAS,kBACP,mBAAgB+Q,OAAQuH,IAAxB,SACG,EAAKpY,MAAMqW,KAAK7W,IAAoC,KAA9B,EAAKQ,MAAMqW,KAAK7W,GAAGN,OAAgB,cAAC,GAAD,CAAS4X,KAAM,EAAK9W,MAAM8W,KAAMT,KAAM,EAAKrW,MAAMqW,OAAW,cAAC,GAAD,CAAQS,KAAM,EAAK9W,MAAM8W,KAAMe,aAAc,EAAK7X,MAAM6X,kBAvBhL,EAAK7X,MAAQ,CACX8W,KAAM,GACNe,cAAc,EACdxB,KAAM,IAER/T,YAAO,MARU,E,UADF7B,IAAMC,WCKL2X,QACW,cAA7B3R,OAAOE,SAAS0R,UAEe,UAA7B5R,OAAOE,SAAS0R,UAEhB5R,OAAOE,SAAS0R,SAASC,MACvB,2DCZNC,IAAS1Y,OAAO,cAAC,GAAD,IAAUoF,SAAS4K,eAAe,SD6H5C,kBAAmB2I,WACrBA,UAAUC,cAAcC,MACrBpY,MAAK,SAAAqY,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjN,QAAQiN,MAAMA,EAAMnX,a,gCEzI5B,sCAAMiI,EAAU,SAAAmP,GACZ,IAAKA,EACD,MAAO,GAEX,GAAsB,kBAAVA,EACR,OAAOA,EAEX,IACI,IAAI1H,EAAQnP,KAAK6P,MAAMgH,GAEvB,OAAO1H,aAAiB7J,MAAQ6J,EAAQ,GAC1C,MAAO/M,GACL,MAAO,M,oECyCTwD,EAAO,IAhDT,aAAe,IAAD,gCAId4F,IAAM,SAAApM,GACF,IAAIlB,EAAMkB,EAAI+B,UAAU,EAAG/B,EAAIsM,YAAY,KAAO,GAClD,OAAIxN,KAAO,EAAKU,IACL,IAAIkY,SAAQ,SAACC,EAASC,GACzBD,EAAQ,EAAKnY,IAAIV,OAIlBD,YAAQ,gBAAiB,CAC5BC,IAAKA,IACNE,MAAK,SAAAC,GAKJ,OAJY,MAARA,IACA,EAAKO,IAAIV,GAAOG,GAGbA,MAnBD,KAuBd1B,MAAQ,SAACsa,EAAMC,GACX,IAAKD,EAAM,OAAOC,EAElB,IAAKA,EAAK,OAAOD,EAEjB,IALmB,EAKfE,EAAK,GALU,cAMLD,GANK,IAMnB,2BAAmB,CAAC,IAAD,EAAVtP,EAAU,QACXwP,EAAK,GADM,cAEDH,GAFC,IAEf,2BAAoB,CAAC,IAAZlK,EAAW,QAChB,GAAIA,EAAE5P,OAASyK,EAAEzK,KAAM,CACnBia,EAAKrK,EAEL,QANO,8BASfoK,EAAG5Z,KAAH,2BACO6Z,GACAxP,KAjBQ,8BAqBnB,OAAOuP,GA3CPhC,KAAKvW,IAAM,IAiDJgH,Q","file":"static/js/main.52548c92.chunk.js","sourcesContent":["import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div key={uid} className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null,\n            delete: null,\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = true;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values) {\n                if (prop.values instanceof Array)\n                    column.render = model => this.value(model, prop.name);\n                else\n                    column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            } else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(props.body.uri(props.uri, prop.service), prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data.list || data) {\n                        let option = d;\n                        if (lname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + lname);\n                        else\n                            option.label = d[lname];\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.style(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'password')\n                column.render = model => this.style(prop, model, '***');\n            else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else if (prop.type === 'multi-line') {\n                column.render = model => {\n                    let lines = [];\n                    for (let line of meta.props(props.props, prop.lines)) {\n                        let value = this.value(model, line.name);\n                        if (!value && value !== 0)\n                            continue;\n\n                        if (line.labels)\n                            value = line.labels[value];\n                        else if (line.values && !(line.values instanceof Array))\n                            value = line.values[value];\n                        else if (line.type === 'money' || line.type === 'read-only:money')\n                            value = toMoney(value);\n                        else if (line.type === 'percent' || line.type === 'read-only:percent')\n                            value = toPercent(value);\n                        lines.push(<div key={'line:' + model.id + ':' + line.name}>{line.label} : {this.style(line, model, value)}</div>);\n                    }\n\n                    return lines;\n                }\n            }\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    let opsize = props.meta.opsize || [2];\n                    if (opsize.length < 2)\n                        opsize[1] = 2;\n                    if (mops.length <= opsize[0]) {\n                        for (let i in mops) {\n                            if (i > 0) ops.push(i % opsize[1] === 0 ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                            ops.push(this.action(mops[i], model));\n                        }\n                    } else {\n                        opsize[0]--;\n                        for (let i = 0; i < opsize[0]; i++) {\n                            ops.push(this.action(mops[i], model));\n                            ops.push(i > 0 && (i % opsize[1] === 0) ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                        }\n                        let items = [];\n                        for (let i = opsize[0]; i < mops.length; i++)\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete') {\n            this.setState({\n                delete: {\n                    op: op,\n                    model: model,\n                }\n            });\n\n            return;\n        }\n\n        if (op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            let href = this.props.body.uri(this.props.uri, op.service || op.type);\n            if (model && model.id) href += '?id=' + model.id;\n            else {\n                let values = this.searches();\n                for (let key in values) {\n                    let value = values[key];\n                    if (!value)\n                        continue;\n\n                    href += href.indexOf('?') === -1 ? '?' : '&';\n                    href += key + '=' + encodeURIComponent(value);\n                }\n            }\n            window.open('about:blank').location.href = href;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancelPreview = () => this.setState({ preview: null });\n\n    cancelDelete = () => this.setState({ delete: null });\n\n    okDelete = () => {\n        this.reload(this.state.delete.op, this.state.delete.model, {});\n        this.setState({ delete: null });\n    }\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(<Search key=\"search\" props={this.searchProps} toolbar={this.props.meta.toolbar} grid={this} form={this.form} dselect={this.state.dselect} />);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancelPreview}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n        elements.push(\n            <Modal key=\"delete\" visible={this.state.delete} title={this.state.delete ? this.state.delete.op.label : ''} onCancel={this.cancelDelete} onOk={this.okDelete}>\n                {this.deleteItems()}\n            </Modal>);\n\n        return elements;\n    }\n\n    deleteItems = () => {\n        if (!this.state.delete) return null;\n\n        let items = [];\n        for (let prop of this.props.props) {\n            let value = this.state.delete.model[prop.name];\n            if (prop.labels) value = prop.labels[value];\n            else if (prop.type === 'dselect')\n                value = this.dselect(prop, this.state.delete.model);\n            items.push(<Row key={prop.name}>\n                <Col span={6}>{prop.label}</Col>\n                <Col span={18}>{value}</Col>\n            </Row>);\n        }\n\n        return items;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels || column.values || column.type === 'dselect') initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'dselect') {\n            let options = [{ label: '全部', value: '' }];\n            let values = this.props.dselect[column.name];\n            if (values) {\n                for (let key in values)\n                    options.push({ label: values[key], value: key });\n            }\n\n            return <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    value = (name, value) => {\n        console.log(name + \";\" + value);\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.form)\n            props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        this.state = {\n            options: [],\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        } else\n            parameter.value = value;\n        service(this.props.body.uri(this.props.uri, this.props.service), { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('label=' + this.lname);\n                else\n                    label = option[this.lname];\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({ options });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","const toMoney = (value, empty) => {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = value => {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = value => {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = value => {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toInt = (value, defaultValue) => {\n    if (!value) return defaultValue;\n\n    try {\n        return parseInt(value);\n    } catch (e) {\n        return defaultValue;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent,\n    toInt\n};","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            let path = data.thumbnail || data.path;\n            uri = uri ? (uri + ',' + path) : path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { message } from 'antd';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass UploadSupport extends React.Component {\n    action = url('/photon/ctrl-http/upload');\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            this.changed(file, true);\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.changed(file, true);\n                this.value();\n\n                return;\n            }\n\n            this.changed(file, false);\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            this.changed(file, false);\n            this.value();\n\n            return;\n        }\n    }\n\n    changed = (file, replace) => {\n        let list = [];\n        let exists = false;\n        for (let f of this.list()) {\n            if (f.uid === file.uid) {\n                exists = true;\n                if (replace)\n                    list.push(file);\n\n                continue;\n            }\n\n            list.push(f);\n        }\n        if (!exists)\n            list.push(file);\n        this.setState({ list });\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                if (file.response.thumbnail)\n                    file.thumbnail = file.response.thumbnail;\n                file.url = url(file.uri);\n            }\n            let f = {\n                name: file.name,\n                uri: file.uri\n            };\n            if (file.thumbnail)\n                f.thumbnail = file.thumbnail;\n            list.push(f);\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n}\n\nexport default UploadSupport;","import React from 'react';\nimport { Upload, Button } from 'antd';\nimport { PaperClipOutlined, UploadOutlined } from '@ant-design/icons';\nimport UploadSupport from './upload';\nimport { toArray } from '../json';\nimport { url } from '../http';\n\nclass File extends UploadSupport {\n    state = {\n        list: null\n    }\n\n    render = () => {\n        if (this.props.readonly) {\n            let files = [];\n            try {\n                for (let file of toArray(this.props.value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        let props = {\n            action: this.action,\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { Input } from 'antd';\nimport { FolderOutlined } from '@ant-design/icons';\n\nclass Folder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value\n        };\n    }\n\n    render = () => [\n        <div key={this.props.name + ':file'} className=\"console-form-folder\"><input type=\"file\" id={this.props.name + ':file'} multiple={false} onChange={this.change} /></div>,\n        <Input key={this.props.name + ':input'} addonAfter={<FolderOutlined onClick={this.select} />} value={this.state.value} />\n    ];\n\n    select = () => {\n        document.getElementById(this.props.name + ':file').click();\n    }\n\n    change = (e) => {\n        if (!e || !e.target || !e.target.files || e.target.files.length === 0) return;\n\n        let path = e.target.files[0].path;\n        if (!path) return;\n\n        path = path.substring(0, path.lastIndexOf(e.target.files[0].name));\n        this.props.form.value(this.props.name, path);\n        this.setState({\n            value: path\n        });\n    }\n}\n\nexport default Folder;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, AutoComplete, Input, Button, message } from 'antd';\nimport { SyncOutlined, VerticalAlignTopOutlined, ArrowUpOutlined, ArrowDownOutlined, VerticalAlignBottomOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent, toInt } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport Folder from './folder';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n        this.itemIndex = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'auto-complete' && prop.service && prop.vname) {\n                service(prop.service, prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = [];\n                    for (let d of data.list || data)\n                        options.push({ value: d[prop.vname] });\n                    let state = {};\n                    state['auto-complete:' + prop.name] = options;\n                    this.setState(state);\n                });\n            }\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + toInt(value, 0);\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (prop.type === 'array' || prop.type === 'read-only:array') {\n                let array = toArray(value);\n                for (let i = 0; i < array.length; i++)\n                    for (let k in array[i])\n                        values[prop.name + ':' + k + ':' + i] = '' + array[i][k];\n            } else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.labels)\n                values[prop.name] = toInt(value);\n            else if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        this.itemIndex = 0;\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props))\n            this.item(items, prop, '');\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    item = (items, prop, key) => {\n        if (prop.type === 'array' || prop.type === 'read-only:array') {\n            let is = [];\n            let array = toArray(this.state[prop.name]);\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] === null)\n                    continue;\n\n                is.push(<div key={prop.name + ':divider:' + i} className=\"console-form-children-divider\" />);\n                for (let child of prop.children) {\n                    let c = JSON.parse(JSON.stringify(child));\n                    c.name = prop.name + ':' + c.name + ':' + i;\n                    if (prop.type === 'read-only:array' || (prop.editable === 'last' && i < array.length - 1)) {\n                        if (c.type) {\n                            if (!c.type.startsWith('read-only'))\n                                c.type = 'read-only:' + c.type;\n                        } else\n                            c.type = 'read-only';\n                    }\n                    this.item(is, c, prop.name + ':');\n                }\n                if (!prop.fix) {\n                    is.push(\n                        <div key={prop.name + ':toolbar:' + i} className=\"console-form-children-toolbar\">\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, 0)}><VerticalAlignTopOutlined /></div> : null}\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, i - 1)}><ArrowUpOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, i + 1)}><ArrowDownOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, array.length - 1)}><VerticalAlignBottomOutlined /></div> : null}\n                            <div onClick={this.remove.bind(this, prop, i)}><DeleteOutlined /></div>\n                        </div>\n                    );\n                }\n            }\n            items.push(\n                <div key={prop.name} className=\"console-form-children\">\n                    <div className=\"console-form-children-title\">{prop.label}</div>\n                    {is}\n                    {prop.fix ? null : <div className=\"console-form-children-divider\" />}\n                    {prop.fix ? null : <div className=\"console-form-children-plus\"><Button onClick={this.plus.bind(this, prop)}><PlusOutlined /></Button></div>}\n                </div>\n            );\n            this.itemIndex++;\n\n            return;\n        }\n\n        let item = {\n            key: key + prop.name,\n            className: 'console-form-item console-form-item-' + (this.itemIndex++ % 2 === 0 ? 'odd' : 'even'),\n            label: prop.label\n        };\n        if (prop.type && prop.type.startsWith('read-only')) {\n            items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n        } else if (prop.type === 'image') {\n            items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'file') {\n            items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'folder') {\n            items.push(<Form.Item {...item}><Folder name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'dselect') {\n            items.push(<Form.Item {...item}><DSelect body={this.props.body} uri={this.props.uri} {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n        } else if (prop.type === 'refresh') {\n            items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n        } else if (prop.type === 'editor') {\n            items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'html') {\n            items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n        } else if (prop.type === 'agreement') {\n            let value = this.state[prop.agreement] || { uri: '', name: '' };\n            if (value) {\n                let label = value.name;\n                let index = label.lastIndexOf('.');\n                if (index > -1) label = label.substring(0, index);\n                item.className += ' console-form-agreement';\n                item.label = 'agreement';\n                items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n            }\n        } else if (prop.type === 'category') {\n            let list = prop.category;\n            if (!list && this.props.parameter && this.props.parameter.key)\n                list = this.props.parameter.key;\n            items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n        } else if (prop.type === 'user') {\n            items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n        } else {\n            if (prop.type === 'switch')\n                item.valuePropName = 'checked';\n            items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n        }\n    }\n\n    plus = (prop) => {\n        let obj = {};\n        for (let child of prop.children)\n            obj[child.name] = '';\n        let data = toArray(this.state[prop.name]);\n        data.push(obj);\n        let state = {};\n        state[prop.name] = data;\n        this.setState(state);\n    }\n\n    move = (prop, length, from, to) => {\n        let state = {};\n        for (let child of prop.children) {\n            if (from < to) {\n                for (let i = 0; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                for (let i = from; i < to; i++)\n                    this.moveCopy(prop, child, state, i + 1, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n            else {\n                for (let i = 0; i < to; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i + 1);\n                for (let i = from + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n        }\n        this.setState(state, () => this.form.current.setFieldsValue(state));\n    }\n\n    moveCopy = (prop, child, state, source, target) => {\n        let value = this.state[prop.name + ':' + child.name + ':' + source];\n        if (value || value === 0)\n            state[prop.name + ':' + child.name + ':' + target] = value;\n    }\n\n    remove = (prop, index) => {\n        let array = toArray(this.state[prop.name]);\n        array[index] = null;\n        let state = {};\n        state[prop.name] = array;\n        this.setState(state);\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file')\n            return <File name={prop.name} upload={prop.upload} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: '' + toInt(index, 0) });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            if (prop.values instanceof Array) {\n                for (let value of prop.values)\n                    options.push({ label: value, value: value });\n            }\n            else if (prop.values instanceof Object) {\n                let keys = Object.keys(prop.values);\n                for (let index in keys) {\n                    let key = keys[index];\n                    options.push({ label: prop.values[key] || key, value: key });\n                }\n            }\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={prop.time || true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        if (prop.type === 'auto-complete') return <AutoComplete options={this.state['auto-complete:' + prop.name]} />\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => {\n        let data = { ...this.state, ...values }\n        for (let prop of this.props.meta.props) {\n            if (prop.type === 'array') {\n                let labels = {};\n                for (let child of prop.children)\n                    if (child.labels)\n                        labels[child.name] = true;\n\n                let array = [];\n                let state = toArray(this.state[prop.name]);\n                for (let key in data) {\n                    if (data[key] === undefined) {\n                        delete data[key];\n\n                        continue;\n                    }\n\n                    if (key.indexOf(prop.name) > -1) {\n                        let ks = key.split(':');\n                        let index = toInt(ks[2]);\n                        if (state[index] === null) {\n                            delete data[key];\n\n                            continue;\n                        }\n\n                        let obj = array[index] || {};\n                        obj[ks[1]] = labels[ks[1]] ? toInt(data[key]) : data[key];\n                        delete data[key];\n                        array[index] = obj;\n                    }\n                }\n                let arr = [];\n                for (let obj of array)\n                    if (obj)\n                        arr.push(obj);\n                data[prop.name] = JSON.stringify(arr);\n            }\n        }\n\n        return service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...data, ...this.props.parameter });\n    }\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const toArray = text => {\n    if (!text)\n        return [];\n\n    if (typeof (text) === 'object')\n        return text;\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;"],"sourceRoot":""}