{"version":3,"sources":["console/numeric.js","json.js","console/dselect.jsx","console/category.jsx","http.js","console/user.jsx","console/grid.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/meta.js"],"names":["toMoney","value","empty","parseInt","toFixed","e","fromMoney","Math","round","parseFloat","toPercent","fromPercent","length","trim","substring","toArray","text","array","JSON","parse","Array","DSelect","props","componentDidMount","search","focus","parameter","i","name","form","service","then","data","options","list","option","label","vname","lname","indexOf","eval","push","setState","filter","input","toLowerCase","change","render","showSearch","onFocus","onSearch","filterOption","onChange","state","dlname","replace","React","Component","Category","format","target","source","category","element","title","id","children","treeData","treeDefaultExpandedKeys","key","pointTo","uri","body","post","json","code","message","success","warn","fetch","method","headers","header","stringify","response","loader","loading","ok","status","statusText","psid","url","localStorage","getItem","random","toString","setItem","User","uids","className","portrait","map","uid","line","src","auth","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","style","prop","condition","button","op","onClick","operate","bind","action","reload","searches","document","createElement","display","onchange","files","reader","FileReader","file","onload","result","upload","fileName","contentType","base64","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","window","location","href","parent","preview","currentTarget","cancel","switch","check","param","pagination","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","createRef","Search","grid","hidden","imgs","img","rel","s","defaultChecked","disabled","dataIndex","ops","mops","when","items","Item","overlay","cols","initialValues","item","span","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","f","UploadOutlined","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","setFieldsValue","moment","join","submit","startsWith","icon","SyncOutlined","refresh","valuePropName","PaperClipOutlined","mode","allowClear","showTime","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","Setting","kvs","kv","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","Promise","resolve","reject","full","sub","ps","fn"],"mappings":"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","file":"static/js/main.0ddd247a.chunk.js","sourcesContent":["const toMoney = function (value, empty) {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = function (value) {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = function (value) {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = function (value) {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent\n};","const toArray = text => {\n    if (!text)\n        return [];\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        let dlname = props.dlname || this.lname;\n\n        let options = [];\n        if (props.value && props.data) {\n            let option = { value: props.value, label: props.value };\n            if (dlname) {\n                if (dlname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('option.label=' + dlname.replace(/option/g, 'props.data'));\n                else\n                    option.label = props.data[dlname];\n            }\n            options.push(option);\n        }\n        this.state = {\n            options: options,\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        }\n        service(this.props.service, { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname) {\n                    if (this.lname.indexOf('+') > -1)\n                        // eslint-disable-next-line\n                        eval('label=' + this.lname);\n                    else\n                        label = option[this.lname];\n                }\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({\n                options: options\n            });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.portrait()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    portrait = () => {\n        if (!this.props.data.portrait)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.portrait)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport DSelect from './dselect';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = <Search key=\"search\" props={this.searchProps} toolbar={props.meta.toolbar} grid={this} form={this.form} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    if (mops.length <= 2) {\n                        for (let op of mops) {\n                            if (ops.length > 0) ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                            ops.push(this.action(op, model));\n                        }\n                    } else {\n                        ops.push(this.action(mops[0], model));\n                        ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                        let items = [];\n                        for (let i = 1; i < mops.length; i++) {\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        }\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.state = {\n            list: [],\n            pagination: false,\n            preview: null\n        };\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'dselect')\n            return <DSelect list={column.list} parameter={column.parameter} name={column.name} vname={column.vname} lname={column.lname} form={this} />;\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, service } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n\n        let reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result || typeof reader.result !== 'string') {\n                return;\n            }\n\n            service('/photon/ctrl/upload', {\n                name: this.props.upload,\n                fileName: uploader.file.name,\n                contentType: uploader.file.type,\n                base64: reader.result.substring(reader.result.indexOf(',') + 1)\n            }).then(data => {\n                if (data === null) return;\n\n                let uri = this.state.changed ? this.state.uri : this.props.value;\n                uri = uri ? (uri + ',' + data.path) : data.path;\n                this.setState({\n                    uri: uri,\n                    changed: true,\n                    loading: false\n                }, () => {\n                    this.props.form.value(this.props.name, this.state.uri)\n                });\n            });\n        };\n        reader.readAsDataURL(uploader.file);\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, service } from '../http';\nimport { toArray } from '../json';\n\nclass File extends React.Component {\n    state = {\n        list: null,\n        loading: false\n    }\n\n    upload = uploader => {\n        this.setState({ loading: true });\n\n        let reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result || typeof reader.result !== 'string') {\n                return;\n            }\n\n            service('/photon/ctrl/upload', {\n                name: this.props.upload,\n                fileName: uploader.file.name,\n                contentType: uploader.file.type,\n                base64: reader.result.substring(reader.result.indexOf(',') + 1)\n            }).then(data => {\n                this.setState({ loading: false });\n                if (data === null) return;\n\n                if (!data.success) {\n                    message.warn(data.message);\n\n                    return\n                }\n\n                let list = this.list();\n                list.push({\n                    uid: '' + list.length,\n                    name: data.fileName,\n                    uri: data.path,\n                    url: url(data.path),\n                    status: 'done'\n                });\n                this.setState({ list: list }, this.value);\n            });\n        };\n        reader.readAsDataURL(uploader.file);\n    }\n\n    remove = file => {\n        let list = [];\n        for (let f of this.list())\n            if (f.uid !== file.uid)\n                list.push(f);\n        this.setState({ list: list }, this.value);\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            list.push({\n                name: file.name,\n                uri: file.uri\n            });\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n\n    render = () => {\n        return (\n            <Upload fileList={this.list()} customRequest={this.upload} onRemove={this.remove}>\n                {this.state.loading ? <Button disabled={true}><LoadingOutlined /> 上传中</Button> : <Button><UploadOutlined /> 上传</Button>}\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { PaperClipOutlined, SyncOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + value;\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1;\n            else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let item = {\n                key: prop.name,\n                className: 'console-form-item console-form-item-' + (items.length % 2 === 0 ? 'even' : 'odd'),\n                label: prop.label\n            };\n            if (prop.type && prop.type.startsWith('read-only')) {\n                items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n            } else if (prop.type === 'image') {\n                items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'file') {\n                items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'dselect') {\n                items.push(<Form.Item {...item}><DSelect {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n            } else if (prop.type === 'refresh') {\n                items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n            } else if (prop.type === 'editor') {\n                items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'html') {\n                items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n            } else if (prop.type === 'agreement') {\n                let value = this.state[prop.agreement] || { uri: '', name: '' };\n                if (value) {\n                    let label = value.name;\n                    let index = label.lastIndexOf('.');\n                    if (index > -1) label = label.substring(0, index);\n                    item.className += ' console-form-agreement';\n                    item.label = 'agreement';\n                    items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n                }\n            } else if (prop.type === 'category') {\n                let list = prop.category;\n                if (!list && this.props.parameter && this.props.parameter.key)\n                    list = this.props.parameter.key;\n                items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n            } else if (prop.type === 'user') {\n                items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n            } else {\n                if (prop.type === 'switch')\n                    item.valuePropName = 'checked';\n                items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n            }\n        }\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file') {\n            let files = [];\n            try {\n                for (let file of toArray(value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: index });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            let keys = Object.keys(prop.values);\n            for (let index in keys)\n                options.push({ label: prop.values[keys[index]], value: keys[index] });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/list', { key: this.key() }).then(data => {\n        if (data === null) return null;\n\n        let kvs = {};\n        for (let kv of data) {\n            kvs[kv.key] = kv.value;\n        }\n\n        return kvs;\n    });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.portrait ? <Avatar src={url(this.props.user.portrait)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;"],"sourceRoot":""}