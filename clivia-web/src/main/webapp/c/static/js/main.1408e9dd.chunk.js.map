{"version":3,"sources":["console/meta.js","http.js","console/category.jsx","console/user.jsx","console/grid.jsx","console/dselect.jsx","console/dashboard.jsx","console/image.jsx","console/upload.jsx","console/file.jsx","console/folder.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/numeric.js","json.js"],"names":["meta","get","uri","key","substring","lastIndexOf","map","Promise","resolve","reject","service","then","data","props","full","sub","ps","s","fn","f","name","push","this","body","post","json","code","message","success","warn","fetch","method","headers","header","JSON","stringify","response","loader","setState","loading","localStorage","removeItem","ok","status","statusText","upload","file","psid","FormData","append","url","indexOf","getItem","length","Math","random","toString","setItem","Category","format","target","source","category","element","title","value","id","children","change","form","render","treeData","state","list","treeDefaultExpandedKeys","onChange","pointTo","React","Component","User","uids","className","avatar","uid","line","src","auth","i","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","dselect","prop","maxlen","onClick","more","bind","style","eval","condition","e","button","op","operate","action","parent","parameter","load","reload","search","searches","input","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","removeChild","current","pageNum","readAsDataURL","appendChild","click","page","href","encodeURIComponent","window","open","location","ids","delete","preview","currentTarget","cancelPreview","lv","cancelMore","cancelDelete","okDelete","switch","check","param","pagination","timeout","clearTimeout","pageSize","interval","setTimeout","Array","number","count","size","total","showTotal","range","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","Search","toolbar","grid","columns","dataSource","rowKey","scroll","visible","footer","onCancel","width","alt","moreContent","onOk","deleteContent","freeze","x","height","querySelector","clientHeight","rows","floor","y","v","items","span","componentWillUnmount","createRef","hidden","Object","vs","toMoney","empty","toPercent","imgs","img","toArray","rel","defaultChecked","disabled","options","vname","lname","d","option","lines","ops","mops","when","opsize","Item","overlay","cols","initialValues","item","htmlType","ref","onFinish","finish","gutter","index","Group","keys","showSearch","filterOption","filter","compact","noStyle","initValue","toLowerCase","DSelect","componentDidMount","focus","onFocus","onSearch","Dashboard","cards","card","statistic","pie","xField","yField","seriesField","series","isGroup","config","colorField","angleField","radius","content","annulus","innerRadius","j","mt","dataIndex","Image","changed","remove","uploader","path","thumbnail","cancel","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","UploadSupport","replace","exists","File","PaperClipOutlined","progress","strokeColor","strokeWidth","percent","parseFloat","toFixed","UploadOutlined","Folder","addonAfter","FolderOutlined","select","getElementById","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","binds","setFieldsValue","toInt","k","moment","fromMoney","fromPercent","join","submit","itemIndex","is","child","c","parse","editable","startsWith","fix","move","VerticalAlignTopOutlined","ArrowUpOutlined","ArrowDownOutlined","VerticalAlignBottomOutlined","DeleteOutlined","plus","icon","SyncOutlined","refresh","valuePropName","obj","from","to","moveCopy","mode","allowClear","showTime","time","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","undefined","ks","arr","Setting","kvs","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","parseInt","round","trim","text"],"mappings":"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","file":"static/js/main.1408e9dd.chunk.js","sourcesContent":["import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => {\n    if (uri.indexOf('://') > -1)\n        return uri;\n\n    return root + uri;\n}\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div key={uid} className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined, DashOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null,\n            more: null,\n            delete: null,\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = true;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.format(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values) {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (typeof (prop.values) !== 'string') {\n                        if (prop.multiple) {\n                            value = '';\n                            for (let v of value.split(',')) {\n                                if (prop.values instanceof Object)\n                                    value += ',' + prop.values[value];\n                                else if (prop.values instanceof Array)\n                                    for (let vs of prop.values)\n                                        if (vs.value === v)\n                                            value += ',' + vs.label;\n                            }\n                            if (value.length > 0) value = value.substring(1);\n                        } else {\n                            if (prop.values instanceof Object)\n                                value = prop.values[value];\n                            else if (prop.values instanceof Array) {\n                                for (let v of prop.values) {\n                                    if (v.value === value) {\n                                        value = v.label;\n\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return this.format(prop, model, value);\n                };\n            } else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.format(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.format(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.format(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.format(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.format(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.format(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.format(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(props.body.uri(props.uri, prop.service), prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data.list || data) {\n                        let option = d;\n                        if (lname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + lname);\n                        else\n                            option.label = d[lname];\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.format(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'password')\n                column.render = model => this.format(prop, model, '***');\n            else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.format(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.format(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.type === 'multi-line') {\n                column.render = model => {\n                    let lines = [];\n                    for (let line of meta.props(props.props, prop.lines)) {\n                        let value = this.value(model, line.name);\n                        if (!value && value !== 0)\n                            continue;\n\n                        if (line.labels)\n                            value = line.labels[value];\n                        else if (line.values && !(line.values instanceof Array))\n                            value = line.values[value];\n                        else if (line.type === 'money' || line.type === 'read-only:money')\n                            value = toMoney(value);\n                        else if (line.type === 'percent' || line.type === 'read-only:percent')\n                            value = toPercent(value);\n                        lines.push(<div key={'line:' + model.id + ':' + line.name}>{line.label} : {this.format(line, model, value)}</div>);\n                    }\n\n                    return lines;\n                }\n            }\n            else\n                column.render = model => this.format(prop, model, this.value(model, prop.name));\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    let opsize = [2];\n                    if (props.meta.opsize) {\n                        if (props.meta.opsize.length > 0)\n                            opsize[0] = props.meta.opsize[0];\n                        if (props.meta.opsize.length > 1)\n                            opsize[1] = props.meta.opsize[1];\n                    }\n                    if (opsize.length < 2)\n                        opsize[1] = 2;\n                    if (mops.length <= opsize[0]) {\n                        for (let i in mops) {\n                            if (i > 0) ops.push(i % opsize[1] === 0 ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                            ops.push(this.action(mops[i], model));\n                        }\n                    } else {\n                        opsize[0]--;\n                        for (let i = 0; i < opsize[0]; i++) {\n                            ops.push(this.action(mops[i], model));\n                            ops.push(i > 0 && (i % opsize[1] === 0) ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                        }\n                        let items = [];\n                        for (let i = opsize[0]; i < mops.length; i++)\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    format = (prop, model, element) => {\n        let maxlen = prop.maxlen || 64;\n        if (element && typeof (element) === 'string' && element.length && element.length > maxlen)\n            element = <div>{element.substring(0, maxlen)}<span className=\"console-grid-more\" onClick={this.more.bind(this, { label: prop.label, value: element })}><DashOutlined /></span></div>;\n\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            let data = model && model.id ? { parent: model.id } : {};\n            if (op.parameter) data = { ...data, ...op.parameter };\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, data);\n\n            return;\n        }\n\n        if (op.type === 'delete') {\n            this.setState({\n                delete: {\n                    op: op,\n                    model: model,\n                }\n            });\n\n            return;\n        }\n\n        if (op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            let href = this.props.body.uri(this.props.uri, op.service || op.type);\n            if (model && model.id) href += '?id=' + model.id;\n            else {\n                let values = this.searches();\n                for (let key in values) {\n                    let value = values[key];\n                    if (!value)\n                        continue;\n\n                    href += href.indexOf('?') === -1 ? '?' : '&';\n                    href += key + '=' + encodeURIComponent(value);\n                }\n            }\n            window.open('about:blank').location.href = href;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancelPreview = () => this.setState({ preview: null });\n\n    more = lv => this.setState({ more: lv });\n\n    cancelMore = () => this.setState({ more: null });\n\n    cancelDelete = () => this.setState({ delete: null });\n\n    okDelete = () => {\n        this.reload(this.state.delete.op, this.state.delete.model, {});\n        this.setState({ delete: null });\n    }\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = (pagination, search) => {\n        if (this.timeout)\n            window.clearTimeout(this.timeout);\n\n        let parameter = this.searches();\n        if (pagination) {\n            parameter.pageSize = pagination.pageSize;\n            parameter.pageNum = pagination.current;\n        }\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        if (search)\n            parameter['console-grid-search'] = true;\n        service(this.props.uri, parameter).then(data => {\n            if (this.props.meta.interval)\n                this.timeout = window.setTimeout(this.load, this.props.meta.interval * 1000);\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number,\n                            showTotal: (total, range) => {\n                                return range[0] + '-' + range[1] + ' 共' + total + '条';\n                            },\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(<Search key=\"search\" props={this.searchProps} toolbar={this.props.meta.toolbar} grid={this} form={this.form} dselect={this.state.dselect} />);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" scroll={this.scroll()} />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancelPreview} >\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n        elements.push(\n            <Modal key=\"more\" visible={this.state.more} title={this.state.more ? this.state.more.label : ''} onCancel={this.cancelMore} footer={null}>\n                {this.moreContent()}\n            </Modal>\n        );\n        elements.push(\n            <Modal key=\"delete\" visible={this.state.delete} title={this.state.delete ? this.state.delete.op.label : ''} onCancel={this.cancelDelete} onOk={this.okDelete}>\n                {this.deleteContent()}\n            </Modal>\n        );\n\n        return elements;\n    }\n\n    scroll = () => {\n        if (!this.props.meta.freeze)\n            return { x: true };\n\n        let height = document.querySelector('.console-body').clientHeight;\n        let form = document.querySelector('.console-grid-search-form');\n        if (form)\n            height -= form.clientHeight;\n        let rows = Math.floor(height / 55 - 2.5);\n        let len = this.state.list ? this.state.list.length : 0;\n\n        if (len < rows)\n            return { x: true };\n\n        return { x: true, y: 55 * rows };\n    }\n\n    moreContent = () => {\n        if (!this.state.more || !this.state.more.value) return '';\n\n        if (this.state.more.value.indexOf('\\n') === -1) return this.state.more.value;\n\n        let values = [];\n        let key = 0;\n        for (let v of this.state.more.value.split('\\n'))\n            values.push(<div key={'more:' + (key++)}>{v}</div>);\n\n        return values;\n    }\n\n    deleteContent = () => {\n        if (!this.state.delete) return null;\n\n        let items = [];\n        for (let prop of this.props.props) {\n            let value = this.state.delete.model[prop.name];\n            if (prop.labels) value = prop.labels[value];\n            else if (prop.type === 'dselect')\n                value = this.dselect(prop, this.state.delete.model);\n            items.push(<Row key={prop.name}>\n                <Col span={6}>{prop.label}</Col>\n                <Col span={18}>{value}</Col>\n            </Row>);\n        }\n\n        return items;\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout)\n            window.clearTimeout(this.timeout);\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels || column.values || column.type === 'dselect') initialValues[column.name] = column.value || '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            if (column.values instanceof Array) {\n                for (let value of column.values)\n                    options.push(value);\n            } else if (column.values instanceof Object) {\n                let keys = Object.keys(column.values);\n                for (let index in keys) {\n                    let key = keys[index];\n                    options.push({ label: column.values[key] || key, value: key });\n                }\n            } else if (typeof (column.values) === 'string') {\n                for (let value of column.values.split(','))\n                    options.push({ label: value, value: value });\n            }\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'dselect') {\n            let options = [{ label: '全部', value: '' }];\n            let values = this.props.dselect[column.name];\n            if (values) {\n                for (let key in values)\n                    options.push({ label: values[key], value: key });\n            }\n\n            return <Select showSearch={true} options={options} filterOption={this.filter} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    value = (name, value) => {\n    }\n\n    finish = () => {\n        this.props.grid.load(null, true);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.form)\n            props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        this.state = {\n            options: [],\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        } else\n            parameter.value = value;\n        service(this.props.body.uri(this.props.uri, this.props.service), { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('label=' + this.lname);\n                else\n                    label = option[this.lname];\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({ options });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { Line, Column, Pie } from '@ant-design/charts';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            case 'line':\n                return this.line(card);\n            case 'column':\n                return this.column(card);\n            case 'pie':\n                return this.pie(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    line = card => {\n        return <Line xField={card.meta.x || 'x'} yField={card.meta.y || 'y'} seriesField={card.meta.series || 'series'} data={this.state[card.key] || {}} />;\n    }\n\n    column = card => {\n        return <Column xField={card.meta.x || 'x'} yField={card.meta.y || 'y'} seriesField={card.meta.series || 'series'} isGroup={true} data={this.state[card.key] || {}} />;\n    }\n\n    pie = card => {\n        let config = {\n            colorField: card.meta.name || 'name',\n            angleField: card.meta.value || 'value',\n            radius: 0.8,\n            label: {\n                type: 'outer',\n                content: '{name} {percentage}'\n            }\n        };\n        if (card.annulus)\n            config.innerRadius = 0.6;\n\n        return <Pie {...config} data={this.state[card.key] || {}} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            let path = data.thumbnail || data.path;\n            uri = uri ? (uri + ',' + path) : path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { message } from 'antd';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass UploadSupport extends React.Component {\n    action = url('/photon/ctrl-http/upload');\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            this.changed(file, true);\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.changed(file, true);\n                this.value();\n\n                return;\n            }\n\n            this.changed(file, false);\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            this.changed(file, false);\n            this.value();\n\n            return;\n        }\n    }\n\n    changed = (file, replace) => {\n        let list = [];\n        let exists = false;\n        for (let f of this.list()) {\n            if (f.uid === file.uid) {\n                exists = true;\n                if (replace)\n                    list.push(file);\n\n                continue;\n            }\n\n            list.push(f);\n        }\n        if (!exists)\n            list.push(file);\n        this.setState({ list });\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                if (file.response.thumbnail)\n                    file.thumbnail = file.response.thumbnail;\n                file.url = url(file.uri);\n            }\n            let f = {\n                name: file.name,\n                uri: file.uri\n            };\n            if (file.thumbnail)\n                f.thumbnail = file.thumbnail;\n            list.push(f);\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n}\n\nexport default UploadSupport;","import React from 'react';\nimport { Upload, Button } from 'antd';\nimport { PaperClipOutlined, UploadOutlined } from '@ant-design/icons';\nimport UploadSupport from './upload';\nimport { toArray } from '../json';\nimport { url } from '../http';\n\nclass File extends UploadSupport {\n    state = {\n        list: null\n    }\n\n    render = () => {\n        if (this.props.readonly) {\n            let files = [];\n            try {\n                for (let file of toArray(this.props.value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        let props = {\n            action: this.action,\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { Input } from 'antd';\nimport { FolderOutlined } from '@ant-design/icons';\n\nclass Folder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value\n        };\n    }\n\n    render = () => [\n        <div key={this.props.name + ':file'} className=\"console-form-folder\"><input type=\"file\" id={this.props.name + ':file'} multiple={false} onChange={this.change} /></div>,\n        <Input key={this.props.name + ':input'} addonAfter={<FolderOutlined onClick={this.select} />} value={this.state.value} />\n    ];\n\n    select = () => {\n        document.getElementById(this.props.name + ':file').click();\n    }\n\n    change = (e) => {\n        if (!e || !e.target || !e.target.files || e.target.files.length === 0) return;\n\n        let path = e.target.files[0].path;\n        if (!path) return;\n\n        path = path.substring(0, path.lastIndexOf(e.target.files[0].name));\n        this.props.form.value(this.props.name, path);\n        this.setState({\n            value: path\n        });\n    }\n}\n\nexport default Folder;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, AutoComplete, Input, Button, message } from 'antd';\nimport { SyncOutlined, VerticalAlignTopOutlined, ArrowUpOutlined, ArrowDownOutlined, VerticalAlignBottomOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent, toInt } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport Folder from './folder';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n        this.binds = {};\n        this.itemIndex = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'auto-complete' && prop.service && prop.vname) {\n                service(prop.service, prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = [];\n                    for (let d of data.list || data)\n                        options.push({ value: d[prop.vname] });\n                    let state = {};\n                    state['auto-complete:' + prop.name] = options;\n                    this.setState(state);\n                });\n            }\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n\n            if (prop.bind && prop.service) {\n                if (!this.binds[prop.bind])\n                    this.binds[prop.bind] = [];\n                this.binds[prop.bind].push({ name: prop.name, service: prop.service });\n            }\n        }\n\n        for (let name in this.binds)\n            this.change({ name: name }, { 'target': { 'value': this.state[name] } });\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + toInt(value, 0);\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (prop.type === 'array' || prop.type === 'read-only:array') {\n                let array = toArray(value);\n                for (let i = 0; i < array.length; i++)\n                    for (let k in array[i])\n                        values[prop.name + ':' + k + ':' + i] = '' + array[i][k];\n            } else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.labels)\n                values[prop.name] = toInt(value);\n            else if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        this.itemIndex = 0;\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props))\n            this.item(items, prop, '');\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    item = (items, prop, key) => {\n        if (prop.type === 'array' || prop.type === 'read-only:array') {\n            let is = [];\n            let array = toArray(this.state[prop.name]);\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] === null)\n                    continue;\n\n                is.push(<div key={prop.name + ':divider:' + i} className=\"console-form-children-divider\" />);\n                for (let child of prop.children) {\n                    let c = JSON.parse(JSON.stringify(child));\n                    c.name = prop.name + ':' + c.name + ':' + i;\n                    if (prop.type === 'read-only:array' || (prop.editable === 'last' && i < array.length - 1)) {\n                        if (c.type) {\n                            if (!c.type.startsWith('read-only'))\n                                c.type = 'read-only:' + c.type;\n                        } else\n                            c.type = 'read-only';\n                    }\n                    this.item(is, c, prop.name + ':');\n                }\n                if (!prop.fix) {\n                    is.push(\n                        <div key={prop.name + ':toolbar:' + i} className=\"console-form-children-toolbar\">\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, 0)}><VerticalAlignTopOutlined /></div> : null}\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, i - 1)}><ArrowUpOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, i + 1)}><ArrowDownOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, array.length - 1)}><VerticalAlignBottomOutlined /></div> : null}\n                            <div onClick={this.remove.bind(this, prop, i)}><DeleteOutlined /></div>\n                        </div>\n                    );\n                }\n            }\n            items.push(\n                <div key={prop.name} className=\"console-form-children\">\n                    <div className=\"console-form-children-title\">{prop.label}</div>\n                    {is}\n                    {prop.fix ? null : <div className=\"console-form-children-divider\" />}\n                    {prop.fix ? null : <div className=\"console-form-children-plus\"><Button onClick={this.plus.bind(this, prop)}><PlusOutlined /></Button></div>}\n                </div>\n            );\n            this.itemIndex++;\n\n            return;\n        }\n\n        let item = {\n            key: key + prop.name,\n            className: 'console-form-item console-form-item-' + (this.itemIndex++ % 2 === 0 ? 'odd' : 'even'),\n            label: prop.label\n        };\n        if (prop.type && prop.type.startsWith('read-only')) {\n            items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n        } else if (prop.type === 'image') {\n            items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'file') {\n            items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'folder') {\n            items.push(<Form.Item {...item}><Folder name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'dselect') {\n            items.push(<Form.Item {...item}><DSelect body={this.props.body} uri={this.props.uri} {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n        } else if (prop.type === 'refresh') {\n            items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n        } else if (prop.type === 'editor') {\n            items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'html') {\n            items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n        } else if (prop.type === 'agreement') {\n            let value = this.state[prop.agreement] || { uri: '', name: '' };\n            if (value) {\n                let label = value.name;\n                let index = label.lastIndexOf('.');\n                if (index > -1) label = label.substring(0, index);\n                item.className += ' console-form-agreement';\n                item.label = 'agreement';\n                items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n            }\n        } else if (prop.type === 'category') {\n            let list = prop.category;\n            if (!list && this.props.parameter && this.props.parameter.key)\n                list = this.props.parameter.key;\n            items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n        } else if (prop.type === 'user') {\n            items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n        } else {\n            if (prop.type === 'switch')\n                item.valuePropName = 'checked';\n            items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n        }\n    }\n\n    plus = (prop) => {\n        let obj = {};\n        for (let child of prop.children)\n            obj[child.name] = '';\n        let data = toArray(this.state[prop.name]);\n        data.push(obj);\n        let state = {};\n        state[prop.name] = data;\n        this.setState(state);\n    }\n\n    move = (prop, length, from, to) => {\n        let state = {};\n        for (let child of prop.children) {\n            if (from < to) {\n                for (let i = 0; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                for (let i = from; i < to; i++)\n                    this.moveCopy(prop, child, state, i + 1, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n            else {\n                for (let i = 0; i < to; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i + 1);\n                for (let i = from + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n        }\n        this.setState(state, () => this.form.current.setFieldsValue(state));\n    }\n\n    moveCopy = (prop, child, state, source, target) => {\n        let value = this.state[prop.name + ':' + child.name + ':' + source];\n        if (value || value === 0)\n            state[prop.name + ':' + child.name + ':' + target] = value;\n    }\n\n    remove = (prop, index) => {\n        let array = toArray(this.state[prop.name]);\n        array[index] = null;\n        let state = {};\n        state[prop.name] = array;\n        this.setState(state);\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file')\n            return <File name={prop.name} upload={prop.upload} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        if (!value)\n            return '';\n\n        if (typeof value !== 'string' || value.indexOf('\\n') === -1)\n            return value;\n\n        let values = [];\n        let key = 0;\n        for (let v of value.split('\\n'))\n            values.push(<div key={'readonly:' + prop.name + ':' + (key++)}>{v}</div>);\n\n        return values;\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: '' + toInt(index, 0) });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} onChange={this.change.bind(this, prop)} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            if (prop.values instanceof Array) {\n                for (let value of prop.values)\n                    options.push(value);\n            } else if (prop.values instanceof Object) {\n                let keys = Object.keys(prop.values);\n                for (let index in keys) {\n                    let key = keys[index];\n                    options.push({ label: prop.values[key] || key, value: key });\n                }\n            } else if (typeof (prop.values) === 'string') {\n                for (let value of prop.values.split(','))\n                    options.push({ label: value, value: value });\n            }\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={prop.time || true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        if (prop.type === 'auto-complete') return <AutoComplete options={this.state['auto-complete:' + prop.name]} />\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.state.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    change = (prop, e) => {\n        let binds = this.binds[prop.name];\n        if (!binds) return;\n\n        for (let bind of binds) {\n            let param = {};\n            param[prop.name] = e.target.value;\n            service(this.props.body.uri(this.props.uri, bind.service), param).then(data => {\n                if (data === null) return;\n\n                let state = {};\n                state[bind.name] = data;\n                this.setState(state);\n            });\n        }\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => {\n        let data = { ...this.state, ...values }\n        for (let prop of this.props.meta.props) {\n            if (prop.type === 'array') {\n                let labels = {};\n                for (let child of prop.children)\n                    if (child.labels)\n                        labels[child.name] = true;\n\n                let array = [];\n                let state = toArray(this.state[prop.name]);\n                for (let key in data) {\n                    if (data[key] === undefined) {\n                        delete data[key];\n\n                        continue;\n                    }\n\n                    if (key.indexOf(prop.name) > -1) {\n                        let ks = key.split(':');\n                        let index = toInt(ks[2]);\n                        if (state[index] === null) {\n                            delete data[key];\n\n                            continue;\n                        }\n\n                        let obj = array[index] || {};\n                        obj[ks[1]] = labels[ks[1]] ? toInt(data[key]) : data[key];\n                        delete data[key];\n                        array[index] = obj;\n                    }\n                }\n                let arr = [];\n                for (let obj of array)\n                    if (obj)\n                        arr.push(obj);\n                data[prop.name] = JSON.stringify(arr);\n            }\n        }\n\n        return service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...data, ...this.props.parameter });\n    }\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const toMoney = (value, empty) => {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = value => {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = value => {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = value => {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toInt = (value, defaultValue) => {\n    if (!value) return defaultValue;\n\n    try {\n        return parseInt(value);\n    } catch (e) {\n        return defaultValue;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent,\n    toInt\n};","const toArray = text => {\n    if (!text)\n        return [];\n\n    if (typeof (text) === 'object')\n        return text;\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}"],"sourceRoot":""}