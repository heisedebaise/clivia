{"version":3,"sources":["json.js","http.js","console/dselect.jsx","console/category.jsx","console/user.jsx","console/grid.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/meta.js","console/numeric.js"],"names":["toArray","text","array","JSON","parse","Array","e","service","uri","body","post","then","json","code","message","success","data","warn","fetch","method","headers","header","stringify","response","loader","setState","loading","ok","status","statusText","psid","url","localStorage","getItem","length","Math","random","toString","substring","setItem","DSelect","props","filter","input","option","children","toLowerCase","indexOf","change","value","form","name","render","showSearch","filterOption","onChange","state","list","map","Option","key","vname","lname","parameter","React","Component","Category","format","target","source","category","element","title","id","push","treeData","treeDefaultExpandedKeys","pointTo","User","uids","className","portrait","uid","line","src","auth","i","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","style","prop","eval","condition","button","op","onClick","operate","bind","action","reload","serviceReload","document","createElement","display","onchange","files","reader","FileReader","file","onload","result","upload","fileName","contentType","base64","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","window","location","href","parent","preview","currentTarget","cancel","switch","check","param","pagination","searchValues","number","count","size","total","pageSize","meta","info","elements","dangerouslySetInnerHTML","__html","search","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","Search","grid","hidden","column","toMoney","empty","toPercent","imgs","img","rel","s","defaultChecked","disabled","dataIndex","ops","mops","when","items","Item","overlay","cols","initialValues","item","span","htmlType","onFinish","finish","gutter","options","index","Group","keys","Object","compact","noStyle","initValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","f","UploadOutlined","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","componentDidMount","agreement","getFieldsValue","setFieldsValue","moment","fromMoney","fromPercent","join","submit","startsWith","icon","SyncOutlined","refresh","valuePropName","ref","PaperClipOutlined","mode","allowClear","showTime","permit","TextArea","Password","buttons","one","createRef","Normal","Setting","kvs","kv","replace","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","Promise","resolve","reject","full","sub","ps","fn","parseInt","toFixed","round","parseFloat","trim"],"mappings":"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","file":"static/js/main.cf8bae4b.chunk.js","sourcesContent":["const toArray = text => {\n    if (!text)\n        return [];\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        props.form.value(props.name, props.value);\n        service(props.list, props.parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: data,\n                value: props.value\n            });\n        });\n    }\n\n    filter = (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} filterOption={this.filter} onChange={this.change} value={this.state.value}>{this.state.list.map(option => <Select.Option key={option[this.vname]} value={option[this.vname]}>{option[this.lname]}</Select.Option>)}</Select>;\n}\n\nexport default DSelect;","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.portrait()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    portrait = () => {\n        if (!this.props.data.portrait)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.portrait)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport DSelect from './dselect';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.search = <Search key=\"search\" props={meta.props(columns, props.meta.search)} toolbar={props.meta.toolbar} grid={this} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    if (mops.length <= 2) {\n                        for (let op of mops) {\n                            if (ops.length > 0) ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                            ops.push(this.action(op, model));\n                        }\n                    } else {\n                        ops.push(this.action(mops[0], model));\n                        ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                        let items = [];\n                        for (let i = 1; i < mops.length; i++) {\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        }\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.state = {\n            list: [],\n            pagination: false,\n            preview: null\n        };\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.serviceReload(op, model, {});\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.serviceReload(op, model, parameter);\n    }\n\n    serviceReload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = {};\n        if (this.searchValues) {\n            parameter = { ...parameter, ...this.searchValues };\n        }\n        if (pagination) {\n            parameter.pageNum = pagination.current;\n        }\n        if (this.props.parameter) {\n            parameter = { ...parameter, ...this.props.parameter };\n        }\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    values = {};\n\n    value = (name, value) => this.values[name] = value;\n\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'dselect')\n            return <DSelect list={column.list} parameter={column.parameter} name={column.name} vname={column.vname} lname={column.lname} form={this} />;\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    finish = values => {\n        for (let column of this.props.props) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n        this.props.grid.searchValues = { ...values, ...this.values };\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, service } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n\n        let reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result || typeof reader.result !== 'string') {\n                return;\n            }\n\n            service('/photon/ctrl/upload', {\n                name: this.props.upload,\n                fileName: uploader.file.name,\n                contentType: uploader.file.type,\n                base64: reader.result.substring(reader.result.indexOf(',') + 1)\n            }).then(data => {\n                if (data === null) return;\n\n                let uri = this.state.changed ? this.state.uri : this.props.value;\n                uri = uri ? (uri + ',' + data.path) : data.path;\n                this.setState({\n                    uri: uri,\n                    changed: true,\n                    loading: false\n                }, () => {\n                    this.props.form.value(this.props.name, this.state.uri)\n                });\n            });\n        };\n        reader.readAsDataURL(uploader.file);\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, service } from '../http';\nimport { toArray } from '../json';\n\nclass File extends React.Component {\n    state = {\n        list: null,\n        loading: false\n    }\n\n    upload = uploader => {\n        this.setState({ loading: true });\n\n        let reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result || typeof reader.result !== 'string') {\n                return;\n            }\n\n            service('/photon/ctrl/upload', {\n                name: this.props.upload,\n                fileName: uploader.file.name,\n                contentType: uploader.file.type,\n                base64: reader.result.substring(reader.result.indexOf(',') + 1)\n            }).then(data => {\n                this.setState({ loading: false });\n                if (data === null) return;\n\n                if (!data.success) {\n                    message.warn(data.message);\n\n                    return\n                }\n\n                let list = this.list();\n                list.push({\n                    uid: '' + list.length,\n                    name: data.fileName,\n                    uri: data.path,\n                    url: url(data.path),\n                    status: 'done'\n                });\n                this.setState({ list: list }, this.value);\n            });\n        };\n        reader.readAsDataURL(uploader.file);\n    }\n\n    remove = file => {\n        let list = [];\n        for (let f of this.list())\n            if (f.uid !== file.uid)\n                list.push(f);\n        this.setState({ list: list }, this.value);\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            list.push({\n                name: file.name,\n                uri: file.uri\n            });\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n\n    render = () => {\n        return (\n            <Upload fileList={this.list()} customRequest={this.upload} onRemove={this.remove}>\n                {this.state.loading ? <Button disabled={true}><LoadingOutlined /> 上传中</Button> : <Button><UploadOutlined /> 上传</Button>}\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { PaperClipOutlined, SyncOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + value;\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1;\n            else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => this.values[name] = value;\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let item = {\n                key: prop.name,\n                className: 'console-form-item console-form-item-' + (items.length % 2 === 0 ? 'even' : 'odd'),\n                label: prop.label\n            };\n            if (prop.type && prop.type.startsWith('read-only')) {\n                items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n            } else if (prop.type === 'image') {\n                items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'file') {\n                items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'dselect') {\n                items.push(<Form.Item {...item}><DSelect list={prop.list} parameter={prop.parameter} name={prop.name} value={this.state[prop.name]} vname={prop.vname} lname={prop.lname} form={this} /></Form.Item>);\n            } else if (prop.type === 'refresh') {\n                items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n            } else if (prop.type === 'editor') {\n                items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'html') {\n                items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n            } else if (prop.type === 'agreement') {\n                let value = this.state[prop.agreement] || { uri: '', name: '' };\n                if (value) {\n                    let label = value.name;\n                    let index = label.lastIndexOf('.');\n                    if (index > -1) label = label.substring(0, index);\n                    item.className += ' console-form-agreement';\n                    item.label = 'agreement';\n                    items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n                }\n            } else if (prop.type === 'category') {\n                let list = prop.category;\n                if (!list && this.props.parameter && this.props.parameter.key)\n                    list = this.props.parameter.key;\n                items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n            } else if (prop.type === 'user') {\n                items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n            } else {\n                if (prop.type === 'switch')\n                    item.valuePropName = 'checked';\n                items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n            }\n        }\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state} >\n                {items}\n                < Form.Item className=\"console-form-toolbar\" label=\"toolbar\" > {this.toolbar()}</Form.Item>\n            </Form >\n        );\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file') {\n            let files = [];\n            try {\n                for (let file of toArray(value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: index });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            let keys = Object.keys(prop.values);\n            for (let index in keys)\n                options.push({ label: prop.values[keys[index]], value: keys[index] });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service)).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/list', { key: this.key() }).then(data => {\n        if (data === null) return null;\n\n        let kvs = {};\n        for (let kv of data) {\n            kvs[kv.key] = kv.value;\n        }\n\n        return kvs;\n    });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.portrait ? <Avatar src={url(this.props.user.portrait)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;","const toMoney = function (value, empty) {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = function (value) {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = function (value) {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = function (value) {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent\n};"],"sourceRoot":""}