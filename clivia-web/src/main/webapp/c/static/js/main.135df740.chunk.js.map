{"version":3,"sources":["console/category.jsx","console/user.jsx","http.js","console/grid.jsx","console/dselect.jsx","console/numeric.js","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/upload.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","json.js","console/meta.js"],"names":["Category","props","format","target","source","length","category","element","title","name","value","id","children","push","change","setState","form","render","treeData","state","list","treeDefaultExpandedKeys","onChange","service","key","pointTo","then","data","React","Component","User","uids","className","avatar","map","uid","line","src","url","auth","i","type","uri","body","post","json","code","message","success","warn","fetch","method","headers","header","JSON","stringify","response","loader","loading","localStorage","removeItem","ok","status","statusText","upload","file","psid","FormData","append","getItem","Math","random","toString","substring","setItem","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","dselect","prop","style","eval","condition","e","button","op","onClick","operate","bind","action","reload","search","searches","input","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","indexOf","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","parameter","window","open","location","href","ids","parent","preview","currentTarget","cancel","switch","check","param","pagination","Array","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","createRef","Search","grid","hidden","toMoney","empty","toPercent","imgs","img","toArray","rel","s","defaultChecked","disabled","options","vname","lname","d","option","lines","dataIndex","ops","mops","when","opsize","items","Item","overlay","cols","initialValues","item","span","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","console","log","DSelect","componentDidMount","focus","filter","toLowerCase","showSearch","onFocus","onSearch","filterOption","parseInt","toFixed","fromMoney","round","parseFloat","fromPercent","trim","toInt","defaultValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","thumbnail","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","PaperClipOutlined","progress","strokeColor","strokeWidth","percent","UploadOutlined","replace","exists","f","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","setFieldsValue","k","moment","join","submit","itemIndex","is","child","c","parse","editable","startsWith","fix","move","VerticalAlignTopOutlined","ArrowUpOutlined","ArrowDownOutlined","VerticalAlignBottomOutlined","DeleteOutlined","plus","icon","SyncOutlined","refresh","valuePropName","obj","from","to","moveCopy","mode","allowClear","showTime","time","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","undefined","ks","arr","Setting","kvs","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","text","Promise","resolve","reject","full","sub","ps","fn"],"mappings":"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","file":"static/js/main.135df740.chunk.js","sourcesContent":["import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div key={uid} className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = <Search key=\"search\" props={this.searchProps} toolbar={props.meta.toolbar} grid={this} form={this.form} dselect={this.state.dselect} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values) {\n                if (prop.values instanceof Array)\n                    column.render = model => this.value(model, prop.name);\n                else\n                    column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            } else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(props.body.uri(props.uri, prop.service), prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data.list || data) {\n                        let option = d;\n                        if (lname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + lname);\n                        else\n                            option.label = d[lname];\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.style(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else if (prop.type === 'multi-line') {\n                column.render = model => {\n                    let lines = [];\n                    for (let line of meta.props(props.props, prop.lines)) {\n                        let value = this.value(model, line.name);\n                        if (!value && value !== 0)\n                            continue;\n\n                        if (line.labels)\n                            value = line.labels[value];\n                        else if (line.values && !(line.values instanceof Array))\n                            value = line.values[value];\n                        else if (line.type === 'money' || line.type === 'read-only:money')\n                            value = toMoney(value);\n                        else if (line.type === 'percent' || line.type === 'read-only:percent')\n                            value = toPercent(value);\n                        lines.push(<div key={'line:' + model.id + ':' + line.name}>{line.label} : {this.style(line, model, value)}</div>);\n                    }\n\n                    return lines;\n                }\n            }\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    let opsize = props.meta.opsize || [2];\n                    if (opsize.length < 2)\n                        opsize[1] = 2;\n                    if (mops.length <= opsize[0]) {\n                        for (let i in mops) {\n                            if (i > 0) ops.push(i % opsize[1] === 0 ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                            ops.push(this.action(mops[i], model));\n                        }\n                    } else {\n                        opsize[0]--;\n                        for (let i = 0; i < opsize[0]; i++) {\n                            ops.push(this.action(mops[i], model));\n                            ops.push(i > 0 && (i % opsize[1] === 0) ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                        }\n                        let items = [];\n                        for (let i = opsize[0]; i < mops.length; i++)\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.open('about:blank').location.href = this.props.body.uri(this.props.uri, op.service || op.type) + (model && model.id ? ('?id=' + model.id) : '');\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    value = (name, value) => {\n        console.log(name + \";\" + value);\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.form)\n            props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        this.state = {\n            options: [],\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        } else\n            parameter.value = value;\n        service(this.props.body.uri(this.props.uri, this.props.service), { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('label=' + this.lname);\n                else\n                    label = option[this.lname];\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({ options });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","const toMoney = (value, empty) => {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = value => {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = value => {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = value => {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toInt = (value, defaultValue) => {\n    if (!value) return defaultValue;\n\n    try {\n        return parseInt(value);\n    } catch (e) {\n        return defaultValue;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent,\n    toInt\n};","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            let path = data.thumbnail || data.path;\n            uri = uri ? (uri + ',' + path) : path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button } from 'antd';\nimport { PaperClipOutlined, UploadOutlined } from '@ant-design/icons';\nimport UploadSupport from './upload';\nimport { toArray } from '../json';\nimport { url } from '../http';\n\nclass File extends UploadSupport {\n    state = {\n        list: null\n    }\n\n    render = () => {\n        if (this.props.readonly) {\n            let files = [];\n            try {\n                for (let file of toArray(this.props.value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        let props = {\n            action: this.action,\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { message } from 'antd';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass UploadSupport extends React.Component {\n    action = url('/photon/ctrl-http/upload');\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            this.changed(file, true);\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.changed(file, true);\n                this.value();\n\n                return;\n            }\n\n            this.changed(file, false);\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            this.changed(file, false);\n            this.value();\n\n            return;\n        }\n    }\n\n    changed = (file, replace) => {\n        let list = [];\n        let exists = false;\n        for (let f of this.list()) {\n            if (f.uid === file.uid) {\n                exists = true;\n                if (replace)\n                    list.push(file);\n\n                continue;\n            }\n\n            list.push(f);\n        }\n        if (!exists)\n            list.push(file);\n        this.setState({ list });\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                if (file.response.thumbnail)\n                    file.thumbnail = file.response.thumbnail;\n                file.url = url(file.uri);\n            }\n            let f = {\n                name: file.name,\n                uri: file.uri\n            };\n            if (file.thumbnail)\n                f.thumbnail = file.thumbnail;\n            list.push(f);\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n}\n\nexport default UploadSupport;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, AutoComplete, Input, Button, message } from 'antd';\nimport { SyncOutlined, VerticalAlignTopOutlined, ArrowUpOutlined, ArrowDownOutlined, VerticalAlignBottomOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent, toInt } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n        this.itemIndex = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'auto-complete' && prop.service && prop.vname) {\n                service(prop.service, prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = [];\n                    for (let d of data.list || data)\n                        options.push({ value: d[prop.vname] });\n                    let state = {};\n                    state['auto-complete:' + prop.name] = options;\n                    this.setState(state);\n                });\n            }\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + toInt(value, 0);\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (prop.type === 'array' || prop.type === 'read-only:array') {\n                let array = toArray(value);\n                for (let i = 0; i < array.length; i++)\n                    for (let k in array[i])\n                        values[prop.name + ':' + k + ':' + i] = '' + array[i][k];\n            } else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.labels)\n                values[prop.name] = toInt(value);\n            else if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        this.itemIndex = 0;\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props))\n            this.item(items, prop, '');\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    item = (items, prop, key) => {\n        if (prop.type === 'array' || prop.type === 'read-only:array') {\n            let is = [];\n            let array = toArray(this.state[prop.name]);\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] === null)\n                    continue;\n\n                is.push(<div key={prop.name + ':divider:' + i} className=\"console-form-children-divider\" />);\n                for (let child of prop.children) {\n                    let c = JSON.parse(JSON.stringify(child));\n                    c.name = prop.name + ':' + c.name + ':' + i;\n                    if (prop.type === 'read-only:array' || (prop.editable === 'last' && i < array.length - 1)) {\n                        if (c.type) {\n                            if (!c.type.startsWith('read-only'))\n                                c.type = 'read-only:' + c.type;\n                        } else\n                            c.type = 'read-only';\n                    }\n                    this.item(is, c, prop.name + ':');\n                }\n                if (!prop.fix) {\n                    is.push(\n                        <div key={prop.name + ':toolbar:' + i} className=\"console-form-children-toolbar\">\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, 0)}><VerticalAlignTopOutlined /></div> : null}\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, i - 1)}><ArrowUpOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, i + 1)}><ArrowDownOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, array.length - 1)}><VerticalAlignBottomOutlined /></div> : null}\n                            <div onClick={this.remove.bind(this, prop, i)}><DeleteOutlined /></div>\n                        </div>\n                    );\n                }\n            }\n            items.push(\n                <div key={prop.name} className=\"console-form-children\">\n                    <div className=\"console-form-children-title\">{prop.label}</div>\n                    {is}\n                    {prop.fix ? null : <div className=\"console-form-children-divider\" />}\n                    {prop.fix ? null : <div className=\"console-form-children-plus\"><Button onClick={this.plus.bind(this, prop)}><PlusOutlined /></Button></div>}\n                </div>\n            );\n            this.itemIndex++;\n\n            return;\n        }\n\n        let item = {\n            key: key + prop.name,\n            className: 'console-form-item console-form-item-' + (this.itemIndex++ % 2 === 0 ? 'odd' : 'even'),\n            label: prop.label\n        };\n        if (prop.type && prop.type.startsWith('read-only')) {\n            items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n        } else if (prop.type === 'image') {\n            items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'file') {\n            items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'dselect') {\n            items.push(<Form.Item {...item}><DSelect body={this.props.body} uri={this.props.uri} {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n        } else if (prop.type === 'refresh') {\n            items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n        } else if (prop.type === 'editor') {\n            items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'html') {\n            items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n        } else if (prop.type === 'agreement') {\n            let value = this.state[prop.agreement] || { uri: '', name: '' };\n            if (value) {\n                let label = value.name;\n                let index = label.lastIndexOf('.');\n                if (index > -1) label = label.substring(0, index);\n                item.className += ' console-form-agreement';\n                item.label = 'agreement';\n                items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n            }\n        } else if (prop.type === 'category') {\n            let list = prop.category;\n            if (!list && this.props.parameter && this.props.parameter.key)\n                list = this.props.parameter.key;\n            items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n        } else if (prop.type === 'user') {\n            items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n        } else {\n            if (prop.type === 'switch')\n                item.valuePropName = 'checked';\n            items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n        }\n    }\n\n    plus = (prop) => {\n        let obj = {};\n        for (let child of prop.children)\n            obj[child.name] = '';\n        let data = toArray(this.state[prop.name]);\n        data.push(obj);\n        let state = {};\n        state[prop.name] = data;\n        this.setState(state);\n    }\n\n    move = (prop, length, from, to) => {\n        let state = {};\n        for (let child of prop.children) {\n            if (from < to) {\n                for (let i = 0; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                for (let i = from; i < to; i++)\n                    this.moveCopy(prop, child, state, i + 1, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n            else {\n                for (let i = 0; i < to; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i + 1);\n                for (let i = from + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n        }\n        this.setState(state, () => this.form.current.setFieldsValue(state));\n    }\n\n    moveCopy = (prop, child, state, source, target) => {\n        let value = this.state[prop.name + ':' + child.name + ':' + source];\n        if (value || value === 0)\n            state[prop.name + ':' + child.name + ':' + target] = value;\n    }\n\n    remove = (prop, index) => {\n        let array = toArray(this.state[prop.name]);\n        array[index] = null;\n        let state = {};\n        state[prop.name] = array;\n        this.setState(state);\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file')\n            return <File name={prop.name} upload={prop.upload} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: '' + toInt(index, 0) });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            if (prop.values instanceof Array) {\n                for (let value of prop.values)\n                    options.push({ label: value, value: value });\n            }\n            else if (prop.values instanceof Object) {\n                let keys = Object.keys(prop.values);\n                for (let index in keys) {\n                    let key = keys[index];\n                    options.push({ label: prop.values[key] || key, value: key });\n                }\n            }\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={prop.time || true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        if (prop.type === 'auto-complete') return <AutoComplete options={this.state['auto-complete:' + prop.name]} />\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => {\n        for (let prop of this.props.meta.props) {\n            if (prop.type === 'array') {\n                let labels = {};\n                for (let child of prop.children)\n                    if (child.labels)\n                        labels[child.name] = true;\n\n                let array = [];\n                let state = toArray(this.state[prop.name]);\n                for (let key in values) {\n                    if (values[key] === undefined) {\n                        delete values[key];\n\n                        continue;\n                    }\n\n                    if (key.indexOf(prop.name) > -1) {\n                        let ks = key.split(':');\n                        let index = toInt(ks[2]);\n                        if (state[index] === null) {\n                            delete values[key];\n\n                            continue;\n                        }\n\n                        let obj = array[index] || {};\n                        obj[ks[1]] = labels[ks[1]] ? toInt(values[key]) : values[key];\n                        delete values[key];\n                        array[index] = obj;\n                    }\n                }\n                let arr = [];\n                for (let obj of array)\n                    if (obj)\n                        arr.push(obj);\n                values[prop.name] = JSON.stringify(arr);\n            }\n        }\n\n        return service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n    }\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const toArray = text => {\n    if (!text)\n        return [];\n\n    if (typeof (text) === 'object')\n        return text;\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;"],"sourceRoot":""}