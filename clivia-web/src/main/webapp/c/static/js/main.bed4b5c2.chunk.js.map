{"version":3,"sources":["console/numeric.js","json.js","console/dselect.jsx","console/category.jsx","http.js","console/user.jsx","console/grid.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/meta.js"],"names":["toMoney","value","empty","parseInt","toFixed","e","fromMoney","Math","round","parseFloat","toPercent","fromPercent","length","trim","substring","toArray","text","array","JSON","parse","Array","DSelect","props","filter","input","option","children","toLowerCase","indexOf","change","setState","form","name","render","showSearch","filterOption","onChange","state","list","map","Option","vname","lname","service","parameter","then","data","React","Component","Category","format","target","source","category","element","title","id","push","treeData","treeDefaultExpandedKeys","key","pointTo","uri","body","post","json","code","message","success","warn","fetch","method","headers","header","stringify","response","loader","loading","ok","status","statusText","psid","url","localStorage","getItem","random","toString","setItem","User","uids","className","portrait","uid","line","src","auth","i","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","style","prop","eval","condition","button","op","onClick","operate","bind","action","reload","serviceReload","document","createElement","display","onchange","files","reader","FileReader","file","onload","result","upload","fileName","contentType","base64","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","window","location","href","parent","preview","currentTarget","cancel","switch","check","param","pagination","searchValues","number","count","size","total","pageSize","meta","info","elements","dangerouslySetInnerHTML","__html","search","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","Search","grid","hidden","column","imgs","img","rel","s","defaultChecked","disabled","dataIndex","ops","mops","when","items","Item","overlay","cols","initialValues","item","span","htmlType","onFinish","finish","gutter","options","index","Group","keys","Object","compact","noStyle","initValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","f","UploadOutlined","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","componentDidMount","agreement","getFieldsValue","setFieldsValue","moment","join","submit","startsWith","icon","SyncOutlined","refresh","valuePropName","ref","PaperClipOutlined","mode","allowClear","showTime","permit","TextArea","Password","buttons","one","createRef","Normal","Setting","kvs","kv","replace","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","Promise","resolve","reject","full","sub","ps","fn"],"mappings":"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","file":"static/js/main.bed4b5c2.chunk.js","sourcesContent":["const toMoney = function (value, empty) {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = function (value) {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = function (value) {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = function (value) {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent\n};","const toArray = text => {\n    if (!text)\n        return [];\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        props.form.value(props.name, props.value);\n        service(props.list, props.parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: data,\n                value: props.value\n            });\n        });\n    }\n\n    filter = (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} filterOption={this.filter} onChange={this.change} value={this.state.value}>{this.state.list.map(option => <Select.Option key={option[this.vname]} value={option[this.vname]}>{option[this.lname]}</Select.Option>)}</Select>;\n}\n\nexport default DSelect;","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.portrait()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    portrait = () => {\n        if (!this.props.data.portrait)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.portrait)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport DSelect from './dselect';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.search = <Search key=\"search\" props={meta.props(columns, props.meta.search)} toolbar={props.meta.toolbar} grid={this} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    if (mops.length <= 2) {\n                        for (let op of mops) {\n                            if (ops.length > 0) ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                            ops.push(this.action(op, model));\n                        }\n                    } else {\n                        ops.push(this.action(mops[0], model));\n                        ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                        let items = [];\n                        for (let i = 1; i < mops.length; i++) {\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        }\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.state = {\n            list: [],\n            pagination: false,\n            preview: null\n        };\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.serviceReload(op, model, {});\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.serviceReload(op, model, parameter);\n    }\n\n    serviceReload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = {};\n        if (this.searchValues) {\n            parameter = { ...parameter, ...this.searchValues };\n        }\n        if (pagination) {\n            parameter.pageNum = pagination.current;\n        }\n        if (this.props.parameter) {\n            parameter = { ...parameter, ...this.props.parameter };\n        }\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    values = {};\n\n    value = (name, value) => this.values[name] = value;\n\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'dselect')\n            return <DSelect list={column.list} parameter={column.parameter} name={column.name} vname={column.vname} lname={column.lname} form={this} />;\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    finish = values => {\n        for (let column of this.props.props) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n        this.props.grid.searchValues = { ...values, ...this.values };\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, service } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n\n        let reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result || typeof reader.result !== 'string') {\n                return;\n            }\n\n            service('/photon/ctrl/upload', {\n                name: this.props.upload,\n                fileName: uploader.file.name,\n                contentType: uploader.file.type,\n                base64: reader.result.substring(reader.result.indexOf(',') + 1)\n            }).then(data => {\n                if (data === null) return;\n\n                let uri = this.state.changed ? this.state.uri : this.props.value;\n                uri = uri ? (uri + ',' + data.path) : data.path;\n                this.setState({\n                    uri: uri,\n                    changed: true,\n                    loading: false\n                }, () => {\n                    this.props.form.value(this.props.name, this.state.uri)\n                });\n            });\n        };\n        reader.readAsDataURL(uploader.file);\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, service } from '../http';\nimport { toArray } from '../json';\n\nclass File extends React.Component {\n    state = {\n        list: null,\n        loading: false\n    }\n\n    upload = uploader => {\n        this.setState({ loading: true });\n\n        let reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result || typeof reader.result !== 'string') {\n                return;\n            }\n\n            service('/photon/ctrl/upload', {\n                name: this.props.upload,\n                fileName: uploader.file.name,\n                contentType: uploader.file.type,\n                base64: reader.result.substring(reader.result.indexOf(',') + 1)\n            }).then(data => {\n                this.setState({ loading: false });\n                if (data === null) return;\n\n                if (!data.success) {\n                    message.warn(data.message);\n\n                    return\n                }\n\n                let list = this.list();\n                list.push({\n                    uid: '' + list.length,\n                    name: data.fileName,\n                    uri: data.path,\n                    url: url(data.path),\n                    status: 'done'\n                });\n                this.setState({ list: list }, this.value);\n            });\n        };\n        reader.readAsDataURL(uploader.file);\n    }\n\n    remove = file => {\n        let list = [];\n        for (let f of this.list())\n            if (f.uid !== file.uid)\n                list.push(f);\n        this.setState({ list: list }, this.value);\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            list.push({\n                name: file.name,\n                uri: file.uri\n            });\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n\n    render = () => {\n        return (\n            <Upload fileList={this.list()} customRequest={this.upload} onRemove={this.remove}>\n                {this.state.loading ? <Button disabled={true}><LoadingOutlined /> 上传中</Button> : <Button><UploadOutlined /> 上传</Button>}\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { PaperClipOutlined, SyncOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + value;\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1;\n            else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => this.values[name] = value;\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let item = {\n                key: prop.name,\n                className: 'console-form-item console-form-item-' + (items.length % 2 === 0 ? 'even' : 'odd'),\n                label: prop.label\n            };\n            if (prop.type && prop.type.startsWith('read-only')) {\n                items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n            } else if (prop.type === 'image') {\n                items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'file') {\n                items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'dselect') {\n                items.push(<Form.Item {...item}><DSelect list={prop.list} parameter={prop.parameter} name={prop.name} value={this.state[prop.name]} vname={prop.vname} lname={prop.lname} form={this} /></Form.Item>);\n            } else if (prop.type === 'refresh') {\n                items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n            } else if (prop.type === 'editor') {\n                items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'html') {\n                items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n            } else if (prop.type === 'agreement') {\n                let value = this.state[prop.agreement] || { uri: '', name: '' };\n                if (value) {\n                    let label = value.name;\n                    let index = label.lastIndexOf('.');\n                    if (index > -1) label = label.substring(0, index);\n                    item.className += ' console-form-agreement';\n                    item.label = 'agreement';\n                    items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n                }\n            } else if (prop.type === 'category') {\n                let list = prop.category;\n                if (!list && this.props.parameter && this.props.parameter.key)\n                    list = this.props.parameter.key;\n                items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n            } else if (prop.type === 'user') {\n                items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n            } else {\n                if (prop.type === 'switch')\n                    item.valuePropName = 'checked';\n                items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n            }\n        }\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file') {\n            let files = [];\n            try {\n                for (let file of toArray(value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: index });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            let keys = Object.keys(prop.values);\n            for (let index in keys)\n                options.push({ label: prop.values[keys[index]], value: keys[index] });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service)).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/list', { key: this.key() }).then(data => {\n        if (data === null) return null;\n\n        let kvs = {};\n        for (let kv of data) {\n            kvs[kv.key] = kv.value;\n        }\n\n        return kvs;\n    });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.portrait ? <Avatar src={url(this.props.user.portrait)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;"],"sourceRoot":""}