{"version":3,"sources":["json.js","http.js","console/dselect.jsx","console/category.jsx","console/user.jsx","console/grid.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/meta.js","console/numeric.js"],"names":["toArray","text","array","JSON","parse","Array","e","service","uri","body","post","then","json","code","message","success","data","warn","fetch","method","headers","header","stringify","response","loader","setState","loading","localStorage","removeItem","ok","status","statusText","upload","name","file","psid","FormData","append","url","getItem","length","Math","random","toString","substring","setItem","DSelect","props","componentDidMount","search","focus","value","parameter","i","form","options","list","option","label","vname","lname","indexOf","eval","push","filter","input","toLowerCase","change","render","showSearch","onFocus","onSearch","filterOption","onChange","state","dlname","replace","React","Component","Category","format","target","source","category","element","title","id","children","treeData","treeDefaultExpandedKeys","key","pointTo","User","uids","className","avatar","map","uid","line","src","auth","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","dselect","prop","style","condition","button","op","onClick","operate","bind","action","reload","searches","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","window","location","href","ids","parent","preview","currentTarget","cancel","switch","check","param","pagination","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","createRef","Search","grid","hidden","toMoney","empty","toPercent","imgs","img","rel","s","defaultChecked","disabled","d","dataIndex","ops","mops","when","items","Item","overlay","cols","initialValues","item","span","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","f","progress","strokeColor","strokeWidth","percent","parseFloat","toFixed","UploadOutlined","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","setFieldsValue","moment","fromMoney","fromPercent","join","submit","startsWith","icon","SyncOutlined","refresh","valuePropName","PaperClipOutlined","mode","allowClear","showTime","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","Setting","kvs","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","Promise","resolve","reject","full","sub","ps","fn","parseInt","round","trim"],"mappings":"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","file":"static/js/main.f167487e.chunk.js","sourcesContent":["const toArray = text => {\n    if (!text)\n        return [];\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        let dlname = props.dlname || this.lname;\n\n        let options = [];\n        if (props.value && props.data) {\n            let option = { value: props.value, label: props.value };\n            if (dlname) {\n                if (dlname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('option.label=' + dlname.replace(/option/g, 'props.data'));\n                else\n                    option.label = props.data[dlname];\n            }\n            options.push(option);\n        }\n        this.state = {\n            options: options,\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        }\n        service(this.props.service, { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname) {\n                    if (this.lname.indexOf('+') > -1)\n                        // eslint-disable-next-line\n                        eval('label=' + this.lname);\n                    else\n                        label = option[this.lname];\n                }\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({\n                options: options\n            });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport DSelect from './dselect';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = <Search key=\"search\" props={this.searchProps} toolbar={props.meta.toolbar} grid={this} form={this.form} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(prop.service, prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data) {\n                        let option = { label: d[lname] };\n                        if (prop.dlname && prop.dlname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + prop.dlname);\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.style(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    if (mops.length <= 2) {\n                        for (let op of mops) {\n                            if (ops.length > 0) ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                            ops.push(this.action(op, model));\n                        }\n                    } else {\n                        ops.push(this.action(mops[0], model));\n                        ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                        let items = [];\n                        for (let i = 1; i < mops.length; i++) {\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        }\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'dselect')\n            return <DSelect list={column.list} parameter={column.parameter} name={column.name} vname={column.vname} lname={column.lname} form={this} />;\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            uri = uri ? (uri + ',' + data.path) : data.path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass File extends React.Component {\n    state = {\n        list: null\n    }\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            let list = this.list();\n            for (let f of list)\n                if (f.uid === file.uid)\n                    return;\n\n            list.push(file);\n            this.setState({ list });\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.value();\n\n                return;\n            }\n\n            let list = [];\n            for (let f of this.list())\n                if (f.uid !== file.uid)\n                    list.push(f);\n            this.setState({ list });\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            let list = [];\n            for (let f of this.list()) {\n                if (f.uid === file.uid)\n                    continue;\n\n                list.push(f);\n            }\n            this.setState({ list: list });\n            this.value();\n\n            return;\n        }\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                file.url = url(file.uri);\n            }\n            list.push({\n                name: file.name,\n                uri: file.uri\n            });\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n\n    render = () => {\n        let props = {\n            action: url('/photon/ctrl-http/upload'),\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { PaperClipOutlined, SyncOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + value;\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let item = {\n                key: prop.name,\n                className: 'console-form-item console-form-item-' + (items.length % 2 === 0 ? 'even' : 'odd'),\n                label: prop.label\n            };\n            if (prop.type && prop.type.startsWith('read-only')) {\n                items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n            } else if (prop.type === 'image') {\n                items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'file') {\n                items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'dselect') {\n                items.push(<Form.Item {...item}><DSelect {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n            } else if (prop.type === 'refresh') {\n                items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n            } else if (prop.type === 'editor') {\n                items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'html') {\n                items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n            } else if (prop.type === 'agreement') {\n                let value = this.state[prop.agreement] || { uri: '', name: '' };\n                if (value) {\n                    let label = value.name;\n                    let index = label.lastIndexOf('.');\n                    if (index > -1) label = label.substring(0, index);\n                    item.className += ' console-form-agreement';\n                    item.label = 'agreement';\n                    items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n                }\n            } else if (prop.type === 'category') {\n                let list = prop.category;\n                if (!list && this.props.parameter && this.props.parameter.key)\n                    list = this.props.parameter.key;\n                items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n            } else if (prop.type === 'user') {\n                items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n            } else {\n                if (prop.type === 'switch')\n                    item.valuePropName = 'checked';\n                items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n            }\n        }\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file') {\n            let files = [];\n            try {\n                for (let file of toArray(value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: index });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            let keys = Object.keys(prop.values);\n            for (let index in keys)\n                options.push({ label: prop.values[keys[index]], value: keys[index] });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;","const toMoney = function (value, empty) {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = function (value) {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = function (value) {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = function (value) {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent\n};"],"sourceRoot":""}