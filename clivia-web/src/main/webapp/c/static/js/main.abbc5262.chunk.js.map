{"version":3,"sources":["console/dselect.jsx","console/category.jsx","http.js","console/user.jsx","console/grid.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/meta.js","console/numeric.js","json.js"],"names":["DSelect","props","componentDidMount","search","focus","value","parameter","i","length","name","form","service","then","data","options","list","option","label","vname","lname","indexOf","eval","push","setState","filter","input","toLowerCase","change","render","showSearch","onFocus","onSearch","filterOption","onChange","state","dlname","replace","React","Component","Category","format","target","source","category","element","title","id","children","treeData","treeDefaultExpandedKeys","key","pointTo","uri","body","post","json","code","message","success","warn","fetch","method","headers","header","JSON","stringify","response","loader","loading","localStorage","removeItem","ok","status","statusText","upload","file","psid","FormData","append","url","getItem","Math","random","toString","substring","setItem","User","uids","className","avatar","map","uid","line","src","auth","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","dselect","prop","style","condition","e","button","op","onClick","operate","bind","action","reload","searches","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","window","location","href","ids","parent","preview","currentTarget","cancel","switch","check","param","pagination","Array","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","createRef","Search","grid","hidden","toMoney","empty","toPercent","imgs","img","toArray","rel","s","defaultChecked","disabled","d","dataIndex","ops","mops","when","items","Item","overlay","cols","initialValues","item","span","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","f","progress","strokeColor","strokeWidth","percent","parseFloat","toFixed","UploadOutlined","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","setFieldsValue","moment","fromMoney","fromPercent","join","submit","startsWith","icon","SyncOutlined","refresh","valuePropName","PaperClipOutlined","mode","allowClear","showTime","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","Setting","kvs","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","Promise","resolve","reject","full","sub","ps","fn","parseInt","round","trim","text","parse"],"mappings":"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","file":"static/js/main.abbc5262.chunk.js","sourcesContent":["import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        let dlname = props.dlname || this.lname;\n\n        let options = [];\n        if (props.value && props.data) {\n            let option = { value: props.value, label: props.value };\n            if (dlname) {\n                if (dlname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('option.label=' + dlname.replace(/option/g, 'props.data'));\n                else\n                    option.label = props.data[dlname];\n            }\n            options.push(option);\n        }\n        this.state = {\n            options: options,\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        }\n        service(this.props.service, { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname) {\n                    if (this.lname.indexOf('+') > -1)\n                        // eslint-disable-next-line\n                        eval('label=' + this.lname);\n                    else\n                        label = option[this.lname];\n                }\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({\n                options: options\n            });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport DSelect from './dselect';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = <Search key=\"search\" props={this.searchProps} toolbar={props.meta.toolbar} grid={this} form={this.form} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(prop.service, prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data) {\n                        let option = { label: d[lname] };\n                        if (prop.dlname && prop.dlname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + prop.dlname);\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.style(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    if (mops.length <= 2) {\n                        for (let op of mops) {\n                            if (ops.length > 0) ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                            ops.push(this.action(op, model));\n                        }\n                    } else {\n                        ops.push(this.action(mops[0], model));\n                        ops.push(<Divider key=\"divider\" type=\"vertical\" />);\n                        let items = [];\n                        for (let i = 1; i < mops.length; i++) {\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        }\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'dselect')\n            return <DSelect list={column.list} parameter={column.parameter} name={column.name} vname={column.vname} lname={column.lname} form={this} />;\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            uri = uri ? (uri + ',' + data.path) : data.path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass File extends React.Component {\n    state = {\n        list: null\n    }\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            let list = this.list();\n            for (let f of list)\n                if (f.uid === file.uid)\n                    return;\n\n            list.push(file);\n            this.setState({ list });\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.value();\n\n                return;\n            }\n\n            let list = [];\n            for (let f of this.list())\n                if (f.uid !== file.uid)\n                    list.push(f);\n            this.setState({ list });\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            let list = [];\n            for (let f of this.list()) {\n                if (f.uid === file.uid)\n                    continue;\n\n                list.push(f);\n            }\n            this.setState({ list: list });\n            this.value();\n\n            return;\n        }\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                file.url = url(file.uri);\n            }\n            list.push({\n                name: file.name,\n                uri: file.uri\n            });\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n\n    render = () => {\n        let props = {\n            action: url('/photon/ctrl-http/upload'),\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { PaperClipOutlined, SyncOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + value;\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let item = {\n                key: prop.name,\n                className: 'console-form-item console-form-item-' + (items.length % 2 === 0 ? 'even' : 'odd'),\n                label: prop.label\n            };\n            if (prop.type && prop.type.startsWith('read-only')) {\n                items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n            } else if (prop.type === 'image') {\n                items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'file') {\n                items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'dselect') {\n                items.push(<Form.Item {...item}><DSelect {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n            } else if (prop.type === 'refresh') {\n                items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n            } else if (prop.type === 'editor') {\n                items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n            } else if (prop.type === 'html') {\n                items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n            } else if (prop.type === 'agreement') {\n                let value = this.state[prop.agreement] || { uri: '', name: '' };\n                if (value) {\n                    let label = value.name;\n                    let index = label.lastIndexOf('.');\n                    if (index > -1) label = label.substring(0, index);\n                    item.className += ' console-form-agreement';\n                    item.label = 'agreement';\n                    items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n                }\n            } else if (prop.type === 'category') {\n                let list = prop.category;\n                if (!list && this.props.parameter && this.props.parameter.key)\n                    list = this.props.parameter.key;\n                items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n            } else if (prop.type === 'user') {\n                items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n            } else {\n                if (prop.type === 'switch')\n                    item.valuePropName = 'checked';\n                items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n            }\n        }\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file') {\n            let files = [];\n            try {\n                for (let file of toArray(value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: index });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            let keys = Object.keys(prop.values);\n            for (let index in keys)\n                options.push({ label: prop.values[keys[index]], value: keys[index] });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;","const toMoney = function (value, empty) {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = function (value) {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = function (value) {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = function (value) {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent\n};","const toArray = text => {\n    if (!text)\n        return [];\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}"],"sourceRoot":""}