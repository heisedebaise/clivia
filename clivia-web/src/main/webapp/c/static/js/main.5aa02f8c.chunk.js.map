{"version":3,"sources":["http.js","console/category.jsx","console/user.jsx","console/grid.jsx","console/dselect.jsx","console/dashboard.jsx","console/image.jsx","console/file.jsx","console/upload.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","json.js","console/numeric.js","console/meta.js"],"names":["service","uri","body","post","then","json","code","message","success","data","warn","fetch","method","headers","header","JSON","stringify","response","loader","setState","loading","localStorage","removeItem","ok","status","statusText","upload","name","file","psid","FormData","append","url","getItem","length","Math","random","toString","substring","setItem","Category","props","format","target","source","category","element","title","value","id","children","push","change","form","render","treeData","state","list","treeDefaultExpandedKeys","onChange","key","pointTo","React","Component","User","uids","className","avatar","map","uid","line","src","auth","i","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","dselect","prop","style","eval","condition","e","button","op","onClick","operate","bind","action","reload","search","searches","input","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","indexOf","removeChild","load","current","pageNum","readAsDataURL","appendChild","click","page","parameter","window","location","href","ids","parent","preview","currentTarget","cancel","switch","check","param","pagination","Array","number","count","size","total","pageSize","meta","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","toolbar","columns","dataSource","rowKey","visible","footer","onCancel","width","alt","createRef","Search","grid","hidden","toMoney","empty","toPercent","imgs","img","toArray","rel","s","defaultChecked","disabled","options","vname","lname","d","option","lines","dataIndex","ops","mops","when","opsize","items","Item","overlay","cols","initialValues","item","span","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","compact","noStyle","initValue","console","log","DSelect","componentDidMount","focus","filter","toLowerCase","showSearch","onFocus","onSearch","filterOption","Dashboard","cards","card","statistic","timeout","setTimeout","componentWillUnmount","clearTimeout","j","get","mt","lastIndexOf","Image","changed","remove","uploader","path","thumbnail","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","File","PaperClipOutlined","progress","strokeColor","strokeWidth","percent","parseFloat","toFixed","UploadOutlined","f","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","content","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","setFieldsValue","toInt","k","moment","fromMoney","fromPercent","join","submit","itemIndex","is","child","c","parse","fix","move","VerticalAlignTopOutlined","ArrowUpOutlined","ArrowDownOutlined","VerticalAlignBottomOutlined","DeleteOutlined","plus","startsWith","icon","SyncOutlined","refresh","valuePropName","obj","from","to","moveCopy","mode","allowClear","showTime","time","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","undefined","ks","arr","Setting","kvs","replace","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","this","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","text","parseInt","round","trim","Promise","resolve","reject","full","sub","ps","fn"],"mappings":"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","file":"static/js/main.5aa02f8c.chunk.js","sourcesContent":["import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => root + uri;\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = <Search key=\"search\" props={this.searchProps} toolbar={props.meta.toolbar} grid={this} form={this.form} dselect={this.state.dselect} />;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values) {\n                if (prop.values instanceof Array)\n                    column.render = model => this.value(model, prop.name);\n                else\n                    column.render = model => this.style(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            } else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.style(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.style(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.style(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.style(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.style(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.style(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.style(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(props.body.uri(props.uri, prop.service), prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data.list || data) {\n                        let option = d;\n                        if (lname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + lname);\n                        else\n                            option.label = d[lname];\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.style(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.style(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.style(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.style)\n                column.render = model => this.style(prop, model, this.value(model, prop.name));\n            else if (prop.type === 'multi-line') {\n                column.render = model => {\n                    let lines = [];\n                    for (let line of meta.props(props.props, prop.lines)) {\n                        let value = this.value(model, line.name);\n                        if (!value && value !== 0)\n                            continue;\n\n                        if (line.labels)\n                            value = line.labels[value];\n                        else if (line.values && !(line.values instanceof Array))\n                            value = line.values[value];\n                        else if (line.type === 'money' || line.type === 'read-only:money')\n                            value = toMoney(value);\n                        else if (line.type === 'percent' || line.type === 'read-only:percent')\n                            value = toPercent(value);\n                        lines.push(<div key={'line:' + model.id + ':' + line.name}>{line.label} : {this.style(line, model, value)}</div>);\n                    }\n\n                    return lines;\n                }\n            }\n            else\n                column.dataIndex = (prop.name || '').split('.');\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    let opsize = props.meta.opsize || [2];\n                    if (opsize.length < 2)\n                        opsize[1] = 2;\n                    if (mops.length <= opsize[0]) {\n                        for (let i in mops) {\n                            if (i > 0) ops.push(i % opsize[1] === 0 ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                            ops.push(this.action(mops[i], model));\n                        }\n                    } else {\n                        opsize[0]--;\n                        for (let i = 0; i < opsize[0]; i++) {\n                            ops.push(this.action(mops[i], model));\n                            ops.push(i > 0 && (i % opsize[1] === 0) ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                        }\n                        let items = [];\n                        for (let i = opsize[0]; i < mops.length; i++)\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    style = (prop, model, element) => {\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model && model.id ? { parent: model.id } : {});\n\n            return;\n        }\n\n        if (op.type === 'delete' || op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            window.location.href = op.service;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancel = () => this.setState({ preview: null });\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = pagination => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(this.search);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n\n        return elements;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels) initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    value = (name, value) => {\n        console.log(name + \";\" + value);\n    }\n\n    finish = () => {\n        this.props.grid.load(null);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.form)\n            props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        this.state = {\n            options: [],\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        } else\n            parameter.value = value;\n        service(this.props.body.uri(this.props.uri, this.props.service), { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('label=' + this.lname);\n                else\n                    label = option[this.lname];\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({ options });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            let path = data.thumbnail || data.path;\n            uri = uri ? (uri + ',' + path) : path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { Upload, Button } from 'antd';\nimport { PaperClipOutlined, UploadOutlined } from '@ant-design/icons';\nimport UploadSupport from './upload';\nimport { toArray } from '../json';\nimport { url } from '../http';\n\nclass File extends UploadSupport {\n    state = {\n        list: null\n    }\n\n    render = () => {\n        if (this.props.readonly) {\n            let files = [];\n            try {\n                for (let file of toArray(this.props.value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        let props = {\n            action: this.action,\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { message } from 'antd';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass UploadSupport extends React.Component {\n    action = url('/photon/ctrl-http/upload');\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            let list = this.list();\n            for (let f of list)\n                if (f.uid === file.uid)\n                    return;\n\n            list.push(file);\n            this.setState({ list });\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.value();\n\n                return;\n            }\n\n            let list = [];\n            for (let f of this.list())\n                if (f.uid !== file.uid)\n                    list.push(f);\n            this.setState({ list });\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            let list = [];\n            for (let f of this.list()) {\n                if (f.uid === file.uid)\n                    continue;\n\n                list.push(f);\n            }\n            this.setState({ list: list });\n            this.value();\n\n            return;\n        }\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                if (file.response.thumbnail)\n                    file.thumbnail = file.response.thumbnail;\n                file.url = url(file.uri);\n            }\n            let f = {\n                name: file.name,\n                uri: file.uri\n            };\n            if (file.thumbnail)\n                f.thumbnail = file.thumbnail;\n            list.push(f);\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n}\n\nexport default UploadSupport;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, Input, Button, message } from 'antd';\nimport { SyncOutlined, VerticalAlignTopOutlined, ArrowUpOutlined, ArrowDownOutlined, VerticalAlignBottomOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent, toInt } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n        this.itemIndex = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n        }\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = toInt(value, 0);\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (prop.type === 'array') {\n                let array = toArray(value);\n                for (let i = 0; i < array.length; i++)\n                    for (let k in array[i])\n                        values[prop.name + ':' + k + ':' + i] = array[i][k];\n            } else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        this.itemIndex = 0;\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props))\n            this.item(items, prop, '');\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    item = (items, prop, key) => {\n        if (prop.type === 'array') {\n            let is = [];\n            let array = toArray(this.state[prop.name]);\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] === null)\n                    continue;\n\n                is.push(<div key={prop.name + ':divider:' + i} className=\"console-form-children-divider\" />);\n                for (let child of prop.children) {\n                    let c = JSON.parse(JSON.stringify(child));\n                    c.name = prop.name + ':' + c.name + ':' + i;\n                    this.item(is, c, prop.name + ':');\n                }\n                if (!prop.fix) {\n                    is.push(\n                        <div key={prop.name + ':toolbar:' + i} className=\"console-form-children-toolbar\">\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, 0)}><VerticalAlignTopOutlined /></div> : null}\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, i - 1)}><ArrowUpOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, i + 1)}><ArrowDownOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, array.length - 1)}><VerticalAlignBottomOutlined /></div> : null}\n                            <div onClick={this.remove.bind(this, prop, i)}><DeleteOutlined /></div>\n                        </div>\n                    );\n                }\n            }\n            items.push(\n                <div key={prop.name} className=\"console-form-children\">\n                    <div className=\"console-form-children-title\">{prop.label}</div>\n                    {is}\n                    {prop.fix ? null : <div className=\"console-form-children-divider\" />}\n                    {prop.fix ? null : <div className=\"console-form-children-plus\"><Button onClick={this.plus.bind(this, prop)}><PlusOutlined /></Button></div>}\n                </div>\n            );\n            this.itemIndex++;\n\n            return;\n        }\n\n        let item = {\n            key: key + prop.name,\n            className: 'console-form-item console-form-item-' + (this.itemIndex++ % 2 === 0 ? 'odd' : 'even'),\n            label: prop.label\n        };\n        if (prop.type && prop.type.startsWith('read-only')) {\n            items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n        } else if (prop.type === 'image') {\n            items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'file') {\n            items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'dselect') {\n            items.push(<Form.Item {...item}><DSelect body={this.props.body} uri={this.props.uri} {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n        } else if (prop.type === 'refresh') {\n            items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n        } else if (prop.type === 'editor') {\n            items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'html') {\n            items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n        } else if (prop.type === 'agreement') {\n            let value = this.state[prop.agreement] || { uri: '', name: '' };\n            if (value) {\n                let label = value.name;\n                let index = label.lastIndexOf('.');\n                if (index > -1) label = label.substring(0, index);\n                item.className += ' console-form-agreement';\n                item.label = 'agreement';\n                items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n            }\n        } else if (prop.type === 'category') {\n            let list = prop.category;\n            if (!list && this.props.parameter && this.props.parameter.key)\n                list = this.props.parameter.key;\n            items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n        } else if (prop.type === 'user') {\n            items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n        } else {\n            if (prop.type === 'switch')\n                item.valuePropName = 'checked';\n            items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n        }\n    }\n\n    plus = (prop) => {\n        let obj = {};\n        for (let child of prop.children)\n            obj[child.name] = '';\n        let data = toArray(this.state[prop.name]);\n        data.push(obj);\n        let state = {};\n        state[prop.name] = data;\n        this.setState(state);\n    }\n\n    move = (prop, length, from, to) => {\n        let state = {};\n        for (let child of prop.children) {\n            if (from < to) {\n                for (let i = 0; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                for (let i = from; i < to; i++)\n                    this.moveCopy(prop, child, state, i + 1, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n            else {\n                for (let i = 0; i < to; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i + 1);\n                for (let i = from + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n        }\n        this.setState(state, () => this.form.current.setFieldsValue(state));\n    }\n\n    moveCopy = (prop, child, state, source, target) => {\n        let value = this.state[prop.name + ':' + child.name + ':' + source];\n        if (value || value === 0)\n            state[prop.name + ':' + child.name + ':' + target] = value;\n    }\n\n    remove = (prop, index) => {\n        let array = toArray(this.state[prop.name]);\n        array[index] = null;\n        let state = {};\n        state[prop.name] = array;\n        this.setState(state);\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file')\n            return <File name={prop.name} upload={prop.upload} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        return value || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: toInt(index, 0) });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            if (prop.values instanceof Array) {\n                for (let value of prop.values)\n                    options.push({ label: value, value: value });\n            }\n            else if (prop.values instanceof Object) {\n                let keys = Object.keys(prop.values);\n                for (let index in keys) {\n                    let key = keys[index];\n                    options.push({ label: prop.values[key] || key, value: key });\n                }\n            }\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={prop.time || true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.props.data.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => {\n        for (let prop of this.props.meta.props) {\n            if (prop.type === 'array') {\n                let array = [];\n                let state = toArray(this.state[prop.name]);\n                for (let key in values) {\n                    if (values[key] === undefined) {\n                        delete values[key];\n\n                        continue;\n                    }\n\n                    if (key.indexOf(prop.name) > -1) {\n                        let ks = key.split(':');\n                        let index = toInt(ks[2]);\n                        if (state[index] === null) {\n                            delete values[key];\n\n                            continue;\n                        }\n\n                        let obj = array[index] || {};\n                        obj[ks[1]] = values[key];\n                        delete values[key];\n                        array[index] = obj;\n                    }\n                }\n                let arr = [];\n                for (let obj of array)\n                    if (obj)\n                        arr.push(obj);\n                values[prop.name] = JSON.stringify(arr);\n            }\n        }\n\n        return service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...values, ...this.props.parameter });\n    }\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const toArray = text => {\n    if (!text)\n        return [];\n\n    if (typeof (text) === 'object')\n        return text;\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}","const toMoney = (value, empty) => {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = value => {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = value => {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = value => {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toInt = (value, defaultValue) => {\n    if (!value) return defaultValue;\n\n    try {\n        return parseInt(value);\n    } catch (e) {\n        return defaultValue;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent,\n    toInt\n};","import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;"],"sourceRoot":""}