{"version":3,"sources":["console/meta.js","http.js","console/category.jsx","console/user.jsx","console/grid.jsx","console/dselect.jsx","console/dashboard.jsx","console/image.jsx","console/upload.jsx","console/file.jsx","console/folder.jsx","console/editor.jsx","console/form.jsx","console/setting.jsx","console/crosier.jsx","page/index.jsx","console/body.jsx","console/menu.jsx","console/sign.jsx","console/index.jsx","sign-in/index.jsx","main/index.jsx","serviceWorker.js","index.js","console/numeric.js","json.js"],"names":["meta","get","uri","key","substring","lastIndexOf","map","Promise","resolve","reject","service","then","data","props","full","sub","ps","s","fn","f","name","push","this","body","post","json","code","message","success","warn","fetch","method","headers","header","JSON","stringify","response","loader","setState","loading","localStorage","removeItem","ok","status","statusText","upload","file","psid","FormData","append","url","indexOf","getItem","length","Math","random","toString","setItem","Category","format","target","source","category","element","title","value","id","children","change","form","render","treeData","state","list","treeDefaultExpandedKeys","onChange","pointTo","React","Component","User","uids","className","avatar","uid","line","src","auth","i","type","RangePicker","Grid","model","m","split","n","multiple","values","labels","label","dselect","prop","maxlen","onClick","more","bind","style","eval","condition","e","button","op","operate","action","parent","parameter","load","reload","search","searches","input","document","createElement","display","onchange","files","reader","FileReader","onload","result","fileName","contentType","base64","removeChild","current","pageNum","readAsDataURL","appendChild","click","page","href","encodeURIComponent","window","open","location","ids","delete","preview","currentTarget","cancelPreview","lv","cancelMore","cancelDelete","okDelete","switch","check","param","pagination","Array","number","count","size","total","pageSize","info","searchProps","getFieldsValue","column","elements","dangerouslySetInnerHTML","__html","Search","toolbar","grid","columns","dataSource","rowKey","scroll","visible","footer","onCancel","width","alt","moreContent","onOk","deleteContent","freeze","x","height","querySelector","clientHeight","rows","floor","y","v","items","span","createRef","hidden","toMoney","empty","toPercent","imgs","img","toArray","rel","defaultChecked","disabled","options","vname","lname","d","option","lines","ops","mops","when","opsize","Item","overlay","cols","initialValues","item","htmlType","ref","onFinish","finish","gutter","index","Group","keys","Object","fvs","setFieldsValue","showSearch","filterOption","filter","compact","noStyle","initValue","toLowerCase","DSelect","componentDidMount","focus","onFocus","onSearch","Dashboard","cards","card","statistic","pie","xField","yField","seriesField","series","isGroup","config","colorField","angleField","radius","content","annulus","innerRadius","timeout","setTimeout","componentWillUnmount","clearTimeout","j","mt","dataIndex","Image","changed","remove","uploader","path","thumbnail","cancel","readonly","uris","u","listType","fileList","customRequest","onPreview","onRemove","LoadingOutlined","PlusOutlined","UploadSupport","replace","exists","File","PaperClipOutlined","progress","strokeColor","strokeWidth","percent","parseFloat","toFixed","UploadOutlined","Folder","addonAfter","FolderOutlined","select","getElementById","Wysiwyg","editor","EditorState","createEmpty","draftToHtml","convertToRaw","getCurrentContent","htmlToDraft","createWithContent","ContentState","createFromBlockArray","editorState","localization","locale","onEditorStateChange","layout","labelCol","xs","sm","wrapperCol","Base","agreement","array","binds","toInt","k","moment","fromMoney","fromPercent","join","submit","itemIndex","is","child","c","parse","editable","startsWith","fix","move","VerticalAlignTopOutlined","ArrowUpOutlined","ArrowDownOutlined","VerticalAlignBottomOutlined","DeleteOutlined","plus","icon","SyncOutlined","refresh","valuePropName","obj","from","to","moveCopy","mode","allowClear","showTime","time","permit","TextArea","autoSize","minRows","Password","buttons","one","Normal","undefined","ks","arr","Setting","kvs","Crosier","grade","show","pathes","checked","save","expands","grades","menu","checkable","selectable","showIcon","checkStrictly","defaultExpandedKeys","defaultCheckedKeys","onCheck","nodes","Option","defaultValue","menus","parentKey","all","Page","setIndex","SubMenu","LeftMenu","theme","defaultOpenKeys","defaultSelectedKeys","Sign","sign","password","signOut","nick","user","UserOutlined","LockOutlined","Divider","LogoutOutlined","spinning","Console","minHeight","Sider","logo","Date","getFullYear","Header","Content","SignIn","up","repeat","prefix","color","placeholder","autoFocus","optionType","buttonStyle","signUpEnable","WechatOutlined","AlipayOutlined","WeiboOutlined","GithubOutlined","Footer","Main","zhCN","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","parseInt","round","trim","text"],"mappings":"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","file":"static/js/main.e975ec13.chunk.js","sourcesContent":["import {\n    service\n} from \"../http\";\n\nclass Meta {\n    constructor() {\n        this.map = {};\n    }\n\n    get = uri => {\n        let key = uri.substring(0, uri.lastIndexOf('/') + 1);\n        if (key in this.map) {\n            return new Promise((resolve, reject) => {\n                resolve(this.map[key]);\n            });\n        }\n\n        return service('/console/meta', {\n            key: key\n        }).then(data => {\n            if (data != null) {\n                this.map[key] = data;\n            }\n\n            return data;\n        });\n    }\n\n    props = (full, sub) => {\n        if (!full) return sub;\n\n        if (!sub) return full;\n\n        let ps = [];\n        for (let s of sub) {\n            let fn = {}\n            for (let f of full) {\n                if (f.name === s.name) {\n                    fn = f;\n\n                    break;\n                }\n            }\n            ps.push({\n                ...fn,\n                ...s\n            });\n        }\n\n        return ps;\n    }\n}\n\nconst meta = new Meta();\n\nexport default meta;","import {\n    message\n} from 'antd';\n\nconst root = '';\n\nconst service = (uri, body) => post(uri, body).then(json => {\n    if (json === null) return null;\n\n    if (json.code === 0) {\n        if (json.message)\n            message.success(json.message);\n\n        return json.data;\n    }\n\n    message.warn('[' + json.code + ']' + json.message);\n\n    return null;\n});\n\nconst post = (uri, body) => fetch(root + uri, {\n    method: 'POST',\n    headers: header(),\n    body: JSON.stringify(body)\n}).then(response => {\n    if (post.loader) {\n        post.loader.setState({\n            loading: false\n        });\n    }\n\n    if (uri === '/user/sign-out')\n        localStorage.removeItem('photon-session-id');\n\n    if (response.ok) return response.json();\n\n    message.warn('[' + response.status + ']' + response.statusText);\n\n    return null;\n});\n\nconst upload = (name, file) => {\n    let header = {};\n    psid(header, true);\n    let body = new FormData();\n    body.append(name, file);\n\n    return fetch(root + '/photon/ctrl-http/upload', {\n        method: 'POST',\n        headers: header,\n        body: body\n    }).then(response => {\n        if (post.loader) {\n            post.loader.setState({\n                loading: false\n            });\n        }\n\n        if (response.ok) {\n            return response.json().then(json => {\n                if (json.success)\n                    return json;\n\n                message.warn(json.message);\n\n                return null;\n            });\n        }\n\n        message.warn('[' + response.status + ']' + response.statusText);\n\n        return null;\n    });\n}\n\nconst header = () => {\n    let header = {\n        'Content-Type': 'application/json'\n    };\n    psid(header, true);\n\n    return header;\n}\n\nconst url = uri => {\n    if (uri.indexOf('://') > -1)\n        return uri;\n\n    return root + uri;\n}\n\nconst psid = (header, loading) => {\n    if (loading && post.loader) {\n        post.loader.setState({\n            loading: true\n        });\n    }\n\n    let psid = localStorage.getItem('photon-session-id');\n    if (!psid) {\n        psid = '';\n        while (psid.length < 64) psid += Math.random().toString(36).substring(2);\n        psid = psid.substring(0, 64);\n        localStorage.setItem('photon-session-id', psid);\n    }\n    header['photon-session-id'] = psid;\n}\n\nconst loader = loader => post.loader = loader;\n\nexport {\n    service,\n    post,\n    upload,\n    url,\n    psid,\n    loader\n};","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport { service } from '../http';\n\nclass Category extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: ''\n        };\n        props.form.value(props.name, props.value);\n        service('/category/list', { key: props.list, pointTo: props.pointTo }).then(data => {\n            if (data === null)\n                return;\n\n            let state = {\n                list: [],\n                value: props.value\n            };\n            this.format(state.list, data);\n            this.setState(state);\n        });\n    }\n\n    format = (target, source) => {\n        if (source.length === 0)\n            return;\n\n        for (let category of source) {\n            let element = {\n                title: category.name,\n                value: category.id\n            };\n            if (category.children) {\n                element.children = [];\n                this.format(element.children, category.children);\n            }\n            target.push(element);\n        }\n    }\n\n    change = value => {\n        this.setState({\n            value: value\n        });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <TreeSelect treeData={this.state.list} value={this.state.value} treeDefaultExpandedKeys={[this.state.value]} onChange={this.change} />;\n}\n\nexport default Category;","import React from 'react';\nimport { Avatar } from 'antd';\nimport { url } from '../http';\nimport './user.css'\n\nclass User extends React.Component {\n    render = () => {\n        if (!this.props.data)\n            return null;\n\n        let uids = this.uids();\n\n        return (\n            <div className=\"user\">\n                {this.avatar()}\n                <div className=\"user-info\">\n                    {uids.map(uid => <div key={uid} className=\"user-uid\">{uid}</div>)}\n                    {this.line(uids, 'nick')}\n                    {this.line(uids, 'name')}\n                    {this.line(uids, 'mobile')}\n                    {this.line(uids, 'email')}\n                </div>\n            </div>\n        );\n    }\n\n    avatar = () => {\n        if (!this.props.data.avatar)\n            return null;\n\n        return <div className=\"user-avatar\"><Avatar src={url(this.props.data.avatar)} /></div>;\n    }\n\n    uids = () => {\n        if (!this.props.data.auth || this.props.data.auth.length <= 0)\n            return [];\n\n        let uids = [];\n        for (let i = 0; i < this.props.data.auth.length; i++)\n            if (!this.props.data.auth[i].type)\n                uids.push(this.props.data.auth[i].uid);\n\n        return uids;\n    }\n\n    line = (uids, name) => {\n        let value = this.props.data[name];\n        if (!value)\n            return null;\n\n        for (let uid of uids)\n            if (uid === value)\n                return null;\n\n        return <div className={'user-' + name}>{value}</div>;\n    }\n}\n\nexport default User;","import React from 'react';\nimport { Form, Row, Col, Radio, Select, DatePicker, Input, Button, Table, Divider, Menu, Dropdown, Modal, Switch } from 'antd';\nimport { MinusOutlined, PaperClipOutlined, DashOutlined } from '@ant-design/icons';\nimport { service, url } from '../http';\nimport meta from './meta';\nimport { toMoney, toPercent } from './numeric';\nimport { toArray } from '../json';\nimport Category from './category';\nimport User from './user';\nimport './grid.css';\n\nconst { RangePicker } = DatePicker;\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            dselect: {},\n            pagination: false,\n            preview: null,\n            more: null,\n            delete: null,\n        };\n\n        let columns = meta.props(props.props, props.meta.props);\n        if (props.meta.search && props.meta.search.length > 0) {\n            this.form = React.createRef();\n            this.searchProps = meta.props(columns, props.meta.search);\n            this.search = true;\n        } else if (props.meta.toolbar && props.meta.toolbar.length > 0) {\n            this.toolbar = [];\n            for (let toolbar of props.meta.toolbar) {\n                if (!toolbar.hidden) {\n                    this.toolbar.push(this.button(toolbar));\n                }\n            }\n        }\n\n        this.columns = [];\n        for (let prop of columns) {\n            let column = { key: prop.name, title: prop.label };\n            if (prop.labels)\n                column.render = model => this.format(prop, model, prop.multiple ? this.multiple(prop.labels, this.value(model, prop.name)) : prop.labels[this.value(model, prop.name)]);\n            else if (prop.values) {\n                if (prop.values instanceof Array)\n                    column.render = model => this.format(prop, model, this.value(model, prop.name));\n                else\n                    column.render = model => this.format(prop, model, prop.multiple ? this.multiple(prop.values, this.value(model, prop.name)) : prop.values[this.value(model, prop.name)]);\n            } else if (prop.type === 'money' || prop.type === 'read-only:money')\n                column.render = model => this.format(prop, model, toMoney(this.value(model, prop.name), prop.empty));\n            else if (prop.type === 'percent' || prop.type === 'read-only:percent')\n                column.render = model => this.format(prop, model, toPercent(this.value(model, prop.name)));\n            else if (prop.type === 'image' || prop.type === 'read-only:image') {\n                column.render = model => {\n                    let value = this.value(model, prop.name);\n                    if (value === '') return this.format(prop, model, '');\n\n                    if (value.indexOf(',') === -1) return this.format(prop, model, <img src={url(value)} alt=\"\" onClick={this.preview} />);\n\n                    let imgs = [];\n                    for (let img of value.split(','))\n                        imgs.push(<img key={prop.name + imgs.length} src={url(img)} alt=\"\" onClick={this.preview} />);\n\n                    return this.format(prop, model, imgs);\n                }\n            } else if (prop.type === 'file' || prop.type === 'read-only:file') {\n                column.render = model => {\n                    let files = [];\n                    for (let file of toArray(this.value(model, prop.name))) {\n                        files.push(<div key={'file-' + files.length} className=\"file\">\n                            <PaperClipOutlined />\n                            <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                        </div>);\n                    }\n\n                    return this.format(prop, model, files);\n                }\n            } else if (prop.type === 'switch') {\n                column.render = model => {\n                    let s = { defaultChecked: this.value(model, prop.name) === 1 };\n                    if (prop.service)\n                        s.onChange = this.switch.bind(this, prop, model);\n                    else\n                        s.disabled = true;\n\n                    return this.format(prop, model, <Switch {...s} />);\n                }\n            } else if (prop.type === 'dselect') {\n                service(props.body.uri(props.uri, prop.service), prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = {};\n                    let vname = prop.vname || 'id';\n                    let lname = prop.lname || 'name';\n                    for (let d of data.list || data) {\n                        let option = d;\n                        if (lname.indexOf('+') > -1)\n                            // eslint-disable-next-line\n                            eval('option.label=' + lname);\n                        else\n                            option.label = d[lname];\n                        options[d[vname]] = option.label;\n                    }\n                    let dselect = this.state.dselect;\n                    dselect[prop.name] = options;\n                    this.setState({\n                        dselect: dselect\n                    });\n                });\n                column.render = model => this.format(prop, model, this.dselect(prop, model));\n            } else if (prop.type === 'password')\n                column.render = model => this.format(prop, model, '***');\n            else if (prop.type === 'editor' || prop.type === 'html')\n                column.render = model => this.format(prop, model, <div dangerouslySetInnerHTML={{ __html: this.value(model, prop.name) }} />);\n            else if (prop.type === 'user')\n                column.render = model => this.format(prop, model, <User data={this.value(model, prop.name)} />);\n            else if (prop.type === 'multi-line') {\n                column.render = model => {\n                    let lines = [];\n                    for (let line of meta.props(props.props, prop.lines)) {\n                        let value = this.value(model, line.name);\n                        if (!value && value !== 0)\n                            continue;\n\n                        if (line.labels)\n                            value = line.labels[value];\n                        else if (line.values && !(line.values instanceof Array))\n                            value = line.values[value];\n                        else if (line.type === 'money' || line.type === 'read-only:money')\n                            value = toMoney(value);\n                        else if (line.type === 'percent' || line.type === 'read-only:percent')\n                            value = toPercent(value);\n                        lines.push(<div key={'line:' + model.id + ':' + line.name}>{line.label} : {this.format(line, model, value)}</div>);\n                    }\n\n                    return lines;\n                }\n            }\n            else\n                column.render = model => this.format(prop, model, this.value(model, prop.name));\n            this.columns.push(column);\n        }\n        if (props.meta.ops && props.meta.ops.length > 0) {\n            this.columns.push({\n                title: '',\n                render: model => {\n                    let mops = [];\n                    for (let op of props.meta.ops)\n                        // eslint-disable-next-line\n                        if (!op.when || eval(op.when))\n                            mops.push(op);\n\n                    let ops = [];\n                    let opsize = [2];\n                    if (props.meta.opsize) {\n                        if (props.meta.opsize.length > 0)\n                            opsize[0] = props.meta.opsize[0];\n                        if (props.meta.opsize.length > 1)\n                            opsize[1] = props.meta.opsize[1];\n                    }\n                    if (opsize.length < 2)\n                        opsize[1] = 2;\n                    if (mops.length <= opsize[0]) {\n                        for (let i in mops) {\n                            if (i > 0) ops.push(i % opsize[1] === 0 ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                            ops.push(this.action(mops[i], model));\n                        }\n                    } else {\n                        opsize[0]--;\n                        for (let i = 0; i < opsize[0]; i++) {\n                            ops.push(this.action(mops[i], model));\n                            ops.push(i > 0 && (i % opsize[1] === 0) ? <br key={'br-' + i} /> : <Divider key={'divider-' + i} type=\"vertical\" />);\n                        }\n                        let items = [];\n                        for (let i = opsize[0]; i < mops.length; i++)\n                            items.push(<Menu.Item key={mops[i].label}>{this.action(mops[i], model)}</Menu.Item>);\n                        ops.push(<Dropdown key=\"more\" overlay={<Menu>{items}</Menu>}><span className=\"console-grid-op\">更多</span></Dropdown>);\n                    }\n\n                    return <div className=\"console-grid-ops\">{ops}</div>;\n                }\n            });\n        }\n\n        this.load(null);\n    }\n\n    value = (model, name) => {\n        let m = model;\n        for (let n of name.split('.')) {\n            if (n in m)\n                m = m[n];\n            else\n                return '';\n        }\n\n        if (m === 0)\n            return 0;\n\n        return m || '';\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    dselect = (prop, model) => {\n        let value = this.value(model, prop.name);\n        if (!this.state.dselect || !this.state.dselect[prop.name]) return 'value';\n\n        return this.state.dselect[prop.name][value];\n    }\n\n    format = (prop, model, element) => {\n        let maxlen = prop.maxlen || 64;\n        if (element && typeof (element) === 'string' && element.length && element.length > maxlen)\n            element = <div>{element.substring(0, maxlen)}<span className=\"console-grid-more\" onClick={this.more.bind(this, { label: prop.label, value: element })}><DashOutlined /></span></div>;\n\n        if (prop.style) {\n            for (let style of prop.style) {\n                try {\n                    // eslint-disable-next-line\n                    if (eval(style.condition))\n                        return <div style={style.value}>{element}</div>;\n                } catch (e) { }\n            }\n        }\n\n        return element;\n    }\n\n    button = op => <Button key={op.label} onClick={this.operate.bind(this, op, null)}>{op.label}</Button>;\n\n    action = (op, model) => <span key={op.label} className=\"console-grid-op\" onClick={this.operate.bind(this, op, model)}>{op.label}</span>;\n\n    operate = (op, model) => {\n        if (op.type === 'create' || op.type === 'ucreate') {\n            let data = model && model.id ? { parent: model.id } : {};\n            if (op.parameter) data = { ...data, ...op.parameter };\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, data);\n\n            return;\n        }\n\n        if (op.type === 'delete') {\n            this.setState({\n                delete: {\n                    op: op,\n                    model: model,\n                }\n            });\n\n            return;\n        }\n\n        if (op.reload) {\n            this.reload(op, model, {});\n\n            return;\n        }\n\n        if (op.search) {\n            this.reload(op, model, this.searches());\n\n            return;\n        }\n\n        if (op.type === 'ids') {\n            let ids = '';\n            for (let m of this.state.list)\n                ids += ',' + m.id;\n            if (ids.length > 0)\n                this.reload(op, model, { ids: ids.substring(1) });\n\n            return;\n        }\n\n        if (op.type === 'upload') {\n            let input = document.createElement(\"input\");\n            input.type = 'file';\n            input.style.display = 'none';\n            input.onchange = e => {\n                if (!e.target.files || e.target.files.length === 0) return;\n\n                let reader = new FileReader();\n                let file = e.target.files[0];\n                reader.onload = () => {\n                    if (!reader.result || typeof reader.result !== 'string') {\n                        return;\n                    }\n\n                    service('/photon/ctrl/upload', {\n                        name: op.upload,\n                        fileName: file.name,\n                        contentType: file.type,\n                        base64: reader.result.substring(reader.result.indexOf(',') + 1)\n                    }).then(data => {\n                        document.body.removeChild(input);\n                        if (data === null) return;\n\n                        this.load({ current: this.pageNum || 1 });\n                    });\n                };\n                reader.readAsDataURL(file);\n            };\n            document.body.appendChild(input);\n            input.click();\n\n            return;\n        }\n\n        if (op.type === 'download') {\n            let href = this.props.body.uri(this.props.uri, op.service || op.type);\n            if (model && model.id) href += '?id=' + model.id;\n            else {\n                let values = this.searches();\n                for (let key in values) {\n                    let value = values[key];\n                    if (!value)\n                        continue;\n\n                    href += href.indexOf('?') === -1 ? '?' : '&';\n                    href += key + '=' + encodeURIComponent(value);\n                }\n            }\n            window.open('about:blank').location.href = href;\n\n            return;\n        }\n\n        if (model && model.children)\n            delete model.children;\n\n        if (op.type === 'page')\n            this.props.body.page(op.page, this.props.parameter, model);\n        else\n            this.props.body.load(this.props.body.uri(this.props.uri, op.service || op.type), this.props.parameter, model);\n    }\n\n    preview = e => this.setState({ preview: e.currentTarget.src });\n\n    cancelPreview = () => this.setState({ preview: null });\n\n    more = lv => this.setState({ more: lv });\n\n    cancelMore = () => this.setState({ more: null });\n\n    cancelDelete = () => this.setState({ delete: null });\n\n    okDelete = () => {\n        this.reload(this.state.delete.op, this.state.delete.model, {});\n        this.setState({ delete: null });\n    }\n\n    switch = (op, model, check) => {\n        let parameter = {};\n        parameter[op.name] = check ? 1 : 0;\n        this.reload(op, model, parameter);\n    }\n\n    reload = (op, model, parameter) => {\n        let param = { ...model, ...parameter }\n        if (op.parameter)\n            param = { ...param, ...op.parameter };\n        if (this.props.parameter)\n            param = { ...param, ...this.props.parameter };\n        service(this.props.body.uri(this.props.uri, op.service || op.type), param).then(data => {\n            if (data === null) return;\n\n            this.load({ current: this.pageNum || 1 });\n        });\n    }\n\n    load = (pagination, search) => {\n        let parameter = this.searches();\n        if (pagination)\n            parameter.pageNum = pagination.current;\n        if (this.props.parameter)\n            parameter = { ...parameter, ...this.props.parameter };\n        if (search)\n            parameter['console-grid-search'] = true;\n        service(this.props.uri, parameter).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                list: []\n            }, () => {\n                if (data instanceof Array) {\n                    this.setState({\n                        list: data\n                    });\n                } else {\n                    this.pageNum = data.number;\n                    let state = { list: data.list };\n                    if (data.count <= data.size)\n                        state.pagination = false;\n                    else {\n                        state.pagination = {\n                            total: data.count,\n                            pageSize: data.size,\n                            current: data.number\n                        };\n                    }\n                    if (this.props.meta.info)\n                        state[this.props.meta.info] = data[this.props.meta.info];\n                    this.setState(state);\n                }\n            });\n        });\n    }\n\n    searches = () => {\n        if (!this.form || !this.form.current || !this.searchProps || this.searchProps.length === 0) return {};\n\n        let values = this.form.current.getFieldsValue();\n        for (let column of this.searchProps) {\n            if (column.type === 'range') {\n                values[column.name] = (values[column.name + \"Start\"] || '') + ',' + (values[column.name + \"End\"] || '');\n                delete values[column.name + \"Start\"];\n                delete values[column.name + \"End\"];\n\n                continue;\n            }\n\n            let value = values[column.name];\n            if (!value) continue;\n\n            if (column.type === 'date') {\n                values[column.name] = value.format('YYYY-MM-DD');\n            } else if (column.type === 'date-range') {\n                if (value.length === 0)\n                    values[column.name] = '';\n                else\n                    values[column.name] = value[0].format('YYYY-MM-DD') + ',' + value[1].format('YYYY-MM-DD')\n            }\n        }\n\n        return values;\n    }\n\n    render = () => {\n        let elements = [];\n        if (this.props.meta.info)\n            elements.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        if (this.search) elements.push(<Search key=\"search\" props={this.searchProps} toolbar={this.props.meta.toolbar} grid={this} form={this.form} dselect={this.state.dselect} />);\n        else if (this.toolbar) elements.push(<div key=\"toolbar\" className=\"console-grid-toolbar\">{this.toolbar}</div>);\n        elements.push(<Table key=\"table\" columns={this.columns} dataSource={this.state.list} rowKey=\"id\" pagination={this.state.pagination}\n            onChange={this.load} className=\"console-grid\" scroll={this.scroll()} />);\n        elements.push(\n            <Modal key=\"preview\" visible={this.state.preview != null} footer={null} onCancel={this.cancelPreview} >\n                <img style={{ width: '100%' }} src={this.state.preview} alt=\"\" />\n            </Modal>\n        );\n        elements.push(\n            <Modal key=\"more\" visible={this.state.more} title={this.state.more ? this.state.more.label : ''} onCancel={this.cancelMore} footer={null}>\n                {this.moreContent()}\n            </Modal>\n        );\n        elements.push(\n            <Modal key=\"delete\" visible={this.state.delete} title={this.state.delete ? this.state.delete.op.label : ''} onCancel={this.cancelDelete} onOk={this.okDelete}>\n                {this.deleteContent()}\n            </Modal>\n        );\n\n        return elements;\n    }\n\n    scroll = () => {\n        if (!this.props.meta.freeze)\n            return { x: true };\n\n        let height = document.querySelector('.console-body').clientHeight;\n        let form = document.querySelector('.console-grid-search-form');\n        if (form)\n            height -= form.clientHeight;\n        let rows = Math.floor(height / 55 - 2.5);\n        let len = this.state.list ? this.state.list.length : 0;\n\n        if (len < rows)\n            return { x: true };\n\n        return { x: true, y: 55 * rows };\n    }\n\n    moreContent = () => {\n        if (!this.state.more || !this.state.more.value) return '';\n\n        if (this.state.more.value.indexOf('\\n') === -1) return this.state.more.value;\n\n        let values = [];\n        let key = 0;\n        for (let v of this.state.more.value.split('\\n'))\n            values.push(<div key={'more:' + (key++)}>{v}</div>);\n\n        return values;\n    }\n\n    deleteContent = () => {\n        if (!this.state.delete) return null;\n\n        let items = [];\n        for (let prop of this.props.props) {\n            let value = this.state.delete.model[prop.name];\n            if (prop.labels) value = prop.labels[value];\n            else if (prop.type === 'dselect')\n                value = this.dselect(prop, this.state.delete.model);\n            items.push(<Row key={prop.name}>\n                <Col span={6}>{prop.label}</Col>\n                <Col span={18}>{value}</Col>\n            </Row>);\n        }\n\n        return items;\n    }\n}\n\nclass Search extends React.Component {\n    render = () => {\n        let cols = [];\n        let initialValues = {};\n        for (let column of this.props.props) {\n            if (column.labels || column.values || column.type === 'dselect') initialValues[column.name] = '';\n\n            let item = { label: column.label };\n            if (column.type !== 'range')\n                item.name = column.name;\n            cols.push(\n                <Col span={6} key={column.name}>\n                    <Form.Item {...item}>{this.input(column)}</Form.Item>\n                </Col>\n            );\n        }\n        let toolbar = [];\n        toolbar.push(<Button key=\"search\" type=\"primary\" htmlType=\"submit\">搜索</Button>);\n        if (this.props.toolbar && this.props.toolbar.length > 0) {\n            for (let button of this.props.toolbar) {\n                if (!button.hidden) {\n                    toolbar.push(this.props.grid.button(button));\n                }\n            }\n        }\n        cols.push(<span key=\"toolbar\" className=\"console-grid-search-toolbar\">{toolbar}</span>);\n\n        return (\n            <Form ref={this.props.form} className=\"console-grid-search-form\" initialValues={initialValues} onFinish={this.finish}>\n                <Row gutter={24}>{cols}</Row>\n            </Form>\n        );\n    }\n\n    input = column => {\n        if (column.labels) {\n            let options = [{ label: '全部', value: '' }];\n            for (let index in column.labels)\n                options.push({ label: column.labels[index], value: index });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.values) {\n            let options = [{ label: '全部', value: '' }];\n            let keys = Object.keys(column.values);\n            for (let index in keys)\n                options.push({ label: column.values[keys[index]], value: keys[index] });\n\n            return options.length <= 3 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (column.type === 'dselect') {\n            let options = [{ label: '全部', value: '' }];\n            let values = this.props.dselect[column.name];\n            if (values) {\n                for (let key in values)\n                    options.push({ label: values[key], value: key });\n                if (column.value && this.props.form.current) {\n                    let fvs = this.props.form.current.getFieldsValue();\n                    fvs[column.name] = column.value;\n                    this.props.form.current.setFieldsValue(fvs);\n                }\n            }\n\n            return <Select showSearch={true} options={options} filterOption={this.filter} />;\n        }\n\n        if (column.type === 'date')\n            return <DatePicker />;\n\n        if (column.type === 'date-range')\n            return <RangePicker />;\n\n        if (column.type === 'range') {\n            return (\n                <Input.Group className=\"console-grid-search-range\" compact>\n                    <Form.Item name={column.name + 'Start'} noStyle><Input /></Form.Item>\n                    <span className=\"range-minus\"><MinusOutlined /></span>\n                    <Form.Item name={column.name + 'End'} noStyle><Input /></Form.Item>\n                </Input.Group>\n            );\n        }\n\n        if (column.type === 'switch') {\n            return (\n                <Radio.Group initValue={''}>\n                    <Radio value={''}>全部</Radio>\n                    <Radio value={'0'}>否</Radio>\n                    <Radio value={'1'}>是</Radio>\n                </Radio.Group>\n            );\n        }\n\n        if (column.type === 'category')\n            return <Category list={column.category} pointTo={column.pointTo} name={column.name} form={this} />;\n\n        return <Input />\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    value = (name, value) => {\n    }\n\n    finish = () => {\n        this.props.grid.load(null, true);\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { Select } from 'antd';\nimport { service } from '../http';\n\nclass DSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (props.form)\n            props.form.value(props.name, props.value);\n\n        this.vname = props.vname || 'id';\n        this.lname = props.lname || 'name';\n        this.state = {\n            options: [],\n            value: props.value\n        };\n    }\n\n    componentDidMount = () => {\n        this.search('');\n    }\n\n    focus = () => {\n        this.search('');\n    }\n\n    search = (value) => {\n        let parameter = {};\n        if (this.props.search) {\n            for (let i = 0; i < this.props.search.length; i++) {\n                if (i === this.props.search.length - 1)\n                    parameter[this.props.search[i].name] = value;\n                else if (this.props.search[i].form)\n                    parameter[this.props.search[i].name || this.props.search[i].form] = this.props.form.value(this.props.search[i].form, null);\n            }\n        } else\n            parameter.value = value;\n        service(this.props.body.uri(this.props.uri, this.props.service), { ...parameter, ...this.props.parameter }).then(data => {\n            if (data === null) return;\n\n            let options = []\n            for (let option of data.list || data) {\n                let label = option[this.vname];\n                if (this.lname.indexOf('+') > -1)\n                    // eslint-disable-next-line\n                    eval('label=' + this.lname);\n                else\n                    label = option[this.lname];\n                options.push({\n                    label: label,\n                    value: option[this.vname]\n                });\n            }\n            this.setState({ options });\n        });\n    }\n\n    filter = (input, option) => {\n        if (!option) return false;\n\n        if (input === '') return true;\n\n        return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n\n    change = value => {\n        this.setState({ value: value });\n        this.props.form.value(this.props.name, value);\n    }\n\n    render = () => <Select showSearch={true} onFocus={this.focus} onSearch={this.search} filterOption={this.filter} onChange={this.change} value={this.state.value} options={this.state.options} />;\n}\n\nexport default DSelect;","import React from 'react';\nimport { Row, Col, Card, Statistic, Table } from 'antd';\nimport { Line, Column, Pie } from '@ant-design/charts';\nimport { service } from '../http';\nimport meta from './meta';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            columns: []\n        };\n        this.timeout = null;\n        service('/console/dashboard').then(data => {\n            if (data === null) return;\n\n            let state = { columns: data };\n            for (let i = 0; i < data.length; i++) {\n                for (let j = 0; j < data[i].cards.length; j++) {\n                    let card = data[i].cards[j];\n                    card.key = i + '-' + j;\n                    card.load = false;\n                    state[card.key] = {};\n                    meta.get(card.service).then(mt => {\n                        let m = mt[card.service.substring(card.service.lastIndexOf('/') + 1)];\n                        if (!m) return;\n\n                        card.meta = m;\n                        if (m.type === 'grid') {\n                            card.columns = [];\n                            for (let prop of meta.props(mt.props, m.props)) {\n                                card.columns.push({\n                                    title: prop.label,\n                                    dataIndex: prop.name,\n                                    key: prop.name\n                                });\n                            }\n                        }\n                    });\n                }\n            }\n            this.setState(state, this.load);\n        });\n    }\n\n    render = () => <Row gutter={[8, 8]}>{this.state.columns.map((column, index) => <Col key={index} span={column.span}>{this.cards(index, column.cards)}</Col>)}</Row>;\n\n    cards = (index, cards) => {\n        let elements = [];\n        for (let i = 0; i < cards.length; i++) {\n            if (i > 0)\n                elements.push(<div key={'space:' + index + '-' + i} className=\"console-dashboard-space\" />);\n            elements.push(<Card key={'card:' + index + '-' + i} title={cards[i].title}>{this.card(cards[i])}</Card>);\n        }\n\n        return elements;\n    }\n\n    card = card => {\n        if (!card.load || !card.meta) return null;\n\n        switch (card.meta.type) {\n            case 'statistic':\n                return this.statistic(card);\n            case 'grid':\n                return this.grid(card);\n            case 'line':\n                return this.line(card);\n            case 'column':\n                return this.column(card);\n            case 'pie':\n                return this.pie(card);\n            default:\n                return null;\n        }\n    }\n\n    statistic = card => {\n        if (card.meta.props.length === 0) return null;\n\n        let span = card.meta.props.length < 3 ? (24 / card.meta.props.length) : 8;\n\n        return <Row gutter={[8, 8]}>{card.meta.props.map(prop => <Col key={prop.name} span={span}><Statistic title={prop.label} value={this.state[card.key][prop.name]} /></Col>)}</Row>;\n    }\n\n    grid = card => {\n        let data = this.state[card.key] || {};\n\n        return <Table columns={card.columns} dataSource={data.list || data} pagination={false} />;\n    }\n\n    line = card => {\n        return <Line xField={card.meta.x || 'x'} yField={card.meta.y || 'y'} seriesField={card.meta.series || 'series'} data={this.state[card.key] || {}} />;\n    }\n\n    column = card => {\n        return <Column xField={card.meta.x || 'x'} yField={card.meta.y || 'y'} seriesField={card.meta.series || 'series'} isGroup={true} data={this.state[card.key] || {}} />;\n    }\n\n    pie = card => {\n        let config = {\n            colorField: card.meta.name || 'name',\n            angleField: card.meta.value || 'value',\n            radius: 0.8,\n            label: {\n                type: 'outer',\n                content: '{name} {percentage}'\n            }\n        };\n        if (card.annulus)\n            config.innerRadius = 0.6;\n\n        return <Pie {...config} data={this.state[card.key] || {}} />;\n    }\n\n    load = () => {\n        this.timeout = setTimeout(this.load, 10 * 1000);\n        for (let column of this.state.columns) {\n            for (let card of column.cards) {\n                if (card.load && !card.reload)\n                    continue;\n\n                service(card.service, card.parameter).then(data => {\n                    card.load = true;\n                    if (data === null) return;\n\n                    let state = {};\n                    state[card.key] = data;\n                    this.setState(state);\n                });\n            }\n        }\n    }\n\n    componentWillUnmount = () => {\n        if (this.timeout !== null)\n            clearTimeout(this.timeout);\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { url, upload } from '../http';\nimport './image.css';\n\nclass Image extends React.Component {\n    state = {\n        uri: null,\n        changed: false,\n        loading: false,\n        preview: null,\n        remove: 0\n    };\n\n    upload = uploader => {\n        this.setState({ loading: true });\n        upload(this.props.upload, uploader.file).then(data => {\n            if (data === null) {\n                this.setState({ loading: false });\n\n                return;\n            }\n\n            let uri = this.state.changed ? this.state.uri : this.props.value;\n            let path = data.thumbnail || data.path;\n            uri = uri ? (uri + ',' + path) : path;\n            this.setState({\n                uri: uri,\n                changed: true,\n                loading: false\n            }, () => {\n                this.props.form.value(this.props.name, this.state.uri)\n            });\n        });\n    }\n\n    preview = file => {\n        this.setState({ preview: file.url });\n    }\n\n    cancel = () => {\n        this.setState({ preview: null });\n    }\n\n    remove = file => {\n        if (this.props.readonly) return;\n\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!uri) return;\n\n        let uris = uri.split(',');\n        let u = '';\n        for (let i in uris) {\n            if (i === file.uid) continue;\n\n            if (u.length > 0) u += ',';\n            u += uris[i];\n        }\n        this.setState({\n            uri: u,\n            changed: true\n        }, () => this.props.form.value(this.props.name, this.state.uri));\n    }\n\n    render = () => {\n        let uri = this.state.changed ? this.state.uri : this.props.value;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n        }\n        let list = [];\n        if (uri) {\n            let uris = uri.split(',');\n            for (let i in uris) {\n                list.push({\n                    uid: '' + i,\n                    name: uris[i],\n                    url: url(uris[i]),\n                    status: 'done'\n                });\n            }\n        }\n\n        let props = {\n            listType: 'picture-card',\n            fileList: list,\n            className: 'image-uploader',\n            customRequest: this.upload,\n            onPreview: this.preview\n        }\n        if (!this.props.readonly)\n            props.onRemove = this.remove;\n\n        return (\n            <div className=\"clearfix\">\n                <Upload {...props} >\n                    {this.props.readonly || (this.props.size > 0 && list.length >= this.props.size) ? null : (this.state.loading ? <LoadingOutlined /> : <PlusOutlined />)}\n                </Upload>\n                <Modal visible={this.state.preview != null} footer={null} onCancel={this.cancel}>\n                    <img alt=\"preview\" style={{ width: '100%' }} src={this.state.preview} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Image;","import React from 'react';\nimport { message } from 'antd';\nimport { url } from '../http';\nimport { toArray } from '../json';\n\nclass UploadSupport extends React.Component {\n    action = url('/photon/ctrl-http/upload');\n\n    change = ({ file }) => {\n        if (file.status === 'uploading') {\n            this.changed(file, true);\n\n            return;\n        }\n\n        if (file.status === 'done') {\n            if (file.response.success) {\n                this.changed(file, true);\n                this.value();\n\n                return;\n            }\n\n            this.changed(file, false);\n            message.warn(file.response.message);\n\n            return;\n        }\n\n        if (file.status === 'removed') {\n            this.changed(file, false);\n            this.value();\n\n            return;\n        }\n    }\n\n    changed = (file, replace) => {\n        let list = [];\n        let exists = false;\n        for (let f of this.list()) {\n            if (f.uid === file.uid) {\n                exists = true;\n                if (replace)\n                    list.push(file);\n\n                continue;\n            }\n\n            list.push(f);\n        }\n        if (!exists)\n            list.push(file);\n        this.setState({ list });\n    }\n\n    value = () => {\n        let list = [];\n        for (let file of this.state.list) {\n            if (!file.uri) {\n                file.uri = file.response.path;\n                if (file.response.thumbnail)\n                    file.thumbnail = file.response.thumbnail;\n                file.url = url(file.uri);\n            }\n            let f = {\n                name: file.name,\n                uri: file.uri\n            };\n            if (file.thumbnail)\n                f.thumbnail = file.thumbnail;\n            list.push(f);\n        }\n        this.props.form.value(this.props.name, JSON.stringify(list));\n    }\n\n    list = () => {\n        if (this.state.list !== null)\n            return this.state.list;\n\n        let list = this.props.value ? toArray(this.props.value) : [];\n        for (let i = 0; i < list.length; i++) {\n            list[i].uid = '' + i;\n            list[i].url = url(list[i].uri);\n            list[i].status = 'done';\n        }\n\n        return list;\n    }\n}\n\nexport default UploadSupport;","import React from 'react';\nimport { Upload, Button } from 'antd';\nimport { PaperClipOutlined, UploadOutlined } from '@ant-design/icons';\nimport UploadSupport from './upload';\nimport { toArray } from '../json';\nimport { url } from '../http';\n\nclass File extends UploadSupport {\n    state = {\n        list: null\n    }\n\n    render = () => {\n        if (this.props.readonly) {\n            let files = [];\n            try {\n                for (let file of toArray(this.props.value)) {\n                    files.push(<div key={'file-' + files.length} className=\"console-form-file\">\n                        <PaperClipOutlined />\n                        <a href={url(file.uri)} target=\"_blank\" rel=\"noopener noreferrer\">{file.name}</a>\n                    </div>);\n                }\n            } catch (e) { }\n\n            return files;\n        }\n\n        let props = {\n            action: this.action,\n            name: this.props.upload,\n            multiple: true,\n            progress: {\n                strokeColor: {\n                    '0%': '#108ee9',\n                    '100%': '#87d068',\n                },\n                strokeWidth: 3,\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\n            },\n            fileList: this.list(),\n            onChange: this.change\n        };\n\n        return (\n            <Upload {...props}>\n                <Button><UploadOutlined /> 上传</Button>\n            </Upload>\n        );\n    }\n}\n\nexport default File;","import React from 'react';\nimport { Input } from 'antd';\nimport { FolderOutlined } from '@ant-design/icons';\n\nclass Folder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value\n        };\n    }\n\n    render = () => [\n        <div key={this.props.name + ':file'} className=\"console-form-folder\"><input type=\"file\" id={this.props.name + ':file'} multiple={false} onChange={this.change} /></div>,\n        <Input key={this.props.name + ':input'} addonAfter={<FolderOutlined onClick={this.select} />} value={this.state.value} />\n    ];\n\n    select = () => {\n        document.getElementById(this.props.name + ':file').click();\n    }\n\n    change = (e) => {\n        if (!e || !e.target || !e.target.files || e.target.files.length === 0) return;\n\n        let path = e.target.files[0].path;\n        if (!path) return;\n\n        path = path.substring(0, path.lastIndexOf(e.target.files[0].name));\n        this.props.form.value(this.props.name, path);\n        this.setState({\n            value: path\n        });\n    }\n}\n\nexport default Folder;","import React from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './editor.css';\n\nclass Wysiwyg extends React.Component {\n    state = {\n        editor: EditorState.createEmpty(),\n        changed: false\n    };\n\n    change = state => {\n        this.setState({\n            editor: state,\n            changed: true\n        });\n        this.props.form.value(this.props.name, draftToHtml(convertToRaw(state.getCurrentContent())));\n    }\n\n    render = () => {\n        let state = this.state.editor;\n        if (!this.state.changed && this.props.value) {\n            this.props.form.value(this.props.name, this.props.value);\n            let content = htmlToDraft(this.props.value);\n            if (content)\n                state = EditorState.createWithContent(ContentState.createFromBlockArray(content));\n        }\n\n        return <Editor editorState={state} localization={{ locale: 'zh', }} onEditorStateChange={this.change} />;\n    }\n}\n\nexport default Wysiwyg;","import React from 'react';\nimport { Form, Radio, Checkbox, Select, DatePicker, Switch, AutoComplete, Input, Button, message } from 'antd';\nimport { SyncOutlined, VerticalAlignTopOutlined, ArrowUpOutlined, ArrowDownOutlined, VerticalAlignBottomOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { service } from '../http';\nimport meta from './meta';\nimport { toMoney, fromMoney, toPercent, fromPercent, toInt } from './numeric';\nimport { toArray } from '../json';\nimport Image from './image';\nimport File from './file';\nimport Folder from './folder';\nimport DSelect from './dselect';\nimport Editor from './editor';\nimport Category from './category';\nimport User from './user';\nimport './form.css';\n\nconst layout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 6\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 12\n        }\n    }\n};\n\nclass Base extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n        this.state = props.data || {};\n        this.format(this.state);\n        this.values = {};\n        this.binds = {};\n        this.itemIndex = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.uri && !this.props.data) {\n            this.load().then(data => {\n                if (data === null) return;\n\n                this.data(data);\n            });\n        }\n\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            if (prop.type === 'auto-complete' && prop.service && prop.vname) {\n                service(prop.service, prop.parameter).then(data => {\n                    if (data === null) return;\n\n                    let options = [];\n                    for (let d of data.list || data)\n                        options.push({ value: d[prop.vname] });\n                    let state = {};\n                    state['auto-complete:' + prop.name] = options;\n                    this.setState(state);\n                });\n            }\n            if (prop.type === 'agreement') {\n                service('/keyvalue/object', { key: prop.agreement }).then(data => {\n                    if (data === null) return;\n\n                    let array = toArray(data[prop.agreement]);\n                    if (array.length === 0) return;\n\n                    data[prop.agreement] = array[0];\n                    this.setState(data);\n                });\n            }\n\n            if (prop.bind && prop.service) {\n                if (!this.binds[prop.bind])\n                    this.binds[prop.bind] = [];\n                this.binds[prop.bind].push({ name: prop.name, service: prop.service });\n            }\n        }\n\n        for (let name in this.binds)\n            this.change({ name: name }, { 'target': { 'value': this.state[name] } });\n    }\n\n    data = data => {\n        let values = this.form.current.getFieldsValue();\n        for (let key in values) {\n            values[key] = data[key];\n        }\n        this.format(values);\n        this.form.current.setFieldsValue(values);\n        this.setState(data);\n    }\n\n    format = (values) => {\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.labels)\n                values[prop.name] = '' + toInt(value, 0);\n            else if (prop.type === 'money')\n                values[prop.name] = toMoney(value, prop.empty);\n            else if (prop.type === 'percent')\n                values[prop.name] = toPercent(value);\n            else if (prop.type === 'switch')\n                values[prop.name] = value === 1 || value === '1';\n            else if (prop.type === 'array' || prop.type === 'read-only:array') {\n                let array = toArray(value);\n                for (let i = 0; i < array.length; i++)\n                    for (let k in array[i])\n                        values[prop.name + ':' + k + ':' + i] = '' + array[i][k];\n            } else if (value) {\n                if (prop.type === 'date')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD');\n                else if (prop.type === 'datetime')\n                    values[prop.name] = moment(value, 'YYYY-MM-DD HH:mm:ss');\n            }\n            if (prop.multiple)\n                values[prop.name] = values[prop.name] ? values[prop.name].split(',') : [];\n        }\n    }\n\n    value = (name, value) => {\n        if (value === null) {\n            let values = this.form.current ? this.form.current.getFieldsValue() : {};\n\n            return values[name] || this.values[name];\n        }\n\n        this.values[name] = value;\n    }\n\n    button = mt => {\n        let values = this.form.current.getFieldsValue();\n        for (let prop of meta.props(this.props.props, this.props.meta.props)) {\n            let value = values[prop.name];\n            if (prop.type === 'switch') {\n                values[prop.name] = value ? 1 : 0;\n\n                continue;\n            }\n\n            if (!value && value !== '') {\n                delete values[prop.name];\n\n                continue;\n            };\n\n            if (prop.labels)\n                values[prop.name] = toInt(value);\n            else if (prop.type === 'date')\n                values[prop.name] = value.format(\"YYYY-MM-DD\");\n            else if (prop.type === 'datetime')\n                values[prop.name] = value.format(\"YYYY-MM-DD HH:mm:ss\");\n            else if (prop.type === 'money')\n                values[prop.name] = fromMoney(value);\n            else if (prop.type === 'percent')\n                values[prop.name] = fromPercent(value);\n            else if (prop.multiple)\n                values[prop.name] = values[prop.name].join(',');\n        }\n        if (this.props.data)\n            for (let key in this.props.data)\n                if (!(key in values) && this.props.data[key])\n                    values[key] = this.props.data[key];\n        this.submit(mt, { ...values, ...this.values }).then(data => {\n            if (data === null) return;\n\n            if (mt.reload)\n                this.props.body.load(this.props.uri, this.props.parameter, this.props.data);\n            else if (mt.success)\n                this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter, this.props.data);\n            else if (mt.data)\n                this.data(data);\n            else\n                message.success('操作已完成！');\n        });\n    }\n\n    cancel = mt => {\n        this.props.body.load(this.props.body.uri(this.props.uri, mt.success), this.props.parameter);\n    }\n\n    render = () => {\n        this.itemIndex = 0;\n        let items = [];\n        if (this.props.meta.info)\n            items.push(<div key={'info:' + this.props.meta.info} className=\"console-info\" dangerouslySetInnerHTML={{ __html: this.state[this.props.meta.info] }} />);\n        for (let prop of meta.props(this.props.props, this.props.meta.props))\n            this.item(items, prop, '');\n\n        return (\n            <Form ref={this.form} {...layout} initialValues={this.state}>\n                {items}\n                <Form.Item className=\"console-form-toolbar\" label=\"toolbar\">{this.toolbar()}</Form.Item>\n            </Form>\n        );\n    }\n\n    item = (items, prop, key) => {\n        if (prop.type === 'array' || prop.type === 'read-only:array') {\n            let is = [];\n            let array = toArray(this.state[prop.name]);\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] === null)\n                    continue;\n\n                is.push(<div key={prop.name + ':divider:' + i} className=\"console-form-children-divider\" />);\n                for (let child of prop.children) {\n                    let c = JSON.parse(JSON.stringify(child));\n                    c.name = prop.name + ':' + c.name + ':' + i;\n                    if (prop.type === 'read-only:array' || (prop.editable === 'last' && i < array.length - 1)) {\n                        if (c.type) {\n                            if (!c.type.startsWith('read-only'))\n                                c.type = 'read-only:' + c.type;\n                        } else\n                            c.type = 'read-only';\n                    }\n                    this.item(is, c, prop.name + ':');\n                }\n                if (!prop.fix) {\n                    is.push(\n                        <div key={prop.name + ':toolbar:' + i} className=\"console-form-children-toolbar\">\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, 0)}><VerticalAlignTopOutlined /></div> : null}\n                            {i > 0 ? <div onClick={this.move.bind(this, prop, array.length, i, i - 1)}><ArrowUpOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, i + 1)}><ArrowDownOutlined /></div> : null}\n                            {i < array.length - 1 ? <div onClick={this.move.bind(this, prop, array.length, i, array.length - 1)}><VerticalAlignBottomOutlined /></div> : null}\n                            <div onClick={this.remove.bind(this, prop, i)}><DeleteOutlined /></div>\n                        </div>\n                    );\n                }\n            }\n            items.push(\n                <div key={prop.name} className=\"console-form-children\">\n                    <div className=\"console-form-children-title\">{prop.label}</div>\n                    {is}\n                    {prop.fix ? null : <div className=\"console-form-children-divider\" />}\n                    {prop.fix ? null : <div className=\"console-form-children-plus\"><Button onClick={this.plus.bind(this, prop)}><PlusOutlined /></Button></div>}\n                </div>\n            );\n            this.itemIndex++;\n\n            return;\n        }\n\n        let item = {\n            key: key + prop.name,\n            className: 'console-form-item console-form-item-' + (this.itemIndex++ % 2 === 0 ? 'odd' : 'even'),\n            label: prop.label\n        };\n        if (prop.type && prop.type.startsWith('read-only')) {\n            items.push(<Form.Item {...item}>{this.readonly(prop)}</Form.Item>);\n        } else if (prop.type === 'image') {\n            items.push(<Form.Item {...item}><Image name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'file') {\n            items.push(<Form.Item {...item}><File name={prop.name} upload={prop.upload} size={prop.size || 1} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'folder') {\n            items.push(<Form.Item {...item}><Folder name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'dselect') {\n            items.push(<Form.Item {...item}><DSelect body={this.props.body} uri={this.props.uri} {...prop} value={this.state[prop.name]} data={this.props.data} form={this} /></Form.Item>);\n        } else if (prop.type === 'refresh') {\n            items.push(<Form.Item {...item}>{this.state[prop.name] || ''} {prop.service ? <Button icon={<SyncOutlined alt={prop.label} />} onClick={this.refresh.bind(this, prop)} /> : null}</Form.Item>);\n        } else if (prop.type === 'editor') {\n            items.push(<Form.Item {...item}><Editor name={prop.name} value={this.state[prop.name] || ''} form={this} /></Form.Item>);\n        } else if (prop.type === 'html') {\n            items.push(<Form.Item {...item}><div dangerouslySetInnerHTML={{ __html: this.state[prop.name] || '' }} /></Form.Item>);\n        } else if (prop.type === 'agreement') {\n            let value = this.state[prop.agreement] || { uri: '', name: '' };\n            if (value) {\n                let label = value.name;\n                let index = label.lastIndexOf('.');\n                if (index > -1) label = label.substring(0, index);\n                item.className += ' console-form-agreement';\n                item.label = 'agreement';\n                items.push(<Form.Item {...item}><a href={value.uri + '?filename=' + value.name} target=\"_blank\" rel=\"noopener noreferrer\">{label}</a></Form.Item>);\n            }\n        } else if (prop.type === 'category') {\n            let list = prop.category;\n            if (!list && this.props.parameter && this.props.parameter.key)\n                list = this.props.parameter.key;\n            items.push(<Form.Item {...item}><Category list={list} pointTo={prop.pointTo} name={prop.name} value={this.state[prop.name]} form={this} /></Form.Item>);\n        } else if (prop.type === 'user') {\n            items.push(<Form.Item {...item}><User data={this.state[prop.name]} /></Form.Item>);\n        } else {\n            if (prop.type === 'switch')\n                item.valuePropName = 'checked';\n            items.push(<Form.Item {...item} name={prop.name}>{this.input(prop)}</Form.Item>);\n        }\n    }\n\n    plus = (prop) => {\n        let obj = {};\n        for (let child of prop.children)\n            obj[child.name] = '';\n        let data = toArray(this.state[prop.name]);\n        data.push(obj);\n        let state = {};\n        state[prop.name] = data;\n        this.setState(state);\n    }\n\n    move = (prop, length, from, to) => {\n        let state = {};\n        for (let child of prop.children) {\n            if (from < to) {\n                for (let i = 0; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                for (let i = from; i < to; i++)\n                    this.moveCopy(prop, child, state, i + 1, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n            else {\n                for (let i = 0; i < to; i++)\n                    this.moveCopy(prop, child, state, i, i);\n                this.moveCopy(prop, child, state, from, to);\n                for (let i = to; i < from; i++)\n                    this.moveCopy(prop, child, state, i, i + 1);\n                for (let i = from + 1; i < length; i++)\n                    this.moveCopy(prop, child, state, i, i);\n            }\n        }\n        this.setState(state, () => this.form.current.setFieldsValue(state));\n    }\n\n    moveCopy = (prop, child, state, source, target) => {\n        let value = this.state[prop.name + ':' + child.name + ':' + source];\n        if (value || value === 0)\n            state[prop.name + ':' + child.name + ':' + target] = value;\n    }\n\n    remove = (prop, index) => {\n        let array = toArray(this.state[prop.name]);\n        array[index] = null;\n        let state = {};\n        state[prop.name] = array;\n        this.setState(state);\n    }\n\n    readonly = prop => {\n        let value = this.state[prop.name];\n        if (prop.type === 'read-only:money')\n            return toMoney(value, prop.empty);\n\n        if (prop.type === 'read-only:percent')\n            return toPercent(value);\n\n        if (prop.type === 'read-only:image')\n            return <Image name={prop.name} upload={prop.upload} size={prop.size || 1} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.type === 'read-only:file')\n            return <File name={prop.name} upload={prop.upload} readonly={true} value={this.state[prop.name] || ''} form={this} />;\n\n        if (prop.labels)\n            return prop.multiple ? this.multiple(prop.labels, value) : (prop.labels[value] || '');\n\n        if (prop.values)\n            return prop.multiple ? this.multiple(prop.values, value) : (prop.values[value] || '');\n\n        if (value === 0)\n            return 0;\n\n        if (!value)\n            return '';\n\n        if (typeof value !== 'string' || value.indexOf('\\n') === -1)\n            return value;\n\n        let values = [];\n        let key = 0;\n        for (let v of value.split('\\n'))\n            values.push(<div key={'readonly:' + prop.name + ':' + (key++)}>{v}</div>);\n\n        return values;\n    }\n\n    multiple = (values, value) => {\n        if (!value) return '';\n\n        let labels = '';\n        for (let v of value) {\n            let label = values[v];\n            if (label)\n                labels += ',' + label;\n        }\n\n        return labels.length > 0 ? labels.substring(1) : '';\n    }\n\n    input = prop => {\n        if (prop.labels) {\n            let options = [];\n            for (let index in prop.labels)\n                options.push({ label: prop.labels[index], value: '' + toInt(index, 0) });\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} onChange={this.change.bind(this, prop)} /> : <Select options={options} />;\n        }\n\n        if (prop.values) {\n            let options = [];\n            if (prop.values instanceof Array) {\n                for (let value of prop.values)\n                    options.push({ label: value, value: value });\n            }\n            else if (prop.values instanceof Object) {\n                let keys = Object.keys(prop.values);\n                for (let index in keys) {\n                    let key = keys[index];\n                    options.push({ label: prop.values[key] || key, value: key });\n                }\n            }\n\n            if (prop.multiple)\n                return options.length < 5 ? <Checkbox.Group options={options} /> : <Select options={options} mode=\"multiple\" allowClear />;\n\n            return options.length < 5 ? <Radio.Group options={options} /> : <Select options={options} />;\n        }\n\n        if (prop.type === 'date') return <DatePicker />;\n\n        if (prop.type === 'datetime') return <DatePicker showTime={prop.time || true} />;\n\n        if (prop.type === 'switch') return <Switch disabled={!prop.service && !prop.permit} onChange={this.switch.bind(this, prop)} />;\n\n        if (prop.type === 'text-area') return <Input.TextArea autoSize={{ minRows: 2 }} />;\n\n        if (prop.type === 'password') return <Input.Password />;\n\n        if (prop.type === 'auto-complete') return <AutoComplete options={this.state['auto-complete:' + prop.name]} />\n\n        return <Input />\n    }\n\n    switch = (prop, check) => {\n        this.value(prop.name, check ? 1 : 0);\n    }\n\n    refresh = (prop) => {\n        service(this.props.body.uri(this.props.uri, prop.service), { id: this.state.id }).then(data => {\n            if (data === null) return;\n\n            this.props.body.load(this.props.uri, this.props.parameter, data);\n        });\n    }\n\n    change = (prop, e) => {\n        let binds = this.binds[prop.name];\n        if (!binds) return;\n\n        for (let bind of binds) {\n            let param = {};\n            param[prop.name] = e.target.value;\n            service(this.props.body.uri(this.props.uri, bind.service), param).then(data => {\n                if (data === null) return;\n\n                let state = {};\n                state[bind.name] = data;\n                this.setState(state);\n            });\n        }\n    }\n\n    toolbar = () => {\n        let buttons = [];\n        if (!this.props.meta.toolbar || this.props.meta.toolbar.length <= 0)\n            return buttons;\n\n        let one = this.props.meta.toolbar.length === 1;\n        if (this.props.meta.toolbar) {\n            for (let toolbar of this.props.meta.toolbar) {\n                if (toolbar.hidden) continue;\n\n                let button = {\n                    key: toolbar.label\n                };\n                if (one) {\n                    button.type = 'primary';\n                    button.htmlType = 'submit';\n                }\n                buttons.push(<Button {...button} onClick={this.button.bind(this, toolbar)}>{toolbar.label}</Button>);\n                if (toolbar.success && one)\n                    buttons.push(<Button key=\"cancel\" type=\"dashed\" onClick={this.cancel.bind(this, toolbar)}>取消</Button>);\n            }\n        }\n\n        return buttons;\n    }\n}\n\nclass Normal extends Base {\n    load = () => service(this.props.body.uri(this.props.uri, this.props.meta.service), this.props.parameter);\n\n    submit = (mt, values) => {\n        let data = { ...this.state, ...values }\n        for (let prop of this.props.meta.props) {\n            if (prop.type === 'array') {\n                let labels = {};\n                for (let child of prop.children)\n                    if (child.labels)\n                        labels[child.name] = true;\n\n                let array = [];\n                let state = toArray(this.state[prop.name]);\n                for (let key in data) {\n                    if (data[key] === undefined) {\n                        delete data[key];\n\n                        continue;\n                    }\n\n                    if (key.indexOf(prop.name) > -1) {\n                        let ks = key.split(':');\n                        let index = toInt(ks[2]);\n                        if (state[index] === null) {\n                            delete data[key];\n\n                            continue;\n                        }\n\n                        let obj = array[index] || {};\n                        obj[ks[1]] = labels[ks[1]] ? toInt(data[key]) : data[key];\n                        delete data[key];\n                        array[index] = obj;\n                    }\n                }\n                let arr = [];\n                for (let obj of array)\n                    if (obj)\n                        arr.push(obj);\n                data[prop.name] = JSON.stringify(arr);\n            }\n        }\n\n        return service(this.props.body.uri(this.props.uri, mt.service || mt.type), { ...data, ...this.props.parameter });\n    }\n}\n\nexport default Normal;\n\nexport { Base };","import { service } from '../http';\nimport { Base } from './form';\n\nclass Setting extends Base {\n    load = () => service('/keyvalue/object', { key: this.key() });\n\n    submit = (mt, values) => {\n        let array = [];\n        for (let name in values) {\n            array.push({\n                key: name,\n                value: values[name] || ''\n            });\n        }\n\n        return service('/keyvalue/saves', { kvs: JSON.stringify(array) });\n    }\n\n    key = () => this.props.uri.substring(1).replace(/\\//g, '.') + '.';\n}\n\nexport default Setting;","import React from 'react';\nimport { Select, Tree, Button } from 'antd';\nimport { service } from '../http';\nimport './crosier.css';\n\nclass Crosier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        service('/user/crosier/grades').then(data => {\n            if (data == null) return;\n\n            this.setState({\n                grades: data,\n                grade: 0\n            }, () => this.grade(0));\n        });\n        service('/console/menu', { all: true }).then(data => {\n            if (data === null) return;\n\n            this.setState({ menu: data });\n        });\n    }\n\n    grade = grade => {\n        this.setState({ show: false });\n        service('/user/crosier/pathes', { grade: grade }).then(data => {\n            if (data === null) return;\n\n            this.setState({\n                show: true,\n                grade: grade,\n                pathes: data\n            });\n        });\n    }\n\n    check = e => {\n        this.setState({\n            pathes: e.checked\n        });\n    }\n\n    save = () => {\n        this.setState({ show: false }, () => service('/user/crosier/save', { grade: this.state.grade, pathes: this.state.pathes.join(',,') }).then(data => this.setState({ show: true })));\n    }\n\n    expands = () => {\n        let map = {};\n        for (let path of this.state.pathes) {\n            while (true) {\n                map[path] = true;\n                let index = path.lastIndexOf(';');\n                if (index === -1)\n                    break;\n\n                path = path.substring(0, index);\n            }\n        }\n\n        let expands = [];\n        for (let key in map) {\n            expands.push(key);\n        }\n\n        return expands;\n    }\n\n    render = () => {\n        let elements = [];\n        if (!this.state.grades || this.state.grades.length === 0) return elements;\n\n        elements.push(this.grades());\n        if (this.state.show && this.state.menu && this.state.menu.length > 0)\n            elements.push(<Tree key=\"menu\" checkable={true} selectable={false} showIcon={true} checkStrictly={true}\n                defaultExpandedKeys={this.expands()} defaultCheckedKeys={this.state.pathes} onCheck={this.check} treeData={this.nodes(this.state.menu, '')} />);\n        if (this.props.meta.toolbar && this.props.meta.toolbar.length > 0)\n            elements.push(<div key=\"toolbar\" className=\"console-crosier-toolbar\"><Button type=\"primary\" onClick={this.save}>保存</Button></div>);\n\n        return elements;\n    }\n\n    grades = () => {\n        let options = [];\n        for (let grade of this.state.grades) {\n            options.push(<Select.Option key={grade.grade} value={grade.grade}>{grade.name}</Select.Option>);\n        }\n\n        return <Select key=\"grades\" defaultValue={this.state.grade || 0} style={{ width: '100%' }} onChange={this.grade}>{options}</Select>;\n    }\n\n    nodes = (menus, parentKey) => {\n        let nodes = [];\n        if (!menus || menus.length === 0) return nodes;\n\n        let keys = {};\n        for (let menu of menus) {\n            let key = parentKey + (menu.service || menu.type || menu.label);\n            if (menu.parameter)\n                key += JSON.stringify(menu.parameter);\n            if (key in keys) continue;\n\n            keys[key] = true;\n            nodes.push({\n                key: key,\n                title: menu.label,\n                children: this.nodes(menu.items, key + ';')\n            });\n        }\n\n        return nodes;\n    }\n}\n\nexport default Crosier;","import React from 'react';\nimport './index.css';\n\nclass Page extends React.Component {\n    render = () => {\n        switch (this.props.page) {\n            default:\n                return <div className=\"no-page\">no page</div>;\n        }\n    }\n}\n\nexport default Page;","import React from 'react';\nimport { service } from '../http';\nimport meta from './meta';\nimport Dashboard from './dashboard';\nimport Grid from './grid';\nimport Form from './form';\nimport Setting from './setting';\nimport Crosier from './crosier';\nimport Page from '../page';\n\nclass Body {\n    setIndex = index => this.index = index;\n\n    uri = (uri, service) => {\n        if (!service) return uri;\n\n        if (service.startsWith('/')) return service;\n\n        return uri.substring(0, uri.lastIndexOf('/') + 1) + service;\n    }\n\n    load = (uri, parameter, data) => {\n        if (!uri.startsWith('/')) uri = uri.substring(uri.indexOf('.')).replace(/\\./g, '/');\n        if (uri === '/user/sign-out') {\n            service(uri).then(data => window.location.reload());\n\n            return;\n        }\n\n        if (uri === '/console/dashboard') {\n            this.setState(<Dashboard />);\n\n            return;\n        }\n\n        meta.get(uri).then(mt => {\n            if (mt === null) return;\n\n            let m = mt[uri.substring(uri.lastIndexOf('/') + 1)];\n            if (!m) return;\n\n            if (m.type === 'grid') {\n                this.setState(<Grid props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'form') {\n                this.setState(<Form props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'crosier') {\n                this.setState(<Crosier meta={m} />);\n            } else if (mt.key === 'setting') {\n                this.setState(<Setting props={mt.props} meta={m} uri={uri} parameter={parameter} data={data} body={this} />);\n            } else if (m.type === 'page') {\n                this.page(m.page, parameter, data);\n            }\n        });\n    }\n\n    page = (page, parameter, data) => this.setState(<Page page={page} parameter={parameter} data={data} body={this} />);\n\n    setState = state => this.index.setState({ body: <div /> }, () => this.index.setState({ body: state }));\n}\n\nconst body = new Body();\n\nexport default body;","import React from 'react';\nimport { Menu } from 'antd';\nimport { service } from '../http';\nimport body from './body';\n\nconst { SubMenu } = Menu;\n\nclass LeftMenu extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: []\n        };\n        this.map = {};\n        service('/console/menu').then(data => {\n            if (data === null || data.length === 0) return;\n\n            let item = data[0].service || data[0].page;\n            this.setState({\n                items: data,\n                item: item\n            }, () => this.load(item ? data[0] : data[0].items[0]));\n        });\n    }\n\n    click = e => {\n        this.load(this.map[e.key]);\n    };\n\n    load = item => {\n        if (item.service)\n            body.load(item.service, item.parameter, item.data);\n        else if (item.page)\n            body.page(item.page, item.parameter, item.data);\n    }\n\n    render = () => {\n        if (this.state.items.length === 0) return null;\n\n        return <Menu onClick={this.click} mode=\"inline\" theme=\"dark\" defaultOpenKeys={['0-0']} defaultSelectedKeys={[this.state.item ? '0-0' : '0-0-0']}>{this.menu(this.state.items, '0')}</Menu>;\n    }\n\n    menu = (items, parent) => {\n        let menus = [];\n        if (items.length === 0) return menus;\n\n        for (let i = 0; i < items.length; i++) {\n            let key = parent + '-' + i;\n            let item = items[i];\n            if (item.service || !item.items) {\n                this.map[key] = item;\n                menus.push(<Menu.Item key={key}>{item.label}</Menu.Item>);\n            }\n            else {\n                menus.push(<SubMenu key={key} title={<span>{item.label}</span>} >{this.menu(item.items, key)}</SubMenu>);\n            }\n        }\n\n        return menus;\n    };\n}\n\nexport default LeftMenu;","import React from 'react';\nimport { Spin, Dropdown, Menu, Avatar } from 'antd';\nimport { LockOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { post, url, loader } from '../http';\nimport './sign.css';\n\nclass Sign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { loading: false };\n        loader(this);\n    }\n\n    sign = () => {\n        this.props.body.load('/user/sign', {}, null);\n    }\n\n    password = () => {\n        this.props.body.load('/user/password', {}, {});\n    }\n\n    signOut = () => {\n        post('/user/sign-out').then(json => window.location.reload());\n    }\n\n    render = () => {\n        let nick = this.props.user.nick || 'Clivia UI';\n        let menu = <Menu>\n            <Menu.Item onClick={this.sign}>\n                <UserOutlined />\n                <span>个人信息</span>\n            </Menu.Item>\n            <Menu.Item onClick={this.password}>\n                <LockOutlined />\n                <span>修改密码</span>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item onClick={this.signOut}>\n                <LogoutOutlined />\n                <span>退出</span>\n            </Menu.Item>\n        </Menu>;\n\n        return (\n            <div className=\"console-sign\">\n                <div className=\"console-sign-loading\"><Spin spinning={this.state.loading} /></div>\n                <Dropdown overlay={menu}>\n                    <div className=\"console-sign-avatar\">\n                        {this.props.user.avatar ? <Avatar src={url(this.props.user.avatar)} /> : <Avatar>{nick.substring(0, 1)}</Avatar>}\n                        <span>{nick}</span>\n                    </div>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport default Sign;","import React from 'react';\nimport { Layout } from 'antd';\nimport { url } from '../http';\nimport Menu from './menu';\nimport Sign from './sign';\nimport body from './body';\nimport './index.css';\n\nclass Console extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      body: <div />\n    };\n    body.setIndex(this);\n  }\n\n  render = () => (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider>\n        <div className=\"console-logo\">{this.props.logo ? [<img key=\"img\" src={url(this.props.logo)} alt=\"\" />, <div key=\"div\"></div>] : null}</div>\n        <div className=\"console-menu\"><Menu /></div>\n        <div className=\"console-copyright\">clivia-console &copy; {new Date().getFullYear()}</div>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header className=\"console-header\">\n          <Sign user={this.props.user} body={body} />\n        </Layout.Header>\n        <Layout.Content>\n          <div className=\"console-body\">{this.state.body}</div>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Console;","import React from 'react';\nimport { Layout, Form, Input, Radio, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, GithubOutlined, WechatOutlined, WeiboOutlined, AlipayOutlined } from '@ant-design/icons';\nimport { service } from '../http';\nimport { toArray } from '../json';\nimport './index.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            up: false,\n            grades: []\n        };\n        service('/keyvalue/object', { key: 'setting.agreement.user.sign-up' }).then(data => {\n            if (data === null) return;\n\n            let array = toArray(data['setting.agreement.user.sign-up']);\n            if (array.length === 0) return;\n\n            let agreement = array[0];\n            agreement.label = agreement.name;\n            let index = agreement.name.lastIndexOf('.');\n            if (index > -1)\n                agreement.label = agreement.name.substring(0, index);\n            this.setState({ agreement: agreement });\n        });\n        service('/user/crosier/sign-up-grades').then(data => {\n            if (data === null || data.length <= 1)\n                return;\n\n            this.setState({ grades: data });\n        });\n    }\n\n    finish = values => {\n        if (this.state.up && values.repeat !== values.password) {\n            message.warn('重复密码与密码必须相同！');\n\n            return;\n        }\n\n        values.type = '';\n        service('/user/sign-' + (this.state.up ? 'up' : 'in'), values).then(data => {\n            if (data != null) {\n                window.location.reload();\n            }\n        });\n    };\n\n    change = () => {\n        this.setState({ up: !this.state.up });\n    }\n\n    render() {\n        return (\n            <Layout className=\"sign-in-layout\">\n                <Layout.Content>\n                    <div className=\"sign-in-header\">{document.title}</div>\n                    <div className=\"sign-in-form\">\n                        <Form onFinish={this.finish}>\n                            <Form.Item name=\"uid\"><Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" autoFocus={true} /></Form.Item>\n                            <Form.Item name=\"password\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" /></Form.Item>\n                            {this.state.up ? <Form.Item name=\"repeat\"><Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"重复密码\" /></Form.Item> : null}\n                            {this.state.up && this.state.grades.length > 0 ? <Form.Item label=\"我是\" name=\"grade\"><Radio.Group options={this.state.grades} optionType=\"button\" buttonStyle=\"solid\" /></Form.Item> : null}\n                            {this.state.up && this.state.agreement ? <Form.Item><a href={this.state.agreement.uri + '?filename=' + this.state.agreement.name} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.agreement.label}</a></Form.Item> : null}\n                            <Form.Item><Button type=\"primary\" htmlType=\"submit\" className=\"sign-in-up-button\">{this.state.up ? '提交注册' : '登录'}</Button></Form.Item>\n                            {this.props.signUpEnable ? <Form.Item>\n                                <Button type=\"link\" className=\"sign-in-up-link\" onClick={this.change}>{this.state.up ? '使用已有账户登录' : '注册新账户'}</Button>\n                                <span>其他登录方式</span>\n                                <WechatOutlined className=\"sign-in-third\" />\n                                <AlipayOutlined className=\"sign-in-third\" />\n                                <WeiboOutlined className=\"sign-in-third\" />\n                                <GithubOutlined className=\"sign-in-third\" />\n                            </Form.Item> : null}\n                        </Form>\n                    </div>\n                </Layout.Content>\n                <Layout.Footer className=\"sign-in-footer\">clivia-console &copy; {new Date().getFullYear()}</Layout.Footer>\n            </Layout>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { service, loader } from '../http';\nimport Console from '../console';\nimport SignIn from '../sign-in';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logo: '',\n      signUpEnable: false,\n      user: {}\n    };\n    loader(null);\n  }\n\n  componentDidMount = () => {\n    service('/keyvalue/object', { key: 'setting.global.' }).then(data => {\n      if (data === null) return;\n\n      document.title = data['setting.global.console.title'] || 'Clivia Console';\n      this.setState({\n        logo: data['setting.global.console.logo'],\n        signUpEnable: data['setting.global.sign-up.enable'] === '1'\n      });\n    });\n    service('/user/sign').then(data => this.setState({ user: data }));\n  }\n\n  render = () => (\n    <ConfigProvider locale={zhCN}>\n      {this.state.user.id && this.state.user.id.length === 36 ? <Console logo={this.state.logo} user={this.state.user} /> : <SignIn logo={this.state.logo} signUpEnable={this.state.signUpEnable} />}\n    </ConfigProvider>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const toMoney = (value, empty) => {\n    if (!value) return empty || '';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2);\n    } catch (e) {\n        return '0.00';\n    }\n}\n\nconst fromMoney = value => {\n    if (!value) return 0;\n\n    try {\n        return Math.round(parseFloat(value) * 100) || 0;\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toPercent = value => {\n    if (!value) return '0.00 %';\n\n    try {\n        return (parseInt(value) / 100).toFixed(2) + ' %';\n    } catch (e) {\n        return '0.00 %';\n    }\n}\n\nconst fromPercent = value => {\n    if (!value) return 0;\n\n    try {\n        value = value.trim();\n        let length = value.length;\n        if (length > 1 && value.substring(length - 1) === '%')\n            value = value.substring(0, length - 1).trim();\n\n        return Math.round(parseFloat(value) * 100);\n    } catch (e) {\n        return 0;\n    }\n}\n\nconst toInt = (value, defaultValue) => {\n    if (!value) return defaultValue;\n\n    try {\n        return parseInt(value);\n    } catch (e) {\n        return defaultValue;\n    }\n}\n\nexport {\n    toMoney,\n    fromMoney,\n    toPercent,\n    fromPercent,\n    toInt\n};","const toArray = text => {\n    if (!text)\n        return [];\n\n    if (typeof (text) === 'object')\n        return text;\n\n    try {\n        let array = JSON.parse(text);\n\n        return array instanceof Array ? array : [];\n    } catch (e) {\n        return [];\n    }\n}\n\nexport {\n    toArray\n}"],"sourceRoot":""}